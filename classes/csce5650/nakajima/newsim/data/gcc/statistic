total inst: 81409537
total func: 1221080

====== func statistic ======
0(__start)
	inst: 1.96537e-05 %		func_inst: 16
1(yyparse)
	inst: 1.90926 %		func_inst: 1554320
2(lang_decode_option)
	inst: 0 %		func_inst: 0
3(lang_init)
	inst: 4.91343e-06 %		func_inst: 4
4(lang_finish)
	inst: 0 %		func_inst: 0
5(lang_identify)
	inst: 2.45671e-06 %		func_inst: 2
6(print_lang_statistics)
	inst: 0 %		func_inst: 0
7(lookup_interface)
	inst: 0 %		func_inst: 0
8(is_class_name)
	inst: 0 %		func_inst: 0
9(maybe_objc_check_decl)
	inst: 0 %		func_inst: 0
10(maybe_objc_comptypes)
	inst: 0.000113009 %		func_inst: 92
11(maybe_objc_method_name)
	inst: 0 %		func_inst: 0
12(maybe_building_objc_message_expr)
	inst: 0 %		func_inst: 0
13(recognize_objc_keyword)
	inst: 0 %		func_inst: 0
14(build_objc_string)
	inst: 0 %		func_inst: 0
15(GNU_xref_begin)
	inst: 0 %		func_inst: 0
16(GNU_xref_end)
	inst: 0 %		func_inst: 0
17(is_reserved_word)
	inst: 0 %		func_inst: 0
18(make_pointer_declarator)
	inst: 0.000678053 %		func_inst: 552
19(forget_protocol_qualifiers)
	inst: 0 %		func_inst: 0
20(remember_protocol_qualifiers)
	inst: 0 %		func_inst: 0
21(init_lex)
	inst: 0.00196046 %		func_inst: 1596
22(reinit_parse_for_function)
	inst: 0 %		func_inst: 0
23(yyprint)
	inst: 0 %		func_inst: 0
24(skip_white_space)
	inst: 0.02611 %		func_inst: 21256
25(position_after_white_space)
	inst: 0.00176638 %		func_inst: 1438
26(check_newline)
	inst: 0.0572243 %		func_inst: 46586
27(readescape)
	inst: 0.00539249 %		func_inst: 4390
28(yyerror)
	inst: 0 %		func_inst: 0
29(yylex)
	inst: 1.26272 %		func_inst: 1027972
30(set_yydebug)
	inst: 0 %		func_inst: 0
31(c_decode_option)
	inst: 0 %		func_inst: 0
32(print_lang_decl)
	inst: 0 %		func_inst: 0
33(print_lang_type)
	inst: 0 %		func_inst: 0
34(print_lang_identifier)
	inst: 0 %		func_inst: 0
35(finish_incomplete_decl)
	inst: 0.000270239 %		func_inst: 220
36(global_bindings_p)
	inst: 5.89612e-05 %		func_inst: 48
37(keep_next_level)
	inst: 0 %		func_inst: 0
38(kept_level_p)
	inst: 0.000685423 %		func_inst: 558
39(declare_parm_level)
	inst: 0.000390618 %		func_inst: 318
40(in_parm_level_p)
	inst: 0 %		func_inst: 0
41(pushlevel)
	inst: 0.0110417 %		func_inst: 8989
42(poplevel)
	inst: 0.0150265 %		func_inst: 12233
43(delete_block)
	inst: 0 %		func_inst: 0
44(insert_block)
	inst: 0 %		func_inst: 0
45(set_block)
	inst: 0 %		func_inst: 0
46(push_label_level)
	inst: 0 %		func_inst: 0
47(pop_label_level)
	inst: 0 %		func_inst: 0
48(pushtag)
	inst: 0 %		func_inst: 0
49(duplicate_decls)
	inst: 0.00154773 %		func_inst: 1260
50(pushdecl)
	inst: 0.0433622 %		func_inst: 35301
51(pushdecl_top_level)
	inst: 0 %		func_inst: 0
52(implicitly_declare)
	inst: 0.00087459 %		func_inst: 712
53(redeclaration_error_message)
	inst: 4.91343e-05 %		func_inst: 40
54(lookup_label)
	inst: 0 %		func_inst: 0
55(shadow_label)
	inst: 0 %		func_inst: 0
56(define_label)
	inst: 0 %		func_inst: 0
57(getdecls)
	inst: 0.000105639 %		func_inst: 86
58(gettags)
	inst: 0 %		func_inst: 0
59(pending_xref_error)
	inst: 0.00146175 %		func_inst: 1190
60(lookup_name)
	inst: 0.00920654 %		func_inst: 7495
61(lookup_name_current_level)
	inst: 0.00328708 %		func_inst: 2676
62(init_decl_processing)
	inst: 0.000977772 %		func_inst: 796
63(builtin_function)
	inst: 0.00210909 %		func_inst: 1717
64(shadow_tag)
	inst: 2.94806e-05 %		func_inst: 24
65(shadow_tag_warned)
	inst: 0.0005761 %		func_inst: 469
66(groktypename)
	inst: 0.000283751 %		func_inst: 231
67(groktypename_in_parm_context)
	inst: 0 %		func_inst: 0
68(start_decl)
	inst: 0.00729153 %		func_inst: 5936
69(finish_decl)
	inst: 0.0255461 %		func_inst: 20797
70(maybe_build_cleanup)
	inst: 0 %		func_inst: 0
71(push_parm_decl)
	inst: 0.000982686 %		func_inst: 800
72(clear_parm_order)
	inst: 0.000260412 %		func_inst: 212
73(complete_array_type)
	inst: 0.000756668 %		func_inst: 616
74(grokdeclarator)
	inst: 0.134699 %		func_inst: 109658
75(grokparms)
	inst: 0.00392092 %		func_inst: 3192
76(get_parm_info)
	inst: 0.00700655 %		func_inst: 5704
77(parmlist_tags_warning)
	inst: 0.0022135 %		func_inst: 1802
78(xref_tag)
	inst: 0.0024346 %		func_inst: 1982
79(start_struct)
	inst: 0.000585926 %		func_inst: 477
80(grokfield)
	inst: 0.00142367 %		func_inst: 1159
81(finish_struct)
	inst: 0.0222971 %		func_inst: 18152
82(layout_array_type)
	inst: 0 %		func_inst: 0
83(start_enum)
	inst: 0.000432382 %		func_inst: 352
84(finish_enum)
	inst: 0.00574871 %		func_inst: 4680
85(build_enumerator)
	inst: 0.0100873 %		func_inst: 8212
86(start_function)
	inst: 0.00260535 %		func_inst: 2121
87(c_mark_varargs)
	inst: 0 %		func_inst: 0
88(store_parm_decls)
	inst: 0.00299351 %		func_inst: 2437
89(combine_parm_decls)
	inst: 0 %		func_inst: 0
90(finish_function)
	inst: 0.00068788 %		func_inst: 560
91(push_c_function_context)
	inst: 0 %		func_inst: 0
92(pop_c_function_context)
	inst: 0 %		func_inst: 0
93(field_decl_cmp)
	inst: 0 %		func_inst: 0
94(require_complete_type)
	inst: 0 %		func_inst: 0
95(incomplete_type_error)
	inst: 0 %		func_inst: 0
96(common_type)
	inst: 0.00879627 %		func_inst: 7161
97(comptypes)
	inst: 0.00125292 %		func_inst: 1020
98(function_types_compatible_p)
	inst: 0 %		func_inst: 0
99(type_lists_compatible_p)
	inst: 0 %		func_inst: 0
100(self_promoting_args_p)
	inst: 0 %		func_inst: 0
101(self_promoting_type_p)
	inst: 0 %		func_inst: 0
102(unsigned_type)
	inst: 8.47567e-05 %		func_inst: 69
103(signed_type)
	inst: 1.35119e-05 %		func_inst: 11
104(signed_or_unsigned_type)
	inst: 0.000264097 %		func_inst: 215
105(c_sizeof)
	inst: 0.000990056 %		func_inst: 806
106(c_sizeof_nowarn)
	inst: 0 %		func_inst: 0
107(c_size_in_bytes)
	inst: 0 %		func_inst: 0
108(c_alignof)
	inst: 0 %		func_inst: 0
109(c_alignof_expr)
	inst: 0 %		func_inst: 0
110(default_conversion)
	inst: 0.064108 %		func_inst: 52190
111(lookup_field)
	inst: 0.0149221 %		func_inst: 12148
112(build_component_ref)
	inst: 0.0139959 %		func_inst: 11394
113(build_indirect_ref)
	inst: 0.0139185 %		func_inst: 11331
114(build_array_ref)
	inst: 0.0130832 %		func_inst: 10651
115(build_function_call)
	inst: 0.0172879 %		func_inst: 14074
116(convert_arguments)
	inst: 0.0161861 %		func_inst: 13177
117(parser_build_binary_op)
	inst: 0.00661962 %		func_inst: 5389
118(build_binary_op)
	inst: 0.0482757 %		func_inst: 39301
119(pointer_int_sum)
	inst: 0.00323795 %		func_inst: 2636
120(pointer_diff)
	inst: 0 %		func_inst: 0
121(build_unary_op)
	inst: 0.0191206 %		func_inst: 15566
122(lvalue_p)
	inst: 0.00543794 %		func_inst: 4427
123(lvalue_or_else)
	inst: 0.00365928 %		func_inst: 2979
124(unary_complex_lvalue)
	inst: 0.00280065 %		func_inst: 2280
125(pedantic_lvalue_warning)
	inst: 0 %		func_inst: 0
126(readonly_warning)
	inst: 0 %		func_inst: 0
127(mark_addressable)
	inst: 0.00744999 %		func_inst: 6065
128(build_conditional_expr)
	inst: 0.00084511 %		func_inst: 688
129(build_compound_expr)
	inst: 0.00236582 %		func_inst: 1926
130(internal_build_compound_expr)
	inst: 0.00788605 %		func_inst: 6420
131(build_c_cast)
	inst: 0.00124801 %		func_inst: 1016
132(build_modify_expr)
	inst: 0.0135684 %		func_inst: 11046
133(convert_for_assignment)
	inst: 0.00680141 %		func_inst: 5537
134(warn_for_assignment)
	inst: 0 %		func_inst: 0
135(initializer_constant_valid_p)
	inst: 2.45671e-05 %		func_inst: 20
136(valid_compound_expr_initializer)
	inst: 0 %		func_inst: 0
137(store_init_value)
	inst: 0.0013254 %		func_inst: 1079
138(get_spelling)
	inst: 0 %		func_inst: 0
139(error_init)
	inst: 0 %		func_inst: 0
140(pedwarn_init)
	inst: 0 %		func_inst: 0
141(digest_init)
	inst: 0.00228106 %		func_inst: 1857
142(start_init)
	inst: 0.00111781 %		func_inst: 910
143(finish_init)
	inst: 0.000459406 %		func_inst: 374
144(really_start_incremental_init)
	inst: 0 %		func_inst: 0
145(push_init_level)
	inst: 0 %		func_inst: 0
146(check_init_type_bitfields)
	inst: 0 %		func_inst: 0
147(pop_init_level)
	inst: 0 %		func_inst: 0
148(set_init_index)
	inst: 0 %		func_inst: 0
149(set_init_label)
	inst: 0 %		func_inst: 0
150(output_init_element)
	inst: 0 %		func_inst: 0
151(output_pending_init_elements)
	inst: 0 %		func_inst: 0
152(process_init_element)
	inst: 0 %		func_inst: 0
153(c_expand_asm_operands)
	inst: 0 %		func_inst: 0
154(c_expand_return)
	inst: 0.000326743 %		func_inst: 266
155(c_expand_start_case)
	inst: 4.42209e-05 %		func_inst: 36
156(convert)
	inst: 0.0174083 %		func_inst: 14172
157(affix_data_type)
	inst: 0 %		func_inst: 0
158(gen_formal_list_for_type)
	inst: 0 %		func_inst: 0
159(gen_formal_list_for_func_def)
	inst: 0 %		func_inst: 0
160(gen_type)
	inst: 0 %		func_inst: 0
161(gen_decl)
	inst: 0 %		func_inst: 0
162(gen_aux_info_record)
	inst: 0.00235845 %		func_inst: 1920
163(declare_function_name)
	inst: 0.000503626 %		func_inst: 410
164(declare_hidden_char_array)
	inst: 0.00165828 %		func_inst: 1350
165(combine_strings)
	inst: 0.00595876 %		func_inst: 4851
166(decl_attributes)
	inst: 0.00672403 %		func_inst: 5474
167(init_function_format_info)
	inst: 7.86149e-05 %		func_inst: 64
168(record_function_format)
	inst: 0.000507312 %		func_inst: 413
169(check_function_format)
	inst: 0 %		func_inst: 0
170(check_format_info)
	inst: 0 %		func_inst: 0
171(constant_expression_warning)
	inst: 0.00145929 %		func_inst: 1188
172(overflow_warning)
	inst: 0.00221104 %		func_inst: 1800
173(unsigned_conversion_warning)
	inst: 0.00203784 %		func_inst: 1659
174(convert_and_check)
	inst: 0.000356224 %		func_inst: 290
175(c_expand_expr_stmt)
	inst: 0.00112026 %		func_inst: 912
176(check_case_value)
	inst: 6.38746e-05 %		func_inst: 52
177(type_for_size)
	inst: 0.0029714 %		func_inst: 2419
178(type_for_mode)
	inst: 0.000452035 %		func_inst: 368
179(binary_op_error)
	inst: 0 %		func_inst: 0
180(shorten_compare)
	inst: 0.00790571 %		func_inst: 6436
181(truthvalue_conversion)
	inst: 0.00229457 %		func_inst: 1868
182(get_directive_line)
	inst: 0 %		func_inst: 0
183(c_build_type_variant)
	inst: 0 %		func_inst: 0
184(init_iterators)
	inst: 5.65044e-05 %		func_inst: 46
185(iterator_for_loop_start)
	inst: 0 %		func_inst: 0
186(iterator_for_loop_end)
	inst: 0 %		func_inst: 0
187(iterator_expand)
	inst: 0.0024432 %		func_inst: 1989
188(expand_stmt_with_iterators_1)
	inst: 0.0032576 %		func_inst: 2652
189(collect_iterators)
	inst: 0.117561 %		func_inst: 95706
190(iterator_loop_prologue)
	inst: 0 %		func_inst: 0
191(iterator_loop_epilogue)
	inst: 0 %		func_inst: 0
192(top_level_ixpansion_p)
	inst: 0 %		func_inst: 0
193(istack_sublevel_to_current)
	inst: 0.00651521 %		func_inst: 5304
194(push_iterator_stack)
	inst: 0 %		func_inst: 0
195(pop_iterator_stack)
	inst: 0 %		func_inst: 0
196(add_ixpansion)
	inst: 0 %		func_inst: 0
197(delete_ixpansion)
	inst: 0 %		func_inst: 0
198(sym_lookup)
	inst: 0 %		func_inst: 0
199(bc_sym_write)
	inst: 0 %		func_inst: 0
200(seg_concat)
	inst: 0 %		func_inst: 0
201(bc_seg_write)
	inst: 0 %		func_inst: 0
202(bc_initialize)
	inst: 0 %		func_inst: 0
203(bc_define_pointer)
	inst: 0 %		func_inst: 0
204(bc_begin_function)
	inst: 0 %		func_inst: 0
205(bc_align_bytecode)
	inst: 0 %		func_inst: 0
206(bc_emit_bytecode_const)
	inst: 0 %		func_inst: 0
207(bc_get_bytecode_label)
	inst: 0 %		func_inst: 0
208(bc_emit_bytecode_labeldef)
	inst: 0 %		func_inst: 0
209(bc_emit_bytecode_labelref)
	inst: 0 %		func_inst: 0
210(bc_emit_code_labelref)
	inst: 0 %		func_inst: 0
211(bc_end_function)
	inst: 0 %		func_inst: 0
212(bc_align_const)
	inst: 0 %		func_inst: 0
213(bc_emit_const)
	inst: 0 %		func_inst: 0
214(bc_emit_const_skip)
	inst: 0 %		func_inst: 0
215(bc_emit_const_labeldef)
	inst: 0 %		func_inst: 0
216(bc_emit_const_labelref)
	inst: 0 %		func_inst: 0
217(bc_align_data)
	inst: 0 %		func_inst: 0
218(bc_emit_data)
	inst: 0 %		func_inst: 0
219(bc_emit_data_skip)
	inst: 0 %		func_inst: 0
220(bc_emit_data_labeldef)
	inst: 0 %		func_inst: 0
221(bc_emit_data_labelref)
	inst: 0 %		func_inst: 0
222(bc_emit_common)
	inst: 0 %		func_inst: 0
223(bc_globalize_label)
	inst: 0 %		func_inst: 0
224(bc_text)
	inst: 0 %		func_inst: 0
225(bc_data)
	inst: 0 %		func_inst: 0
226(bc_align)
	inst: 0 %		func_inst: 0
227(bc_emit)
	inst: 0 %		func_inst: 0
228(bc_emit_skip)
	inst: 0 %		func_inst: 0
229(bc_emit_labeldef)
	inst: 0 %		func_inst: 0
230(bc_emit_labelref)
	inst: 0 %		func_inst: 0
231(bc_write_file)
	inst: 0 %		func_inst: 0
232(bc_gen_rtx)
	inst: 0 %		func_inst: 0
233(bc_print_rtl)
	inst: 0 %		func_inst: 0
234(bc_emit_bytecode)
	inst: 0 %		func_inst: 0
235(bc_emit_instruction)
	inst: 0 %		func_inst: 0
236(bc_emit_trampoline)
	inst: 0 %		func_inst: 0
237(bc_xstrdup)
	inst: 0 %		func_inst: 0
238(conversion_reasonable_p)
	inst: 0 %		func_inst: 0
239(deduce_conversion)
	inst: 0 %		func_inst: 0
240(emit_typecode_conversion)
	inst: 0 %		func_inst: 0
241(bc_init_mode_to_code_map)
	inst: 0 %		func_inst: 0
242(preferred_typecode)
	inst: 0 %		func_inst: 0
243(bc_expand_conversion)
	inst: 0 %		func_inst: 0
244(bc_expand_truth_conversion)
	inst: 0 %		func_inst: 0
245(bc_expand_binary_operation)
	inst: 0 %		func_inst: 0
246(bc_expand_unary_operation)
	inst: 0 %		func_inst: 0
247(bc_expand_increment)
	inst: 0 %		func_inst: 0
248(get_run_time)
	inst: 0 %		func_inst: 0
249(print_time)
	inst: 0 %		func_inst: 0
250(count_error)
	inst: 0 %		func_inst: 0
251(pfatal_with_name)
	inst: 0 %		func_inst: 0
252(fatal_io_error)
	inst: 0 %		func_inst: 0
253(fatal_insn_not_found)
	inst: 0 %		func_inst: 0
254(announce_function)
	inst: 6.8788e-05 %		func_inst: 56
255(report_error_function)
	inst: 0 %		func_inst: 0
256(error)
	inst: 0 %		func_inst: 0
257(error_with_file_and_line)
	inst: 0 %		func_inst: 0
258(error_with_decl)
	inst: 0 %		func_inst: 0
259(error_for_asm)
	inst: 0 %		func_inst: 0
260(fatal)
	inst: 0 %		func_inst: 0
261(warning_with_file_and_line)
	inst: 0 %		func_inst: 0
262(warning)
	inst: 0 %		func_inst: 0
263(warning_with_decl)
	inst: 0 %		func_inst: 0
264(warning_for_asm)
	inst: 0 %		func_inst: 0
265(pedwarn)
	inst: 0 %		func_inst: 0
266(pedwarn_with_decl)
	inst: 0 %		func_inst: 0
267(pedwarn_with_file_and_line)
	inst: 0 %		func_inst: 0
268(sorry)
	inst: 0 %		func_inst: 0
269(really_sorry)
	inst: 0 %		func_inst: 0
270(fancy_abort)
	inst: 0 %		func_inst: 0
271(do_abort)
	inst: 0 %		func_inst: 0
272(botch)
	inst: 0 %		func_inst: 0
273(xmalloc)
	inst: 0.00420467 %		func_inst: 3423
274(xrealloc)
	inst: 1.7197e-05 %		func_inst: 14
275(exact_log2_wide)
	inst: 0.00536301 %		func_inst: 4366
276(floor_log2_wide)
	inst: 0.0949213 %		func_inst: 77275
277(set_float_handler)
	inst: 0 %		func_inst: 0
278(push_float_handler)
	inst: 0 %		func_inst: 0
279(pop_float_handler)
	inst: 0 %		func_inst: 0
280(float_signal)
	inst: 0 %		func_inst: 0
281(strip_off_ending)
	inst: 3.31656e-05 %		func_inst: 27
282(output_quoted_string)
	inst: 0 %		func_inst: 0
283(output_file_directive)
	inst: 0 %		func_inst: 0
284(output_lang_identify)
	inst: 3.19373e-05 %		func_inst: 26
285(compile_file)
	inst: 0.0175704 %		func_inst: 14304
286(rest_of_decl_compilation)
	inst: 0.0103305 %		func_inst: 8410
287(rest_of_type_compilation)
	inst: 0.000103182 %		func_inst: 84
288(rest_of_compilation)
	inst: 0.00513331 %		func_inst: 4179
289(main)
	inst: 0.023921 %		func_inst: 19474
290(set_target_switch)
	inst: 0.000181797 %		func_inst: 148
291(print_switch_values)
	inst: 0 %		func_inst: 0
292(decl_name)
	inst: 6.8788e-05 %		func_inst: 56
293(pipe_closed)
	inst: 0 %		func_inst: 0
294(init_obstacks)
	inst: 0.000235845 %		func_inst: 192
295(gcc_obstack_init)
	inst: 0.00027638 %		func_inst: 225
296(save_tree_status)
	inst: 0 %		func_inst: 0
297(restore_tree_status)
	inst: 0 %		func_inst: 0
298(temporary_allocation)
	inst: 0.000128978 %		func_inst: 105
299(end_temporary_allocation)
	inst: 0.000368507 %		func_inst: 300
300(resume_temporary_allocation)
	inst: 0.000206364 %		func_inst: 168
301(saveable_allocation)
	inst: 0.0012087 %		func_inst: 984
302(push_obstacks)
	inst: 0.0229654 %		func_inst: 18696
303(push_obstacks_nochange)
	inst: 0.0437615 %		func_inst: 35626
304(pop_obstacks)
	inst: 0.0346839 %		func_inst: 28236
305(allocation_temporary_p)
	inst: 0.00410271 %		func_inst: 3340
306(permanent_allocation)
	inst: 0.000998654 %		func_inst: 813
307(preserve_data)
	inst: 0.000825456 %		func_inst: 672
308(preserve_initializer)
	inst: 0 %		func_inst: 0
309(rtl_in_current_obstack)
	inst: 6.8788e-05 %		func_inst: 56
310(rtl_in_saveable_obstack)
	inst: 6.14179e-05 %		func_inst: 50
311(oballoc)
	inst: 0.147597 %		func_inst: 120158
312(obfree)
	inst: 0.0218291 %		func_inst: 17771
313(permalloc)
	inst: 0.00125907 %		func_inst: 1025
314(perm_calloc)
	inst: 0 %		func_inst: 0
315(savealloc)
	inst: 0 %		func_inst: 0
316(print_obstack_name)
	inst: 0 %		func_inst: 0
317(debug_obstack)
	inst: 0 %		func_inst: 0
318(object_permanent_p)
	inst: 0 %		func_inst: 0
319(push_momentary)
	inst: 0.0039504 %		func_inst: 3216
320(clear_momentary)
	inst: 0.00460634 %		func_inst: 3750
321(pop_momentary)
	inst: 0.001646 %		func_inst: 1340
322(pop_momentary_nofree)
	inst: 0 %		func_inst: 0
323(suspend_momentary)
	inst: 0.00496993 %		func_inst: 4046
324(resume_momentary)
	inst: 0.00137453 %		func_inst: 1119
325(init_tree_codes)
	inst: 0.00129592 %		func_inst: 1055
326(make_node)
	inst: 0.808576 %		func_inst: 658258
327(copy_node)
	inst: 0.014174 %		func_inst: 11539
328(copy_list)
	inst: 0 %		func_inst: 0
329(get_identifier)
	inst: 0.274296 %		func_inst: 223303
330(start_identifier_warnings)
	inst: 2.45671e-06 %		func_inst: 2
331(set_identifier_size)
	inst: 4.91343e-06 %		func_inst: 4
332(build_int_2_wide)
	inst: 0.0199927 %		func_inst: 16276
333(build_real)
	inst: 0 %		func_inst: 0
334(real_value_from_int_cst)
	inst: 0 %		func_inst: 0
335(build_real_from_int_cst)
	inst: 0 %		func_inst: 0
336(build_string)
	inst: 0.00792782 %		func_inst: 6454
337(build_complex)
	inst: 0 %		func_inst: 0
338(make_tree_vec)
	inst: 0 %		func_inst: 0
339(integer_zerop)
	inst: 0.0309915 %		func_inst: 25230
340(integer_onep)
	inst: 0.00370473 %		func_inst: 3016
341(integer_all_onesp)
	inst: 9.21268e-05 %		func_inst: 75
342(integer_pow2p)
	inst: 0.000113009 %		func_inst: 92
343(real_zerop)
	inst: 0 %		func_inst: 0
344(real_onep)
	inst: 0 %		func_inst: 0
345(real_twop)
	inst: 0 %		func_inst: 0
346(really_constant_p)
	inst: 0 %		func_inst: 0
347(value_member)
	inst: 0 %		func_inst: 0
348(purpose_member)
	inst: 0 %		func_inst: 0
349(binfo_member)
	inst: 0 %		func_inst: 0
350(chain_member)
	inst: 0 %		func_inst: 0
351(list_length)
	inst: 0.0017111 %		func_inst: 1393
352(chainon)
	inst: 0.00619338 %		func_inst: 5042
353(tree_last)
	inst: 0.000137576 %		func_inst: 112
354(nreverse)
	inst: 0.00441963 %		func_inst: 3598
355(listify)
	inst: 0 %		func_inst: 0
356(build_tree_list)
	inst: 0.0131336 %		func_inst: 10692
357(build_decl_list)
	inst: 0 %		func_inst: 0
358(tree_cons)
	inst: 0.0810372 %		func_inst: 65972
359(decl_tree_cons)
	inst: 0 %		func_inst: 0
360(perm_tree_cons)
	inst: 0.00491343 %		func_inst: 4000
361(temp_tree_cons)
	inst: 0 %		func_inst: 0
362(saveable_tree_cons)
	inst: 0.0263605 %		func_inst: 21460
363(size_in_bytes)
	inst: 0.00779024 %		func_inst: 6342
364(int_size_in_bytes)
	inst: 0.0058347 %		func_inst: 4750
365(array_type_nelts)
	inst: 0 %		func_inst: 0
366(staticp)
	inst: 0.00374772 %		func_inst: 3051
367(save_expr)
	inst: 0 %		func_inst: 0
368(contains_placeholder_p)
	inst: 0.00207592 %		func_inst: 1690
369(substitute_in_expr)
	inst: 0 %		func_inst: 0
370(substitute_in_type)
	inst: 0 %		func_inst: 0
371(stabilize_reference)
	inst: 0.000574871 %		func_inst: 468
372(stabilize_reference_1)
	inst: 3.68507e-05 %		func_inst: 30
373(build)
	inst: 0.0862245 %		func_inst: 70195
374(build1)
	inst: 0.1162 %		func_inst: 94598
375(build_nt)
	inst: 0.00783201 %		func_inst: 6376
376(build_parse_node)
	inst: 0 %		func_inst: 0
377(build_decl)
	inst: 0.0177547 %		func_inst: 14454
378(build_block)
	inst: 0 %		func_inst: 0
379(build_type_variant)
	inst: 0.00663313 %		func_inst: 5400
380(change_main_variant)
	inst: 0 %		func_inst: 0
381(build_type_copy)
	inst: 0.000334113 %		func_inst: 272
382(type_hash_list)
	inst: 0 %		func_inst: 0
383(type_hash_lookup)
	inst: 0.0200259 %		func_inst: 16303
384(type_hash_add)
	inst: 0.00346642 %		func_inst: 2822
385(type_hash_canon)
	inst: 0 %		func_inst: 0
386(type_list_equal)
	inst: 0.000581013 %		func_inst: 473
387(tree_int_cst_equal)
	inst: 0.00118536 %		func_inst: 965
388(tree_int_cst_lt)
	inst: 0.0121767 %		func_inst: 9913
389(simple_cst_list_equal)
	inst: 0 %		func_inst: 0
390(simple_cst_equal)
	inst: 0 %		func_inst: 0
391(build_pointer_type)
	inst: 0.0249529 %		func_inst: 20314
392(build_index_type)
	inst: 0.00920285 %		func_inst: 7492
393(build_range_type)
	inst: 0 %		func_inst: 0
394(build_index_2_type)
	inst: 0 %		func_inst: 0
395(index_type_equal)
	inst: 0 %		func_inst: 0
396(build_array_type)
	inst: 0.00590471 %		func_inst: 4807
397(build_function_type)
	inst: 0.0083344 %		func_inst: 6785
398(build_reference_type)
	inst: 0 %		func_inst: 0
399(build_method_type)
	inst: 0 %		func_inst: 0
400(build_offset_type)
	inst: 0 %		func_inst: 0
401(build_complex_type)
	inst: 0 %		func_inst: 0
402(get_unwidened)
	inst: 0.00240267 %		func_inst: 1956
403(get_narrower)
	inst: 0.00634447 %		func_inst: 5165
404(type_precision)
	inst: 0.00023953 %		func_inst: 195
405(int_fits_type_p)
	inst: 0.0115969 %		func_inst: 9441
406(decl_function_context)
	inst: 0.0105319 %		func_inst: 8574
407(decl_type_context)
	inst: 0 %		func_inst: 0
408(print_obstack_statistics)
	inst: 0 %		func_inst: 0
409(dump_tree_statistics)
	inst: 0 %		func_inst: 0
410(get_file_function_name)
	inst: 0 %		func_inst: 0
411(debug_tree)
	inst: 0 %		func_inst: 0
412(print_node_brief)
	inst: 0 %		func_inst: 0
413(indent_to)
	inst: 0 %		func_inst: 0
414(print_node)
	inst: 0 %		func_inst: 0
415(get_pending_sizes)
	inst: 0.00121607 %		func_inst: 990
416(variable_size)
	inst: 0 %		func_inst: 0
417(mode_for_size)
	inst: 0.00523649 %		func_inst: 4263
418(round_up)
	inst: 0 %		func_inst: 0
419(layout_decl)
	inst: 0.0181404 %		func_inst: 14768
420(layout_record)
	inst: 0.00417273 %		func_inst: 3397
421(layout_union)
	inst: 0.000216191 %		func_inst: 176
422(layout_type)
	inst: 0.0372008 %		func_inst: 30285
423(make_signed_type)
	inst: 0.000492571 %		func_inst: 401
424(make_unsigned_type)
	inst: 0.000154773 %		func_inst: 126
425(fixup_signed_type)
	inst: 0 %		func_inst: 0
426(fixup_unsigned_type)
	inst: 0.000278837 %		func_inst: 227
427(get_best_mode)
	inst: 0.00053065 %		func_inst: 432
428(save_storage_status)
	inst: 0 %		func_inst: 0
429(restore_storage_status)
	inst: 0 %		func_inst: 0
430(force_fit_type)
	inst: 0.0294904 %		func_inst: 24008
431(add_double)
	inst: 0.0162143 %		func_inst: 13200
432(neg_double)
	inst: 0 %		func_inst: 0
433(mul_double)
	inst: 0.0231693 %		func_inst: 18862
434(lshift_double)
	inst: 0 %		func_inst: 0
435(rshift_double)
	inst: 0 %		func_inst: 0
436(lrotate_double)
	inst: 0 %		func_inst: 0
437(rrotate_double)
	inst: 0 %		func_inst: 0
438(div_and_round_double)
	inst: 0.00381159 %		func_inst: 3103
439(split_tree)
	inst: 0.0121263 %		func_inst: 9872
440(const_binop)
	inst: 0.0875733 %		func_inst: 71293
441(size_int)
	inst: 0.0213034 %		func_inst: 17343
442(size_binop)
	inst: 0.0201279 %		func_inst: 16386
443(fold_convert)
	inst: 0.0250339 %		func_inst: 20380
444(non_lvalue)
	inst: 0.000574871 %		func_inst: 468
445(pedantic_non_lvalue)
	inst: 0 %		func_inst: 0
446(operand_equal_p)
	inst: 0.00785289 %		func_inst: 6393
447(twoval_comparison_p)
	inst: 0.00396759 %		func_inst: 3230
448(eval_subst)
	inst: 0 %		func_inst: 0
449(invert_truthvalue)
	inst: 4.91343e-05 %		func_inst: 40
450(optimize_bit_field_compare)
	inst: 0.000795976 %		func_inst: 648
451(decode_field_reference)
	inst: 0.000425012 %		func_inst: 346
452(all_ones_mask_p)
	inst: 0 %		func_inst: 0
453(range_test)
	inst: 0 %		func_inst: 0
454(fold_truthop)
	inst: 0.000476603 %		func_inst: 388
455(fold)
	inst: 0.235741 %		func_inst: 191916
456(find_function_data)
	inst: 0 %		func_inst: 0
457(push_function_context)
	inst: 0 %		func_inst: 0
458(pop_function_context)
	inst: 0 %		func_inst: 0
459(get_frame_size)
	inst: 0.000319373 %		func_inst: 260
460(assign_stack_local)
	inst: 0.000808259 %		func_inst: 658
461(assign_outer_stack_local)
	inst: 0 %		func_inst: 0
462(assign_stack_temp)
	inst: 0 %		func_inst: 0
463(combine_temp_slots)
	inst: 0.0298049 %		func_inst: 24264
464(preserve_temp_slots)
	inst: 0.0030107 %		func_inst: 2451
465(free_temp_slots)
	inst: 0.00334113 %		func_inst: 2720
466(push_temp_slots)
	inst: 0.00121976 %		func_inst: 993
467(pop_temp_slots)
	inst: 0.0028461 %		func_inst: 2317
468(put_var_into_stack)
	inst: 0.00413342 %		func_inst: 3365
469(put_reg_into_stack)
	inst: 0 %		func_inst: 0
470(fixup_var_refs)
	inst: 0 %		func_inst: 0
471(fixup_var_refs_insns)
	inst: 0 %		func_inst: 0
472(fixup_var_refs_1)
	inst: 0 %		func_inst: 0
473(fixup_memory_subreg)
	inst: 0 %		func_inst: 0
474(walk_fixup_memory_subreg)
	inst: 0 %		func_inst: 0
475(fixup_stack_1)
	inst: 0 %		func_inst: 0
476(optimize_bit_field)
	inst: 0 %		func_inst: 0
477(instantiate_virtual_regs)
	inst: 0.034098 %		func_inst: 27759
478(instantiate_decls)
	inst: 0.00127749 %		func_inst: 1040
479(instantiate_decls_1)
	inst: 0.00214717 %		func_inst: 1748
480(instantiate_decl)
	inst: 0.00454492 %		func_inst: 3700
481(instantiate_virtual_regs_1)
	inst: 0.42132 %		func_inst: 342995
482(nonlocal_label_rtx_list)
	inst: 0.00017197 %		func_inst: 140
483(use_variable)
	inst: 0 %		func_inst: 0
484(use_variable_after)
	inst: 0 %		func_inst: 0
485(max_parm_reg_num)
	inst: 8.5985e-06 %		func_inst: 7
486(get_first_nonparm_insn)
	inst: 9.82686e-05 %		func_inst: 80
487(get_first_block_beg)
	inst: 0 %		func_inst: 0
488(aggregate_value_p)
	inst: 0.0124347 %		func_inst: 10123
489(assign_parms)
	inst: 0.00902106 %		func_inst: 7344
490(locate_and_pad_parm)
	inst: 0.0221166 %		func_inst: 18005
491(pad_to_arg_alignment)
	inst: 0.00782586 %		func_inst: 6371
492(pad_below)
	inst: 0 %		func_inst: 0
493(uninitialized_vars_warning)
	inst: 0 %		func_inst: 0
494(setjmp_args_warning)
	inst: 0 %		func_inst: 0
495(setjmp_protect)
	inst: 0 %		func_inst: 0
496(setjmp_protect_args)
	inst: 0 %		func_inst: 0
497(lookup_static_chain)
	inst: 0.00118659 %		func_inst: 966
498(fix_lexical_addr)
	inst: 0 %		func_inst: 0
499(trampoline_address)
	inst: 0 %		func_inst: 0
500(round_trampoline_addr)
	inst: 0 %		func_inst: 0
501(identify_blocks)
	inst: 0 %		func_inst: 0
502(reorder_blocks)
	inst: 0 %		func_inst: 0
503(blocks_nreverse)
	inst: 0 %		func_inst: 0
504(all_blocks)
	inst: 0 %		func_inst: 0
505(bc_build_calldesc)
	inst: 0 %		func_inst: 0
506(init_function_start)
	inst: 0.00128978 %		func_inst: 1050
507(mark_varargs)
	inst: 0 %		func_inst: 0
508(expand_main_function)
	inst: 1.35119e-05 %		func_inst: 11
509(bc_expand_function_start)
	inst: 0 %		func_inst: 0
510(bc_expand_function_end)
	inst: 0 %		func_inst: 0
511(expand_function_start)
	inst: 0.00101217 %		func_inst: 824
512(expand_function_end)
	inst: 0.0010441 %		func_inst: 850
513(thread_prologue_and_epilogue_insns)
	inst: 3.4394e-05 %		func_inst: 28
514(reposition_prologue_and_epilogue_notes)
	inst: 0 %		func_inst: 0
515(init_stmt)
	inst: 4.91343e-06 %		func_inst: 4
516(init_stmt_for_function)
	inst: 0.00017197 %		func_inst: 140
517(save_stmt_status)
	inst: 0 %		func_inst: 0
518(restore_stmt_status)
	inst: 0 %		func_inst: 0
519(emit_nop)
	inst: 0.000249357 %		func_inst: 203
520(label_rtx)
	inst: 0 %		func_inst: 0
521(emit_jump)
	inst: 8.5985e-06 %		func_inst: 7
522(expand_computed_goto)
	inst: 0 %		func_inst: 0
523(expand_label)
	inst: 0 %		func_inst: 0
524(declare_nonlocal_label)
	inst: 0 %		func_inst: 0
525(expand_goto)
	inst: 0 %		func_inst: 0
526(expand_goto_internal)
	inst: 0 %		func_inst: 0
527(expand_fixup)
	inst: 0.000682967 %		func_inst: 556
528(bc_expand_fixup)
	inst: 0 %		func_inst: 0
529(fixup_gotos)
	inst: 0.00051591 %		func_inst: 420
530(bc_fixup_gotos)
	inst: 0 %		func_inst: 0
531(expand_asm)
	inst: 0 %		func_inst: 0
532(expand_asm_operands)
	inst: 0 %		func_inst: 0
533(expand_expr_stmt)
	inst: 0.0114974 %		func_inst: 9360
534(warn_if_unused_value)
	inst: 0 %		func_inst: 0
535(clear_last_expr)
	inst: 5.1591e-05 %		func_inst: 42
536(expand_start_stmt_expr)
	inst: 0 %		func_inst: 0
537(expand_end_stmt_expr)
	inst: 0 %		func_inst: 0
538(in_try_block)
	inst: 0 %		func_inst: 0
539(in_except_block)
	inst: 0 %		func_inst: 0
540(in_exception_handler)
	inst: 0 %		func_inst: 0
541(expand_raise)
	inst: 0 %		func_inst: 0
542(expand_start_try)
	inst: 0 %		func_inst: 0
543(expand_end_try)
	inst: 0 %		func_inst: 0
544(expand_start_except)
	inst: 0 %		func_inst: 0
545(expand_escape_except)
	inst: 0 %		func_inst: 0
546(expand_end_except)
	inst: 0 %		func_inst: 0
547(expand_catch)
	inst: 0 %		func_inst: 0
548(expand_catch_default)
	inst: 0 %		func_inst: 0
549(expand_end_catch)
	inst: 0 %		func_inst: 0
550(expand_start_cond)
	inst: 0.00343326 %		func_inst: 2795
551(expand_start_elseif)
	inst: 0 %		func_inst: 0
552(expand_start_else)
	inst: 0.000303404 %		func_inst: 247
553(expand_end_cond)
	inst: 0.00274661 %		func_inst: 2236
554(bc_expand_start_cond)
	inst: 0 %		func_inst: 0
555(bc_expand_end_cond)
	inst: 0 %		func_inst: 0
556(bc_expand_start_else)
	inst: 0 %		func_inst: 0
557(expand_start_loop)
	inst: 0.0023867 %		func_inst: 1943
558(expand_start_loop_continue_elsewhere)
	inst: 0.000235845 %		func_inst: 192
559(expand_loop_continue_here)
	inst: 0.000235845 %		func_inst: 192
560(bc_expand_end_loop)
	inst: 0 %		func_inst: 0
561(expand_end_loop)
	inst: 0.0115908 %		func_inst: 9436
562(expand_continue_loop)
	inst: 0 %		func_inst: 0
563(expand_exit_loop)
	inst: 0 %		func_inst: 0
564(expand_exit_loop_if_false)
	inst: 0.000676825 %		func_inst: 551
565(preserve_subexpressions_p)
	inst: 0.0162217 %		func_inst: 13206
566(expand_exit_something)
	inst: 0.000126521 %		func_inst: 103
567(expand_null_return)
	inst: 0.000170742 %		func_inst: 139
568(expand_value_return)
	inst: 0 %		func_inst: 0
569(expand_null_return_1)
	inst: 0.000472918 %		func_inst: 385
570(expand_return)
	inst: 0.000331656 %		func_inst: 270
571(drop_through_at_end_p)
	inst: 0 %		func_inst: 0
572(tail_recursion_args)
	inst: 0 %		func_inst: 0
573(expand_start_bindings)
	inst: 0.00405849 %		func_inst: 3304
574(remember_end_note)
	inst: 0.000136348 %		func_inst: 111
575(expand_end_bindings)
	inst: 0.00456089 %		func_inst: 3713
576(bc_expand_end_bindings)
	inst: 0 %		func_inst: 0
577(expand_decl)
	inst: 0.00240267 %		func_inst: 1956
578(bc_expand_decl)
	inst: 0 %		func_inst: 0
579(expand_decl_init)
	inst: 0.00158949 %		func_inst: 1294
580(bc_expand_variable_local_init)
	inst: 0 %		func_inst: 0
581(bc_expand_decl_init)
	inst: 0 %		func_inst: 0
582(expand_decl_cleanup)
	inst: 0 %		func_inst: 0
583(expand_anon_union_decl)
	inst: 0 %		func_inst: 0
584(expand_cleanups)
	inst: 0 %		func_inst: 0
585(move_cleanups_up)
	inst: 0 %		func_inst: 0
586(last_cleanup_this_contour)
	inst: 0 %		func_inst: 0
587(any_pending_cleanups)
	inst: 3.31656e-05 %		func_inst: 27
588(expand_start_case)
	inst: 9.70402e-05 %		func_inst: 79
589(bc_expand_start_case)
	inst: 0 %		func_inst: 0
590(expand_start_case_dummy)
	inst: 0 %		func_inst: 0
591(expand_end_case_dummy)
	inst: 0 %		func_inst: 0
592(case_index_expr_type)
	inst: 0 %		func_inst: 0
593(pushcase)
	inst: 0.000205136 %		func_inst: 167
594(pushcase_range)
	inst: 0 %		func_inst: 0
595(bc_pushcase)
	inst: 0 %		func_inst: 0
596(check_for_full_enumeration_handling)
	inst: 0 %		func_inst: 0
597(bc_check_for_full_enumeration_handling)
	inst: 0 %		func_inst: 0
598(expand_end_case)
	inst: 0.000340255 %		func_inst: 277
599(bc_expand_end_case)
	inst: 0 %		func_inst: 0
600(bc_new_uid)
	inst: 0 %		func_inst: 0
601(do_jump_if_equal)
	inst: 0 %		func_inst: 0
602(estimate_case_costs)
	inst: 0.00191501 %		func_inst: 1559
603(group_case_nodes)
	inst: 5.65044e-05 %		func_inst: 46
604(balance_case_nodes)
	inst: 8.10716e-05 %		func_inst: 66
605(node_is_bounded)
	inst: 4.17641e-05 %		func_inst: 34
606(emit_jump_if_reachable)
	inst: 1.22836e-05 %		func_inst: 10
607(emit_case_nodes)
	inst: 0.000141261 %		func_inst: 115
608(find_loop_tree_blocks)
	inst: 0 %		func_inst: 0
609(unroll_block_trees)
	inst: 0 %		func_inst: 0
610(bc_init_mode_to_opcode_maps)
	inst: 0 %		func_inst: 0
611(init_expr_once)
	inst: 0.0342245 %		func_inst: 27862
612(init_expr)
	inst: 0.000137576 %		func_inst: 112
613(save_expr_status)
	inst: 0 %		func_inst: 0
614(restore_expr_status)
	inst: 0 %		func_inst: 0
615(protect_from_queue)
	inst: 0.0819597 %		func_inst: 66723
616(queued_subexp_p)
	inst: 0.00279328 %		func_inst: 2274
617(emit_queue)
	inst: 0.00606563 %		func_inst: 4938
618(init_queue)
	inst: 6.8788e-05 %		func_inst: 56
619(convert_move)
	inst: 0.00415676 %		func_inst: 3384
620(convert_to_mode)
	inst: 7.37014e-06 %		func_inst: 6
621(convert_modes)
	inst: 0.00428574 %		func_inst: 3489
622(move_by_pieces)
	inst: 0 %		func_inst: 0
623(move_by_pieces_ninsns)
	inst: 0 %		func_inst: 0
624(move_by_pieces_1)
	inst: 0 %		func_inst: 0
625(emit_block_move)
	inst: 0 %		func_inst: 0
626(move_block_to_reg)
	inst: 0 %		func_inst: 0
627(move_block_from_reg)
	inst: 0 %		func_inst: 0
628(use_regs)
	inst: 0 %		func_inst: 0
629(clear_storage)
	inst: 0 %		func_inst: 0
630(emit_move_insn)
	inst: 0.0371296 %		func_inst: 30227
631(emit_move_insn_1)
	inst: 0.0370423 %		func_inst: 30156
632(push_block)
	inst: 3.31656e-05 %		func_inst: 27
633(gen_push_operand)
	inst: 0 %		func_inst: 0
634(emit_push_insn)
	inst: 0 %		func_inst: 0
635(expand_assignment)
	inst: 0.00856165 %		func_inst: 6970
636(store_expr)
	inst: 0.0142158 %		func_inst: 11573
637(store_constructor)
	inst: 0 %		func_inst: 0
638(store_field)
	inst: 0.00369367 %		func_inst: 3007
639(get_inner_reference)
	inst: 0.0259294 %		func_inst: 21109
640(force_operand)
	inst: 0.00960821 %		func_inst: 7822
641(save_noncopied_parts)
	inst: 0 %		func_inst: 0
642(init_noncopied_parts)
	inst: 0 %		func_inst: 0
643(safe_from_p)
	inst: 0.00228843 %		func_inst: 1863
644(expand_expr)
	inst: 0.251699 %		func_inst: 204907
645(bc_expand_expr)
	inst: 0 %		func_inst: 0
646(get_pointer_alignment)
	inst: 0 %		func_inst: 0
647(string_constant)
	inst: 0 %		func_inst: 0
648(c_strlen)
	inst: 0 %		func_inst: 0
649(expand_builtin)
	inst: 0 %		func_inst: 0
650(apply_args_register_offset)
	inst: 0 %		func_inst: 0
651(apply_args_size)
	inst: 0 %		func_inst: 0
652(apply_result_size)
	inst: 0 %		func_inst: 0
653(result_vector)
	inst: 0 %		func_inst: 0
654(expand_builtin_apply_args)
	inst: 0 %		func_inst: 0
655(expand_builtin_apply)
	inst: 0 %		func_inst: 0
656(expand_builtin_return)
	inst: 0 %		func_inst: 0
657(expand_increment)
	inst: 0.00483481 %		func_inst: 3936
658(preexpand_calls)
	inst: 0.0457686 %		func_inst: 37260
659(init_pending_stack_adjust)
	inst: 1.7197e-05 %		func_inst: 14
660(clear_pending_stack_adjust)
	inst: 0.00027638 %		func_inst: 225
661(do_pending_stack_adjust)
	inst: 0.00183639 %		func_inst: 1495
662(expand_cleanups_to)
	inst: 0.00138436 %		func_inst: 1127
663(jumpifnot)
	inst: 3.31656e-05 %		func_inst: 27
664(jumpif)
	inst: 0 %		func_inst: 0
665(do_jump)
	inst: 0.0110208 %		func_inst: 8972
666(do_jump_by_parts_greater)
	inst: 0 %		func_inst: 0
667(do_jump_by_parts_greater_rtx)
	inst: 0 %		func_inst: 0
668(do_jump_by_parts_equality)
	inst: 0 %		func_inst: 0
669(do_jump_by_parts_equality_rtx)
	inst: 0 %		func_inst: 0
670(do_jump_for_compare)
	inst: 0.00448105 %		func_inst: 3648
671(compare)
	inst: 0.00235108 %		func_inst: 1914
672(compare_from_rtx)
	inst: 0.00615039 %		func_inst: 5007
673(do_store_flag)
	inst: 0 %		func_inst: 0
674(do_tablejump)
	inst: 0 %		func_inst: 0
675(bc_load_memory)
	inst: 0 %		func_inst: 0
676(bc_store_memory)
	inst: 0 %		func_inst: 0
677(bc_allocate_local)
	inst: 0 %		func_inst: 0
678(bc_allocate_variable_array)
	inst: 0 %		func_inst: 0
679(bc_load_externaddr)
	inst: 0 %		func_inst: 0
680(bc_load_externaddr_id)
	inst: 0 %		func_inst: 0
681(bc_load_localaddr)
	inst: 0 %		func_inst: 0
682(bc_load_parmaddr)
	inst: 0 %		func_inst: 0
683(bc_canonicalize_array_ref)
	inst: 0 %		func_inst: 0
684(bc_expand_component_address)
	inst: 0 %		func_inst: 0
685(bc_push_offset_and_size)
	inst: 0 %		func_inst: 0
686(bc_expand_address)
	inst: 0 %		func_inst: 0
687(bc_runtime_type_code)
	inst: 0 %		func_inst: 0
688(bc_gen_constr_label)
	inst: 0 %		func_inst: 0
689(bc_expand_constructor)
	inst: 0 %		func_inst: 0
690(bc_store_field)
	inst: 0 %		func_inst: 0
691(bc_store_bit_field)
	inst: 0 %		func_inst: 0
692(bc_load_bit_field)
	inst: 0 %		func_inst: 0
693(bc_adjust_stack)
	inst: 0 %		func_inst: 0
694(calls_function_1)
	inst: 0 %		func_inst: 0
695(prepare_call_address)
	inst: 0 %		func_inst: 0
696(expand_call)
	inst: 0.221434 %		func_inst: 180268
697(emit_library_call)
	inst: 0.000201451 %		func_inst: 164
698(emit_library_call_value)
	inst: 0 %		func_inst: 0
699(store_one_arg)
	inst: 0 %		func_inst: 0
700(init_expmed)
	inst: 0.00216437 %		func_inst: 1762
701(negate_rtx)
	inst: 0 %		func_inst: 0
702(store_bit_field)
	inst: 0 %		func_inst: 0
703(store_fixed_bit_field)
	inst: 0 %		func_inst: 0
704(store_split_bit_field)
	inst: 0 %		func_inst: 0
705(extract_bit_field)
	inst: 0.000292349 %		func_inst: 238
706(extract_fixed_bit_field)
	inst: 0.000280065 %		func_inst: 228
707(mask_rtx)
	inst: 6.8788e-05 %		func_inst: 56
708(lshift_value)
	inst: 0 %		func_inst: 0
709(extract_split_bit_field)
	inst: 0 %		func_inst: 0
710(expand_inc)
	inst: 0 %		func_inst: 0
711(expand_dec)
	inst: 0 %		func_inst: 0
712(expand_shift)
	inst: 0.00282522 %		func_inst: 2300
713(synth_mult)
	inst: 0.00536546 %		func_inst: 4368
714(expand_mult)
	inst: 0.00491834 %		func_inst: 4004
715(expand_divmod)
	inst: 0 %		func_inst: 0
716(make_tree)
	inst: 0.00121485 %		func_inst: 989
717(expand_mult_add)
	inst: 0.000737014 %		func_inst: 600
718(expand_and)
	inst: 3.07089e-05 %		func_inst: 25
719(emit_store_flag)
	inst: 0.000147403 %		func_inst: 120
720(plus_constant_wide)
	inst: 0.0701208 %		func_inst: 57085
721(plus_constant_for_output_wide)
	inst: 0.000235845 %		func_inst: 192
722(eliminate_constant_term)
	inst: 0.000864764 %		func_inst: 704
723(find_next_ref)
	inst: 0 %		func_inst: 0
724(expr_size)
	inst: 0 %		func_inst: 0
725(break_out_memory_refs)
	inst: 0.0197876 %		func_inst: 16109
726(copy_all_regs)
	inst: 0 %		func_inst: 0
727(memory_address)
	inst: 0.0278727 %		func_inst: 22691
728(memory_address_noforce)
	inst: 0 %		func_inst: 0
729(validize_mem)
	inst: 0.000589612 %		func_inst: 480
730(stabilize)
	inst: 0 %		func_inst: 0
731(copy_to_reg)
	inst: 0.000341483 %		func_inst: 278
732(copy_addr_to_reg)
	inst: 0 %		func_inst: 0
733(copy_to_mode_reg)
	inst: 0.000712447 %		func_inst: 580
734(force_reg)
	inst: 0.00524509 %		func_inst: 4270
735(force_not_mem)
	inst: 0.00975807 %		func_inst: 7944
736(copy_to_suggested_reg)
	inst: 0 %		func_inst: 0
737(adjust_stack)
	inst: 0 %		func_inst: 0
738(anti_adjust_stack)
	inst: 7.37014e-06 %		func_inst: 6
739(round_push)
	inst: 0 %		func_inst: 0
740(emit_stack_save)
	inst: 0 %		func_inst: 0
741(emit_stack_restore)
	inst: 0 %		func_inst: 0
742(allocate_dynamic_stack_space)
	inst: 0 %		func_inst: 0
743(hard_function_value)
	inst: 0.00316425 %		func_inst: 2576
744(hard_libcall_value)
	inst: 0 %		func_inst: 0
745(rtx_to_tree_code)
	inst: 0 %		func_inst: 0
746(add_equal_note)
	inst: 0.00209066 %		func_inst: 1702
747(expand_binop)
	inst: 0.0245143 %		func_inst: 19957
748(sign_expand_binop)
	inst: 0 %		func_inst: 0
749(expand_twoval_binop)
	inst: 0 %		func_inst: 0
750(expand_unop)
	inst: 0.000316916 %		func_inst: 258
751(expand_complex_abs)
	inst: 0 %		func_inst: 0
752(emit_unop_insn)
	inst: 0.00232528 %		func_inst: 1893
753(emit_no_conflict_block)
	inst: 0 %		func_inst: 0
754(emit_libcall_block)
	inst: 0 %		func_inst: 0
755(emit_clr_insn)
	inst: 0 %		func_inst: 0
756(emit_0_to_1_insn)
	inst: 0 %		func_inst: 0
757(emit_cmp_insn)
	inst: 0.014432 %		func_inst: 11749
758(can_compare_p)
	inst: 0.00119273 %		func_inst: 971
759(emit_float_lib_cmp)
	inst: 0 %		func_inst: 0
760(emit_indirect_jump)
	inst: 0 %		func_inst: 0
761(gen_add2_insn)
	inst: 0 %		func_inst: 0
762(have_add2_insn)
	inst: 0 %		func_inst: 0
763(gen_sub2_insn)
	inst: 0 %		func_inst: 0
764(have_sub2_insn)
	inst: 0 %		func_inst: 0
765(gen_move_insn)
	inst: 0.000294806 %		func_inst: 240
766(can_extend_p)
	inst: 0.000364822 %		func_inst: 297
767(gen_extend_insn)
	inst: 0 %		func_inst: 0
768(expand_float)
	inst: 0 %		func_inst: 0
769(expand_fix)
	inst: 0 %		func_inst: 0
770(init_optabs)
	inst: 0.0591393 %		func_inst: 48145
771(text_section)
	inst: 0 %		func_inst: 0
772(data_section)
	inst: 0 %		func_inst: 0
773(readonly_data_section)
	inst: 0 %		func_inst: 0
774(in_text_section)
	inst: 0 %		func_inst: 0
775(make_function_rtl)
	inst: 0.000507312 %		func_inst: 413
776(bc_make_decl_rtl)
	inst: 0 %		func_inst: 0
777(decode_reg_name)
	inst: 0.00420098 %		func_inst: 3420
778(make_decl_rtl)
	inst: 0.0227246 %		func_inst: 18500
779(make_var_volatile)
	inst: 0 %		func_inst: 0
780(assemble_constant_align)
	inst: 0 %		func_inst: 0
781(assemble_asm)
	inst: 0 %		func_inst: 0
782(assemble_destructor)
	inst: 0 %		func_inst: 0
783(assemble_constructor)
	inst: 0 %		func_inst: 0
784(assemble_gc_entry)
	inst: 0 %		func_inst: 0
785(assemble_start_function)
	inst: 0.000894244 %		func_inst: 728
786(assemble_end_function)
	inst: 0 %		func_inst: 0
787(assemble_zeros)
	inst: 0 %		func_inst: 0
788(assemble_align)
	inst: 0 %		func_inst: 0
789(assemble_string)
	inst: 0.0384156 %		func_inst: 31274
790(bc_output_ascii)
	inst: 0 %		func_inst: 0
791(assemble_variable)
	inst: 0.00387301 %		func_inst: 3153
792(contains_pointers_p)
	inst: 0 %		func_inst: 0
793(bc_output_constructor)
	inst: 0 %		func_inst: 0
794(bc_output_data_constructor)
	inst: 0 %		func_inst: 0
795(assemble_external)
	inst: 0 %		func_inst: 0
796(assemble_external_libcall)
	inst: 0 %		func_inst: 0
797(assemble_global)
	inst: 0 %		func_inst: 0
798(assemble_label)
	inst: 0 %		func_inst: 0
799(assemble_name)
	inst: 0.0107002 %		func_inst: 8711
800(assemble_static_space)
	inst: 0 %		func_inst: 0
801(assemble_trampoline_template)
	inst: 0 %		func_inst: 0
802(assemble_integer)
	inst: 3.68507e-05 %		func_inst: 30
803(assemble_real)
	inst: 0 %		func_inst: 0
804(immed_double_const)
	inst: 0.0117701 %		func_inst: 9582
805(immed_real_const_1)
	inst: 0 %		func_inst: 0
806(immed_real_const)
	inst: 0 %		func_inst: 0
807(clear_const_double_mem)
	inst: 8.5985e-05 %		func_inst: 70
808(decode_addr_const)
	inst: 0 %		func_inst: 0
809(const_hash)
	inst: 0.0295506 %		func_inst: 24057
810(compare_constant_1)
	inst: 0.00454001 %		func_inst: 3696
811(record_constant)
	inst: 0.00509523 %		func_inst: 4148
812(record_constant_1)
	inst: 0.00547233 %		func_inst: 4455
813(defer_addressed_constants)
	inst: 0 %		func_inst: 0
814(output_deferred_addressed_constants)
	inst: 0 %		func_inst: 0
815(copy_constant)
	inst: 0 %		func_inst: 0
816(output_constant_def)
	inst: 0.0149258 %		func_inst: 12151
817(output_constant_def_contents)
	inst: 0.00525368 %		func_inst: 4277
818(init_const_rtx_hash_table)
	inst: 0.000257955 %		func_inst: 210
819(save_varasm_status)
	inst: 0 %		func_inst: 0
820(restore_varasm_status)
	inst: 0 %		func_inst: 0
821(decode_rtx_const)
	inst: 0 %		func_inst: 0
822(simplify_subtraction)
	inst: 0 %		func_inst: 0
823(const_hash_rtx)
	inst: 0 %		func_inst: 0
824(record_constant_rtx)
	inst: 0 %		func_inst: 0
825(force_const_mem)
	inst: 0 %		func_inst: 0
826(get_pool_constant)
	inst: 0 %		func_inst: 0
827(get_pool_mode)
	inst: 0 %		func_inst: 0
828(get_pool_offset)
	inst: 0 %		func_inst: 0
829(get_pool_size)
	inst: 0 %		func_inst: 0
830(output_constant_pool)
	inst: 0.000378334 %		func_inst: 308
831(output_addressed_constants)
	inst: 0.0022307 %		func_inst: 1816
832(output_byte_asm)
	inst: 0 %		func_inst: 0
833(output_constant)
	inst: 0.0031274 %		func_inst: 2546
834(bc_assemble_integer)
	inst: 0 %		func_inst: 0
835(output_constructor)
	inst: 0 %		func_inst: 0
836(rtvec_alloc)
	inst: 0.0578569 %		func_inst: 47101
837(rtx_alloc)
	inst: 1.13253 %		func_inst: 921984
838(rtx_free)
	inst: 0.0161443 %		func_inst: 13143
839(copy_rtx)
	inst: 0.983816 %		func_inst: 800920
840(copy_most_rtx)
	inst: 0 %		func_inst: 0
841(read_skip_spaces)
	inst: 0 %		func_inst: 0
842(read_name)
	inst: 0 %		func_inst: 0
843(read_rtx)
	inst: 0 %		func_inst: 0
844(init_rtl)
	inst: 0.00165214 %		func_inst: 1345
845(print_rtx)
	inst: 0 %		func_inst: 0
846(debug_rtx)
	inst: 0 %		func_inst: 0
847(debug_rtx_list)
	inst: 0 %		func_inst: 0
848(debug_rtx_find)
	inst: 0 %		func_inst: 0
849(print_rtl)
	inst: 0 %		func_inst: 0
850(rtx_unstable_p)
	inst: 0 %		func_inst: 0
851(rtx_varies_p)
	inst: 0.0719535 %		func_inst: 58577
852(rtx_addr_can_trap_p)
	inst: 0.000372192 %		func_inst: 303
853(rtx_addr_varies_p)
	inst: 0.0266517 %		func_inst: 21697
854(get_integer_term)
	inst: 0 %		func_inst: 0
855(get_related_value)
	inst: 0.00121362 %		func_inst: 988
856(reg_mentioned_p)
	inst: 0.295926 %		func_inst: 240912
857(no_labels_between_p)
	inst: 0.00329691 %		func_inst: 2684
858(reg_used_between_p)
	inst: 0.00627199 %		func_inst: 5106
859(reg_referenced_p)
	inst: 0.0528796 %		func_inst: 43049
860(reg_referenced_between_p)
	inst: 4.54492e-05 %		func_inst: 37
861(reg_set_between_p)
	inst: 0.000842653 %		func_inst: 686
862(reg_set_p_1)
	inst: 0.00145683 %		func_inst: 1186
863(reg_set_p)
	inst: 0.00369981 %		func_inst: 3012
864(modified_between_p)
	inst: 0.00444665 %		func_inst: 3620
865(modified_in_p)
	inst: 0 %		func_inst: 0
866(single_set)
	inst: 0.84532 %		func_inst: 688171
867(find_last_value)
	inst: 0 %		func_inst: 0
868(refers_to_regno_p)
	inst: 1.68096 %		func_inst: 1368463
869(reg_overlap_mentioned_p)
	inst: 0.277013 %		func_inst: 225515
870(reg_set_last)
	inst: 0.00788114 %		func_inst: 6416
871(rtx_equal_p)
	inst: 1.34392 %		func_inst: 1094081
872(note_stores)
	inst: 0.969395 %		func_inst: 789180
873(dead_or_set_p)
	inst: 0.14876 %		func_inst: 121105
874(dead_or_set_regno_p)
	inst: 0.121688 %		func_inst: 99066
875(find_reg_note)
	inst: 0.304106 %		func_inst: 247571
876(find_regno_note)
	inst: 0.0314165 %		func_inst: 25576
877(remove_note)
	inst: 0.000738243 %		func_inst: 601
878(volatile_insn_p)
	inst: 0.0453301 %		func_inst: 36903
879(volatile_refs_p)
	inst: 0.675565 %		func_inst: 549974
880(side_effects_p)
	inst: 0.154373 %		func_inst: 125674
881(may_trap_p)
	inst: 0.0151334 %		func_inst: 12320
882(inequality_comparisons_p)
	inst: 0 %		func_inst: 0
883(replace_rtx)
	inst: 0.000800889 %		func_inst: 652
884(replace_regs)
	inst: 0.351326 %		func_inst: 286013
885(reg_set_last_1)
	inst: 0.00389021 %		func_inst: 3167
886(gen_rtx)
	inst: 1.60045 %		func_inst: 1302917
887(gen_rtvec)
	inst: 0.0143534 %		func_inst: 11685
888(gen_rtvec_v)
	inst: 0.0107211 %		func_inst: 8728
889(gen_reg_rtx)
	inst: 0.0285753 %		func_inst: 23263
890(mark_reg_pointer)
	inst: 0.000337798 %		func_inst: 275
891(max_reg_num)
	inst: 0.0039983 %		func_inst: 3255
892(max_label_num)
	inst: 0.000173198 %		func_inst: 141
893(get_first_label_num)
	inst: 7.73865e-05 %		func_inst: 63
894(gen_lowpart_common)
	inst: 0.0961706 %		func_inst: 78292
895(gen_realpart)
	inst: 0 %		func_inst: 0
896(gen_imagpart)
	inst: 0 %		func_inst: 0
897(gen_lowpart)
	inst: 6.63313e-05 %		func_inst: 54
898(gen_highpart)
	inst: 0 %		func_inst: 0
899(subreg_lowpart_p)
	inst: 0.00834669 %		func_inst: 6795
900(operand_subword)
	inst: 0 %		func_inst: 0
901(operand_subword_force)
	inst: 0 %		func_inst: 0
902(reverse_comparison)
	inst: 0 %		func_inst: 0
903(change_address)
	inst: 0.0118549 %		func_inst: 9651
904(gen_label_rtx)
	inst: 0.00571186 %		func_inst: 4650
905(gen_inline_header_rtx)
	inst: 0.000283751 %		func_inst: 231
906(set_new_first_and_last_insn)
	inst: 1.7197e-05 %		func_inst: 14
907(set_new_first_and_last_label_num)
	inst: 0 %		func_inst: 0
908(save_emit_status)
	inst: 0 %		func_inst: 0
909(restore_emit_status)
	inst: 0 %		func_inst: 0
910(unshare_all_rtl)
	inst: 0.0338228 %		func_inst: 27535
911(copy_rtx_if_shared)
	inst: 0.714752 %		func_inst: 581876
912(reset_used_flags)
	inst: 0.0534581 %		func_inst: 43520
913(make_safe_from)
	inst: 0 %		func_inst: 0
914(get_insns)
	inst: 0.000994969 %		func_inst: 810
915(get_last_insn)
	inst: 0.00143718 %		func_inst: 1170
916(set_last_insn)
	inst: 0.00010441 %		func_inst: 85
917(get_last_insn_anywhere)
	inst: 0 %		func_inst: 0
918(get_max_uid)
	inst: 0.00042624 %		func_inst: 347
919(next_insn)
	inst: 0.000654714 %		func_inst: 533
920(previous_insn)
	inst: 0 %		func_inst: 0
921(next_nonnote_insn)
	inst: 0.0303724 %		func_inst: 24726
922(prev_nonnote_insn)
	inst: 0.212713 %		func_inst: 173169
923(next_real_insn)
	inst: 0.0362341 %		func_inst: 29498
924(prev_real_insn)
	inst: 0.0317555 %		func_inst: 25852
925(next_active_insn)
	inst: 0.423964 %		func_inst: 345147
926(prev_active_insn)
	inst: 0.0510628 %		func_inst: 41570
927(next_label)
	inst: 0.0169857 %		func_inst: 13828
928(prev_label)
	inst: 0.0164735 %		func_inst: 13411
929(try_split)
	inst: 0.064447 %		func_inst: 52466
930(make_insn_raw)
	inst: 0.00519595 %		func_inst: 4230
931(add_insn)
	inst: 0 %		func_inst: 0
932(add_insn_after)
	inst: 0 %		func_inst: 0
933(delete_insns_since)
	inst: 0 %		func_inst: 0
934(reorder_insns)
	inst: 0.00074807 %		func_inst: 609
935(reorder_insns_with_line_notes)
	inst: 0 %		func_inst: 0
936(emit_insn_before)
	inst: 0.0156898 %		func_inst: 12773
937(emit_jump_insn_before)
	inst: 0.00282031 %		func_inst: 2296
938(emit_call_insn_before)
	inst: 0 %		func_inst: 0
939(emit_barrier_before)
	inst: 0.00085985 %		func_inst: 700
940(emit_note_before)
	inst: 0.00147157 %		func_inst: 1198
941(emit_insn_after)
	inst: 0.00092004 %		func_inst: 749
942(emit_insn_after_with_line_notes)
	inst: 2.94806e-05 %		func_inst: 24
943(emit_jump_insn_after)
	inst: 0.00130697 %		func_inst: 1064
944(emit_barrier_after)
	inst: 0.00192975 %		func_inst: 1571
945(emit_label_after)
	inst: 0.00263728 %		func_inst: 2147
946(emit_note_after)
	inst: 0.000858622 %		func_inst: 699
947(emit_line_note_after)
	inst: 0 %		func_inst: 0
948(emit_insn)
	inst: 0.0897855 %		func_inst: 73094
949(emit_insns)
	inst: 7.61582e-05 %		func_inst: 62
950(emit_insns_before)
	inst: 0.00760722 %		func_inst: 6193
951(emit_insns_after)
	inst: 0 %		func_inst: 0
952(emit_jump_insn)
	inst: 0.0111572 %		func_inst: 9083
953(emit_call_insn)
	inst: 0.0119396 %		func_inst: 9720
954(emit_label)
	inst: 0.00320601 %		func_inst: 2610
955(emit_barrier)
	inst: 0.00146175 %		func_inst: 1190
956(emit_line_note)
	inst: 0.0040327 %		func_inst: 3283
957(emit_note)
	inst: 0.0219176 %		func_inst: 17843
958(emit_line_note_force)
	inst: 0.000137576 %		func_inst: 112
959(force_next_line_note)
	inst: 3.4394e-05 %		func_inst: 28
960(classify_insn)
	inst: 4.91343e-05 %		func_inst: 40
961(emit)
	inst: 4.66776e-05 %		func_inst: 38
962(start_sequence)
	inst: 0.0238486 %		func_inst: 19415
963(push_to_sequence)
	inst: 0.00787377 %		func_inst: 6410
964(push_topmost_sequence)
	inst: 0 %		func_inst: 0
965(pop_topmost_sequence)
	inst: 0 %		func_inst: 0
966(end_sequence)
	inst: 0.0171847 %		func_inst: 13990
967(in_sequence_p)
	inst: 3.4394e-05 %		func_inst: 28
968(gen_sequence)
	inst: 0.0400113 %		func_inst: 32573
969(restore_reg_data)
	inst: 0 %		func_inst: 0
970(restore_reg_data_1)
	inst: 0 %		func_inst: 0
971(init_emit)
	inst: 0.00130697 %		func_inst: 1064
972(init_emit_once)
	inst: 0.00255498 %		func_inst: 2080
973(endian)
	inst: 0 %		func_inst: 0
974(earith)
	inst: 0 %		func_inst: 0
975(etrunci)
	inst: 0 %		func_inst: 0
976(etruncui)
	inst: 0 %		func_inst: 0
977(ereal_atof)
	inst: 5.40477e-05 %		func_inst: 44
978(ereal_negate)
	inst: 0 %		func_inst: 0
979(efixi)
	inst: 0 %		func_inst: 0
980(efixui)
	inst: 0 %		func_inst: 0
981(ereal_from_int)
	inst: 0 %		func_inst: 0
982(ereal_from_uint)
	inst: 0 %		func_inst: 0
983(ereal_to_int)
	inst: 0 %		func_inst: 0
984(ereal_ldexp)
	inst: 0 %		func_inst: 0
985(target_isinf)
	inst: 0 %		func_inst: 0
986(target_isnan)
	inst: 0 %		func_inst: 0
987(target_negative)
	inst: 0 %		func_inst: 0
988(real_value_truncate)
	inst: 0 %		func_inst: 0
989(debug_real)
	inst: 0 %		func_inst: 0
990(etartdouble)
	inst: 0 %		func_inst: 0
991(etarldouble)
	inst: 0 %		func_inst: 0
992(etardouble)
	inst: 0 %		func_inst: 0
993(etarsingle)
	inst: 0 %		func_inst: 0
994(ereal_to_decimal)
	inst: 0 %		func_inst: 0
995(ereal_cmp)
	inst: 0 %		func_inst: 0
996(ereal_isneg)
	inst: 0 %		func_inst: 0
997(einit)
	inst: 0 %		func_inst: 0
998(eclear)
	inst: 0 %		func_inst: 0
999(emov)
	inst: 0 %		func_inst: 0
1000(eabs)
	inst: 0 %		func_inst: 0
1001(eneg)
	inst: 0 %		func_inst: 0
1002(eisneg)
	inst: 0 %		func_inst: 0
1003(eisinf)
	inst: 0 %		func_inst: 0
1004(eisnan)
	inst: 2.94806e-05 %		func_inst: 24
1005(einfin)
	inst: 0 %		func_inst: 0
1006(enan)
	inst: 0 %		func_inst: 0
1007(emovi)
	inst: 0.000267782 %		func_inst: 218
1008(emovo)
	inst: 0 %		func_inst: 0
1009(ecleaz)
	inst: 0 %		func_inst: 0
1010(ecleazs)
	inst: 0 %		func_inst: 0
1011(emovz)
	inst: 0 %		func_inst: 0
1012(einan)
	inst: 0 %		func_inst: 0
1013(eiisnan)
	inst: 0 %		func_inst: 0
1014(eiinfin)
	inst: 0 %		func_inst: 0
1015(eiisinf)
	inst: 0 %		func_inst: 0
1016(ecmpm)
	inst: 0 %		func_inst: 0
1017(eshdn1)
	inst: 0 %		func_inst: 0
1018(eshup1)
	inst: 0 %		func_inst: 0
1019(eshdn8)
	inst: 0 %		func_inst: 0
1020(eshup8)
	inst: 0 %		func_inst: 0
1021(eshup6)
	inst: 0 %		func_inst: 0
1022(eshdn6)
	inst: 0 %		func_inst: 0
1023(eaddm)
	inst: 0 %		func_inst: 0
1024(esubm)
	inst: 0 %		func_inst: 0
1025(m16m)
	inst: 0 %		func_inst: 0
1026(edivm)
	inst: 0 %		func_inst: 0
1027(emulm)
	inst: 0 %		func_inst: 0
1028(emdnorm)
	inst: 0.00130452 %		func_inst: 1062
1029(esub)
	inst: 0 %		func_inst: 0
1030(eadd)
	inst: 0 %		func_inst: 0
1031(eadd1)
	inst: 0 %		func_inst: 0
1032(ediv)
	inst: 0 %		func_inst: 0
1033(emul)
	inst: 0 %		func_inst: 0
1034(e53toe)
	inst: 0.00066577 %		func_inst: 542
1035(e64toe)
	inst: 0 %		func_inst: 0
1036(e113toe)
	inst: 0 %		func_inst: 0
1037(e24toe)
	inst: 0 %		func_inst: 0
1038(etoe113)
	inst: 0 %		func_inst: 0
1039(toe113)
	inst: 0 %		func_inst: 0
1040(etoe64)
	inst: 0 %		func_inst: 0
1041(toe64)
	inst: 0 %		func_inst: 0
1042(etoe53)
	inst: 0.000196537 %		func_inst: 160
1043(toe53)
	inst: 0.000437295 %		func_inst: 356
1044(etoe24)
	inst: 0 %		func_inst: 0
1045(toe24)
	inst: 0 %		func_inst: 0
1046(ecmp)
	inst: 0 %		func_inst: 0
1047(eround)
	inst: 0 %		func_inst: 0
1048(ltoe)
	inst: 0 %		func_inst: 0
1049(ultoe)
	inst: 0 %		func_inst: 0
1050(eifrac)
	inst: 0 %		func_inst: 0
1051(euifrac)
	inst: 0 %		func_inst: 0
1052(eshift)
	inst: 0.00680633 %		func_inst: 5541
1053(enormlz)
	inst: 0.00473532 %		func_inst: 3855
1054(e24toasc)
	inst: 0 %		func_inst: 0
1055(e53toasc)
	inst: 0 %		func_inst: 0
1056(e64toasc)
	inst: 0 %		func_inst: 0
1057(e113toasc)
	inst: 0 %		func_inst: 0
1058(etoasc)
	inst: 0 %		func_inst: 0
1059(asctoe24)
	inst: 0 %		func_inst: 0
1060(asctoe53)
	inst: 1.47403e-05 %		func_inst: 12
1061(asctoe64)
	inst: 0 %		func_inst: 0
1062(asctoe113)
	inst: 0 %		func_inst: 0
1063(asctoe)
	inst: 0 %		func_inst: 0
1064(asctoeg)
	inst: 0.00284733 %		func_inst: 2318
1065(efloor)
	inst: 0 %		func_inst: 0
1066(efrexp)
	inst: 0 %		func_inst: 0
1067(eldexp)
	inst: 0 %		func_inst: 0
1068(eremain)
	inst: 0 %		func_inst: 0
1069(eiremain)
	inst: 0 %		func_inst: 0
1070(mtherr)
	inst: 0 %		func_inst: 0
1071(make_nan)
	inst: 0 %		func_inst: 0
1072(ereal_from_float)
	inst: 0 %		func_inst: 0
1073(ereal_from_double)
	inst: 0 %		func_inst: 0
1074(uditoe)
	inst: 0 %		func_inst: 0
1075(ditoe)
	inst: 0 %		func_inst: 0
1076(etoudi)
	inst: 0 %		func_inst: 0
1077(etodi)
	inst: 0 %		func_inst: 0
1078(esqrt)
	inst: 0 %		func_inst: 0
1079(dbxout_init)
	inst: 0 %		func_inst: 0
1080(dbxout_typedefs)
	inst: 0 %		func_inst: 0
1081(dbxout_source_file)
	inst: 0 %		func_inst: 0
1082(dbxout_source_line)
	inst: 0 %		func_inst: 0
1083(dbxout_finish)
	inst: 0 %		func_inst: 0
1084(dbxout_type_fields)
	inst: 0 %		func_inst: 0
1085(dbxout_type_method_1)
	inst: 0 %		func_inst: 0
1086(dbxout_type_methods)
	inst: 0 %		func_inst: 0
1087(dbxout_type)
	inst: 0 %		func_inst: 0
1088(print_int_cst_octal)
	inst: 0 %		func_inst: 0
1089(print_octal)
	inst: 0 %		func_inst: 0
1090(dbxout_type_name)
	inst: 0 %		func_inst: 0
1091(dbxout_symbol)
	inst: 0 %		func_inst: 0
1092(dbxout_symbol_location)
	inst: 0 %		func_inst: 0
1093(dbxout_symbol_name)
	inst: 0 %		func_inst: 0
1094(dbxout_prepare_symbol)
	inst: 0 %		func_inst: 0
1095(dbxout_finish_symbol)
	inst: 0 %		func_inst: 0
1096(dbxout_syms)
	inst: 0 %		func_inst: 0
1097(dbxout_parms)
	inst: 0 %		func_inst: 0
1098(dbxout_reg_parms)
	inst: 0 %		func_inst: 0
1099(dbxout_args)
	inst: 0 %		func_inst: 0
1100(dbxout_types)
	inst: 0 %		func_inst: 0
1101(dbxout_block)
	inst: 0 %		func_inst: 0
1102(dbxout_begin_function)
	inst: 0 %		func_inst: 0
1103(dbxout_function)
	inst: 0 %		func_inst: 0
1104(function_cannot_inline_p)
	inst: 0.00288787 %		func_inst: 2351
1105(initialize_for_inline)
	inst: 0.00106499 %		func_inst: 867
1106(adjust_copied_decl_tree)
	inst: 6.75597e-05 %		func_inst: 55
1107(save_for_inline_copying)
	inst: 0.016901 %		func_inst: 13759
1108(copy_decl_list)
	inst: 0.000262868 %		func_inst: 214
1109(copy_decl_tree)
	inst: 0.000487658 %		func_inst: 397
1110(copy_decl_rtls)
	inst: 0.000272695 %		func_inst: 222
1111(save_for_inline_nocopy)
	inst: 0 %		func_inst: 0
1112(save_constants)
	inst: 0 %		func_inst: 0
1113(note_modified_parmregs)
	inst: 0 %		func_inst: 0
1114(copy_for_inline)
	inst: 0.0467009 %		func_inst: 38019
1115(expand_inline_function)
	inst: 6.51029e-05 %		func_inst: 53
1116(integrate_parm_decls)
	inst: 0 %		func_inst: 0
1117(integrate_decl_tree)
	inst: 0 %		func_inst: 0
1118(copy_rtx_and_substitute)
	inst: 0 %		func_inst: 0
1119(try_constants)
	inst: 0 %		func_inst: 0
1120(subst_constants)
	inst: 0 %		func_inst: 0
1121(mark_stores)
	inst: 0 %		func_inst: 0
1122(restore_constants)
	inst: 0 %		func_inst: 0
1123(set_block_origin_self)
	inst: 0 %		func_inst: 0
1124(set_decl_origin_self)
	inst: 0 %		func_inst: 0
1125(set_block_abstract_flags)
	inst: 0 %		func_inst: 0
1126(set_decl_abstract_flags)
	inst: 0 %		func_inst: 0
1127(output_inline_function)
	inst: 0 %		func_inst: 0
1128(jump_optimize)
	inst: 0.476809 %		func_inst: 388168
1129(duplicate_loop_exit_test)
	inst: 0.0137367 %		func_inst: 11183
1130(squeeze_notes)
	inst: 6.01895e-05 %		func_inst: 49
1131(find_cross_jump)
	inst: 0.0126779 %		func_inst: 10321
1132(do_cross_jump)
	inst: 0.000203907 %		func_inst: 166
1133(get_label_before)
	inst: 0.00290629 %		func_inst: 2366
1134(get_label_after)
	inst: 0 %		func_inst: 0
1135(jump_back_p)
	inst: 0.00795361 %		func_inst: 6475
1136(can_reverse_comparison_p)
	inst: 0.00533721 %		func_inst: 4345
1137(reverse_condition)
	inst: 0.014814 %		func_inst: 12060
1138(swap_condition)
	inst: 0.000486429 %		func_inst: 396
1139(unsigned_condition)
	inst: 0 %		func_inst: 0
1140(signed_condition)
	inst: 0 %		func_inst: 0
1141(comparison_dominates_p)
	inst: 0.00421818 %		func_inst: 3434
1142(simplejump_p)
	inst: 0.115313 %		func_inst: 93876
1143(condjump_p)
	inst: 0.0973031 %		func_inst: 79214
1144(sets_cc0_p)
	inst: 0 %		func_inst: 0
1145(follow_jumps)
	inst: 0.0359159 %		func_inst: 29239
1146(tension_vector_labels)
	inst: 0 %		func_inst: 0
1147(mark_jump_label)
	inst: 0.793331 %		func_inst: 645847
1148(delete_jump)
	inst: 0.000472918 %		func_inst: 385
1149(delete_computation)
	inst: 0.00068788 %		func_inst: 560
1150(delete_insn)
	inst: 0.096329 %		func_inst: 78421
1151(next_nondeleted_insn)
	inst: 0 %		func_inst: 0
1152(delete_for_peephole)
	inst: 6.8788e-05 %		func_inst: 56
1153(invert_jump)
	inst: 0.00210295 %		func_inst: 1712
1154(invert_exp)
	inst: 0.0174808 %		func_inst: 14231
1155(redirect_jump)
	inst: 0.00957873 %		func_inst: 7798
1156(delete_from_jump_chain)
	inst: 0.0046174 %		func_inst: 3759
1157(redirect_exp)
	inst: 0.116139 %		func_inst: 94548
1158(redirect_tablejump)
	inst: 0 %		func_inst: 0
1159(delete_labelref_insn)
	inst: 0 %		func_inst: 0
1160(rtx_renumbered_equal_p)
	inst: 0.0330182 %		func_inst: 26880
1161(true_regnum)
	inst: 0.0302864 %		func_inst: 24656
1162(thread_jumps)
	inst: 0.348189 %		func_inst: 283459
1163(rtx_equal_for_thread_p)
	inst: 0.00894244 %		func_inst: 7280
1164(mark_modified_reg)
	inst: 0.0581959 %		func_inst: 47377
1165(rtx_cost)
	inst: 1.70812 %		func_inst: 1390571
1166(new_basic_block)
	inst: 0.126133 %		func_inst: 102684
1167(make_regs_eqv)
	inst: 0.0569835 %		func_inst: 46390
1168(mention_regs)
	inst: 0.721118 %		func_inst: 587059
1169(insert_regs)
	inst: 0.365632 %		func_inst: 297659
1170(free_element)
	inst: 0.0235955 %		func_inst: 19209
1171(remove_from_table)
	inst: 0.073683 %		func_inst: 59985
1172(lookup_as_function)
	inst: 0.12207 %		func_inst: 99377
1173(insert)
	inst: 1.43175 %		func_inst: 1165583
1174(merge_equiv_classes)
	inst: 0.0145806 %		func_inst: 11870
1175(invalidate)
	inst: 0.979504 %		func_inst: 797410
1176(remove_invalid_refs)
	inst: 0.0225096 %		func_inst: 18325
1177(rehash_using_reg)
	inst: 0.00156124 %		func_inst: 1271
1178(invalidate_for_call)
	inst: 1.31239 %		func_inst: 1068411
1179(use_related_value)
	inst: 0.00321952 %		func_inst: 2621
1180(canon_hash)
	inst: 1.72258 %		func_inst: 1402343
1181(safe_hash)
	inst: 0.0339813 %		func_inst: 27664
1182(exp_equiv_p)
	inst: 1.11196 %		func_inst: 905239
1183(refers_to_p)
	inst: 0 %		func_inst: 0
1184(set_nonvarying_address_components)
	inst: 0.00619092 %		func_inst: 5040
1185(refers_to_mem_p)
	inst: 0.168349 %		func_inst: 137052
1186(cse_rtx_addr_varies_p)
	inst: 0.0228069 %		func_inst: 18567
1187(canon_reg)
	inst: 1.96004 %		func_inst: 1595660
1188(find_best_addr)
	inst: 0.255875 %		func_inst: 208307
1189(find_comparison_args)
	inst: 0.210855 %		func_inst: 171656
1190(simplify_unary_operation)
	inst: 0.0152611 %		func_inst: 12424
1191(simplify_binary_operation)
	inst: 0.574067 %		func_inst: 467345
1192(simplify_plus_minus)
	inst: 0.0400616 %		func_inst: 32614
1193(cse_gen_binary)
	inst: 0.0450168 %		func_inst: 36648
1194(simplify_relational_operation)
	inst: 0.0719215 %		func_inst: 58551
1195(simplify_ternary_operation)
	inst: 0.0172068 %		func_inst: 14008
1196(fold_rtx)
	inst: 1.86526 %		func_inst: 1518502
1197(equiv_constant)
	inst: 0.126811 %		func_inst: 103236
1198(gen_lowpart_if_possible)
	inst: 0.037428 %		func_inst: 30470
1199(record_jump_cond)
	inst: 0.099562 %		func_inst: 81053
1200(cse_insn)
	inst: 4.13994 %		func_inst: 3370306
1201(note_mem_written)
	inst: 0.0135979 %		func_inst: 11070
1202(invalidate_from_clobbers)
	inst: 0.399938 %		func_inst: 325588
1203(cse_process_notes)
	inst: 0.181842 %		func_inst: 148037
1204(cse_around_loop)
	inst: 0.00805065 %		func_inst: 6554
1205(invalidate_skipped_set)
	inst: 0.00434224 %		func_inst: 3535
1206(cse_set_around_loop)
	inst: 0.0232565 %		func_inst: 18933
1207(cse_end_of_basic_block)
	inst: 0.431583 %		func_inst: 351350
1208(cse_main)
	inst: 0.138899 %		func_inst: 113077
1209(cse_basic_block)
	inst: 0.300999 %		func_inst: 245042
1210(count_reg_usage)
	inst: 0.56735 %		func_inst: 461877
1211(delete_dead_from_cse)
	inst: 0.0795398 %		func_inst: 64753
1212(cse_check_loop_start)
	inst: 0.00053065 %		func_inst: 432
1213(init_loop)
	inst: 3.31656e-05 %		func_inst: 27
1214(loop_optimize)
	inst: 0.0708664 %		func_inst: 57692
1215(scan_loop)
	inst: 0.157552 %		func_inst: 128262
1216(record_excess_regs)
	inst: 0 %		func_inst: 0
1217(libcall_other_reg)
	inst: 0 %		func_inst: 0
1218(reg_in_basic_block_p)
	inst: 0.000626462 %		func_inst: 510
1219(libcall_benefit)
	inst: 0 %		func_inst: 0
1220(skip_consec_insns)
	inst: 0 %		func_inst: 0
1221(ignore_some_movables)
	inst: 0.000718589 %		func_inst: 585
1222(force_movables)
	inst: 0.0012431 %		func_inst: 1012
1223(combine_movables)
	inst: 0.0114151 %		func_inst: 9293
1224(rtx_equal_for_loop_p)
	inst: 0.0162413 %		func_inst: 13222
1225(add_label_notes)
	inst: 0.00455229 %		func_inst: 3706
1226(move_movables)
	inst: 0.0290175 %		func_inst: 23623
1227(count_nonfixed_reads)
	inst: 0.0557072 %		func_inst: 45351
1228(prescan_loop)
	inst: 0.0177682 %		func_inst: 14465
1229(find_and_verify_loops)
	inst: 0.0661863 %		func_inst: 53882
1230(mark_loop_jump)
	inst: 0.016842 %		func_inst: 13711
1231(labels_in_range_p)
	inst: 0 %		func_inst: 0
1232(note_addr_stored)
	inst: 0.0134259 %		func_inst: 10930
1233(invariant_p)
	inst: 0.0842862 %		func_inst: 68617
1234(consec_sets_invariant_p)
	inst: 0 %		func_inst: 0
1235(find_single_use_in_loop)
	inst: 0.205981 %		func_inst: 167688
1236(count_loop_regs_set)
	inst: 0.0656299 %		func_inst: 53429
1237(loop_reg_used_before_p)
	inst: 0.0228745 %		func_inst: 18622
1238(strength_reduce)
	inst: 0.0873595 %		func_inst: 71119
1239(valid_initial_value_p)
	inst: 0.000696479 %		func_inst: 567
1240(find_mem_givs)
	inst: 0.0573606 %		func_inst: 46697
1241(record_biv)
	inst: 0.00244075 %		func_inst: 1987
1242(record_giv)
	inst: 0.00729276 %		func_inst: 5937
1243(check_final_value)
	inst: 0 %		func_inst: 0
1244(update_giv_derive)
	inst: 0.0152636 %		func_inst: 12426
1245(basic_induction_var)
	inst: 0.0113476 %		func_inst: 9238
1246(general_induction_var)
	inst: 0.00886628 %		func_inst: 7218
1247(simplify_giv_expr)
	inst: 0.034878 %		func_inst: 28394
1248(consec_sets_giv)
	inst: 0 %		func_inst: 0
1249(combine_givs_p)
	inst: 0.000675597 %		func_inst: 550
1250(combine_givs)
	inst: 0.00244197 %		func_inst: 1988
1251(emit_iv_add_mult)
	inst: 0.000560131 %		func_inst: 456
1252(product_cheap_p)
	inst: 0.000486429 %		func_inst: 396
1253(check_dbra_loop)
	inst: 0.00434838 %		func_inst: 3540
1254(maybe_eliminate_biv)
	inst: 0.00598087 %		func_inst: 4869
1255(maybe_eliminate_biv_1)
	inst: 0.00545759 %		func_inst: 4443
1256(last_use_this_basic_block)
	inst: 0.000641203 %		func_inst: 522
1257(record_initial)
	inst: 0.00367525 %		func_inst: 2992
1258(update_reg_last_use)
	inst: 0.0021484 %		func_inst: 1749
1259(get_condition)
	inst: 0.0102912 %		func_inst: 8378
1260(get_condition_for_loop)
	inst: 0.000676825 %		func_inst: 551
1261(unroll_loop)
	inst: 0.0121509 %		func_inst: 9892
1262(precondition_loop_p)
	inst: 0.000635061 %		func_inst: 517
1263(init_reg_map)
	inst: 0 %		func_inst: 0
1264(initial_reg_note_copy)
	inst: 0 %		func_inst: 0
1265(copy_loop_body)
	inst: 0 %		func_inst: 0
1266(emit_unrolled_add)
	inst: 0 %		func_inst: 0
1267(biv_total_increment)
	inst: 0.00149368 %		func_inst: 1216
1268(iteration_info)
	inst: 0.000746841 %		func_inst: 608
1269(find_splittable_regs)
	inst: 0 %		func_inst: 0
1270(find_splittable_givs)
	inst: 0 %		func_inst: 0
1271(final_biv_value)
	inst: 0.00052328 %		func_inst: 426
1272(final_giv_value)
	inst: 0 %		func_inst: 0
1273(loop_iterations)
	inst: 0.00145192 %		func_inst: 1182
1274(flow_analysis)
	inst: 0.0412335 %		func_inst: 33568
1275(find_basic_blocks)
	inst: 0.133728 %		func_inst: 108867
1276(mark_label_ref)
	inst: 0.05534 %		func_inst: 45052
1277(life_analysis)
	inst: 0.250964 %		func_inst: 204309
1278(allocate_for_life_analysis)
	inst: 0.011748 %		func_inst: 9564
1279(init_regset_vector)
	inst: 0.00646607 %		func_inst: 5264
1280(propagate_block)
	inst: 2.65146 %		func_inst: 2158543
1281(insn_dead_p)
	inst: 0.232824 %		func_inst: 189541
1282(libcall_dead_p)
	inst: 0 %		func_inst: 0
1283(regno_uninitialized)
	inst: 0 %		func_inst: 0
1284(regno_clobbered_at_setjmp)
	inst: 0 %		func_inst: 0
1285(mark_set_regs)
	inst: 0.14456 %		func_inst: 117686
1286(mark_set_1)
	inst: 0.35018 %		func_inst: 285080
1287(mark_used_regs)
	inst: 0.808935 %		func_inst: 658550
1288(find_use_as_address)
	inst: 0 %		func_inst: 0
1289(dump_flow_info)
	inst: 0 %		func_inst: 0
1290(stupid_life_analysis)
	inst: 0 %		func_inst: 0
1291(stupid_reg_compare)
	inst: 0 %		func_inst: 0
1292(stupid_find_reg)
	inst: 0 %		func_inst: 0
1293(stupid_mark_refs)
	inst: 0 %		func_inst: 0
1294(combine_instructions)
	inst: 0.157644 %		func_inst: 128337
1295(init_reg_last_arrays)
	inst: 0.00120379 %		func_inst: 980
1296(setup_incoming_promotions)
	inst: 0 %		func_inst: 0
1297(set_nonzero_bits_and_sign_copies)
	inst: 0.0397005 %		func_inst: 32320
1298(can_combine_p)
	inst: 0.226846 %		func_inst: 184674
1299(combinable_i3pat)
	inst: 0.152061 %		func_inst: 123792
1300(try_combine)
	inst: 0.422706 %		func_inst: 344123
1301(undo_all)
	inst: 0.0598701 %		func_inst: 48740
1302(find_split_point)
	inst: 0.0369957 %		func_inst: 30118
1303(subst)
	inst: 2.31439 %		func_inst: 1884134
1304(expand_compound_operation)
	inst: 0.00848426 %		func_inst: 6907
1305(expand_field_assignment)
	inst: 0.124541 %		func_inst: 101388
1306(make_extraction)
	inst: 0.0127995 %		func_inst: 10420
1307(make_compound_operation)
	inst: 1.212 %		func_inst: 986681
1308(force_to_mode)
	inst: 0.0273641 %		func_inst: 22277
1309(known_cond)
	inst: 0 %		func_inst: 0
1310(make_field_assignment)
	inst: 0.0414239 %		func_inst: 33723
1311(apply_distributive_law)
	inst: 0.0327112 %		func_inst: 26630
1312(simplify_and_const_int)
	inst: 0.012286 %		func_inst: 10002
1313(nonzero_bits)
	inst: 0.648015 %		func_inst: 527546
1314(num_sign_bit_copies)
	inst: 0.300084 %		func_inst: 244297
1315(extended_count)
	inst: 0 %		func_inst: 0
1316(merge_outer_ops)
	inst: 0.00436313 %		func_inst: 3552
1317(simplify_shift_const)
	inst: 0.140378 %		func_inst: 114281
1318(recog_for_combine)
	inst: 0.119318 %		func_inst: 97136
1319(gen_lowpart_for_combine)
	inst: 0.0238068 %		func_inst: 19381
1320(gen_rtx_combine)
	inst: 0.0635957 %		func_inst: 51773
1321(gen_binary)
	inst: 0.00435084 %		func_inst: 3542
1322(gen_unary)
	inst: 0 %		func_inst: 0
1323(simplify_comparison)
	inst: 0.0932974 %		func_inst: 75953
1324(reversible_comparison_p)
	inst: 0.0141777 %		func_inst: 11542
1325(update_table_tick)
	inst: 0.153475 %		func_inst: 124943
1326(record_value_for_reg)
	inst: 0.416624 %		func_inst: 339172
1327(record_dead_and_set_regs)
	inst: 0.662868 %		func_inst: 539638
1328(get_last_value_validate)
	inst: 0.527304 %		func_inst: 429276
1329(get_last_value)
	inst: 0.0624276 %		func_inst: 50822
1330(use_crosses_set_p)
	inst: 0.092526 %		func_inst: 75325
1331(reg_dead_at_p)
	inst: 6.01895e-05 %		func_inst: 49
1332(remove_death)
	inst: 0.000265325 %		func_inst: 216
1333(move_deaths)
	inst: 0.0230907 %		func_inst: 18798
1334(reg_bitfield_target_p)
	inst: 0.00120379 %		func_inst: 980
1335(distribute_notes)
	inst: 0.0206167 %		func_inst: 16784
1336(distribute_links)
	inst: 0.0120563 %		func_inst: 9815
1337(dump_combine_stats)
	inst: 0 %		func_inst: 0
1338(dump_combine_total_stats)
	inst: 0 %		func_inst: 0
1339(record_dead_and_set_regs_1)
	inst: 0.0672698 %		func_inst: 54764
1340(reg_dead_at_p_1)
	inst: 5.89612e-05 %		func_inst: 48
1341(init_reg_sets)
	inst: 0.0177068 %		func_inst: 14415
1342(init_reg_sets_1)
	inst: 0.00296648 %		func_inst: 2415
1343(fix_register)
	inst: 0 %		func_inst: 0
1344(reg_preferred_class)
	inst: 0.00330428 %		func_inst: 2690
1345(reg_alternate_class)
	inst: 0.00428942 %		func_inst: 3492
1346(regclass_init)
	inst: 1.7197e-05 %		func_inst: 14
1347(regclass)
	inst: 0.955044 %		func_inst: 777497
1348(record_reg_classes)
	inst: 2.7414 %		func_inst: 2231764
1349(copy_cost)
	inst: 0.168413 %		func_inst: 137104
1350(record_address_regs)
	inst: 0.0827446 %		func_inst: 67362
1351(reg_scan)
	inst: 0.13054 %		func_inst: 106272
1352(reg_scan_mark_refs)
	inst: 2.29923 %		func_inst: 1871789
1353(reg_class_subset_p)
	inst: 0.000646116 %		func_inst: 526
1354(reg_classes_intersect_p)
	inst: 0 %		func_inst: 0
1355(alloc_qty_for_scratch)
	inst: 0.00249357 %		func_inst: 2030
1356(local_alloc)
	inst: 0.039472 %		func_inst: 32134
1357(memref_referenced_p)
	inst: 0.00839459 %		func_inst: 6834
1358(optimize_reg_copy_1)
	inst: 0.0015637 %		func_inst: 1273
1359(optimize_reg_copy_2)
	inst: 0.000191624 %		func_inst: 156
1360(update_equiv_regs)
	inst: 0.115466 %		func_inst: 94000
1361(block_alloc)
	inst: 0.507592 %		func_inst: 413228
1362(qty_compare)
	inst: 0.00542934 %		func_inst: 4420
1363(qty_compare_1)
	inst: 0.0380201 %		func_inst: 30952
1364(combine_regs)
	inst: 0.0364699 %		func_inst: 29690
1365(reg_meets_class_p)
	inst: 0.000569958 %		func_inst: 464
1366(update_qty_class)
	inst: 0.00110429 %		func_inst: 899
1367(reg_is_set)
	inst: 0.019607 %		func_inst: 15962
1368(reg_is_born)
	inst: 0.0574957 %		func_inst: 46807
1369(wipe_dead_reg)
	inst: 0.0448277 %		func_inst: 36494
1370(find_free_reg)
	inst: 0.0964469 %		func_inst: 78517
1371(mark_life)
	inst: 0.0403515 %		func_inst: 32850
1372(post_mark_life)
	inst: 0.0824068 %		func_inst: 67087
1373(no_conflict_p)
	inst: 0 %		func_inst: 0
1374(requires_inout_p)
	inst: 0.0278137 %		func_inst: 22643
1375(dump_local_alloc)
	inst: 0 %		func_inst: 0
1376(validate_equiv_mem_from_store)
	inst: 0.00291981 %		func_inst: 2377
1377(global_alloc)
	inst: 0.115064 %		func_inst: 93673
1378(allocno_compare)
	inst: 0.041516 %		func_inst: 33798
1379(global_conflicts)
	inst: 0.296835 %		func_inst: 241652
1380(expand_preferences)
	inst: 0.0359638 %		func_inst: 29278
1381(prune_preferences)
	inst: 0.0853794 %		func_inst: 69507
1382(find_reg)
	inst: 0.219991 %		func_inst: 179094
1383(retry_global_alloc)
	inst: 0 %		func_inst: 0
1384(record_one_conflict)
	inst: 0.465283 %		func_inst: 378785
1385(record_conflicts)
	inst: 0.0355953 %		func_inst: 28978
1386(mark_reg_store)
	inst: 0.0781714 %		func_inst: 63639
1387(mark_reg_clobber)
	inst: 0.0423341 %		func_inst: 34464
1388(mark_reg_conflicts)
	inst: 0 %		func_inst: 0
1389(mark_reg_death)
	inst: 0.0480472 %		func_inst: 39115
1390(mark_reg_live_nc)
	inst: 0 %		func_inst: 0
1391(set_preference)
	inst: 0.0466063 %		func_inst: 37942
1392(mark_elimination)
	inst: 0 %		func_inst: 0
1393(dump_conflicts)
	inst: 0 %		func_inst: 0
1394(dump_global_regs)
	inst: 0 %		func_inst: 0
1395(find_secondary_reload)
	inst: 0 %		func_inst: 0
1396(get_secondary_mem)
	inst: 0 %		func_inst: 0
1397(clear_secondary_mem)
	inst: 0.000103182 %		func_inst: 84
1398(push_reload)
	inst: 0 %		func_inst: 0
1399(transfer_replacements)
	inst: 0 %		func_inst: 0
1400(combine_reloads)
	inst: 0.0301255 %		func_inst: 24525
1401(find_dummy_reload)
	inst: 0 %		func_inst: 0
1402(earlyclobber_operand_p)
	inst: 0 %		func_inst: 0
1403(hard_reg_set_here_p)
	inst: 0 %		func_inst: 0
1404(strict_memory_address_p)
	inst: 0.00716009 %		func_inst: 5829
1405(operands_match_p)
	inst: 0 %		func_inst: 0
1406(n_occurrences)
	inst: 0 %		func_inst: 0
1407(decompose)
	inst: 0.000825456 %		func_inst: 672
1408(immune_p)
	inst: 0.000206364 %		func_inst: 168
1409(safe_from_earlyclobber)
	inst: 0 %		func_inst: 0
1410(find_reloads)
	inst: 1.66033 %		func_inst: 1351671
1411(alternative_allows_memconst)
	inst: 0 %		func_inst: 0
1412(find_reloads_toplev)
	inst: 0.00111781 %		func_inst: 910
1413(find_reloads_address)
	inst: 0.0133719 %		func_inst: 10886
1414(subst_reg_equivs)
	inst: 0.00682475 %		func_inst: 5556
1415(form_sum)
	inst: 0 %		func_inst: 0
1416(subst_indexed_address)
	inst: 0 %		func_inst: 0
1417(find_reloads_address_1)
	inst: 0 %		func_inst: 0
1418(find_reloads_address_part)
	inst: 0 %		func_inst: 0
1419(subst_reloads)
	inst: 0 %		func_inst: 0
1420(copy_replacements)
	inst: 0 %		func_inst: 0
1421(find_replacement)
	inst: 0 %		func_inst: 0
1422(refers_to_regno_for_reload_p)
	inst: 0.000891787 %		func_inst: 726
1423(reg_overlap_mentioned_for_reload_p)
	inst: 0 %		func_inst: 0
1424(refers_to_mem_for_reload_p)
	inst: 0 %		func_inst: 0
1425(find_equiv_reg)
	inst: 0.121944 %		func_inst: 99274
1426(find_inc_amount)
	inst: 0 %		func_inst: 0
1427(regno_clobbered_p)
	inst: 0.00050854 %		func_inst: 414
1428(init_reload)
	inst: 0.00159195 %		func_inst: 1296
1429(reload)
	inst: 0.2712 %		func_inst: 220783
1430(possible_group_p)
	inst: 0 %		func_inst: 0
1431(count_possible_groups)
	inst: 0 %		func_inst: 0
1432(modes_equiv_for_class_p)
	inst: 0 %		func_inst: 0
1433(spill_failure)
	inst: 0 %		func_inst: 0
1434(new_spill_reg)
	inst: 0 %		func_inst: 0
1435(delete_dead_insn)
	inst: 0 %		func_inst: 0
1436(alter_reg)
	inst: 0.0306844 %		func_inst: 24980
1437(mark_home_live)
	inst: 0.0167302 %		func_inst: 13620
1438(mark_scratch_live)
	inst: 0.00034394 %		func_inst: 280
1439(set_label_offsets)
	inst: 0.0722827 %		func_inst: 58845
1440(eliminate_regs)
	inst: 0 %		func_inst: 0
1441(eliminate_regs_in_insn)
	inst: 0 %		func_inst: 0
1442(mark_not_eliminable)
	inst: 0 %		func_inst: 0
1443(spill_hard_reg)
	inst: 0.0253238 %		func_inst: 20616
1444(scan_paradoxical_subregs)
	inst: 0.293063 %		func_inst: 238581
1445(order_regs_for_reload)
	inst: 0.0689452 %		func_inst: 56128
1446(reload_as_needed)
	inst: 0 %		func_inst: 0
1447(forget_old_reloads_1)
	inst: 0 %		func_inst: 0
1448(reload_reg_class_lower)
	inst: 0 %		func_inst: 0
1449(mark_reload_reg_in_use)
	inst: 0 %		func_inst: 0
1450(clear_reload_reg_in_use)
	inst: 0 %		func_inst: 0
1451(reload_reg_free_p)
	inst: 0 %		func_inst: 0
1452(reload_reg_free_before_p)
	inst: 0 %		func_inst: 0
1453(reload_reg_reaches_end_p)
	inst: 0 %		func_inst: 0
1454(allocate_reload_reg)
	inst: 0 %		func_inst: 0
1455(choose_reload_regs)
	inst: 0 %		func_inst: 0
1456(emit_reload_insns)
	inst: 0 %		func_inst: 0
1457(gen_input_reload)
	inst: 0 %		func_inst: 0
1458(delete_output_reload)
	inst: 0 %		func_inst: 0
1459(inc_for_reload)
	inst: 0 %		func_inst: 0
1460(constraint_accepts_reg_p)
	inst: 0 %		func_inst: 0
1461(count_occurrences)
	inst: 0 %		func_inst: 0
1462(hard_reg_use_compare)
	inst: 0.0444776 %		func_inst: 36209
1463(choose_hard_reg_mode)
	inst: 0 %		func_inst: 0
1464(init_caller_save)
	inst: 0 %		func_inst: 0
1465(init_save_areas)
	inst: 0.0176613 %		func_inst: 14378
1466(setup_save_areas)
	inst: 0 %		func_inst: 0
1467(save_call_clobbered_regs)
	inst: 0 %		func_inst: 0
1468(set_reg_live)
	inst: 0 %		func_inst: 0
1469(clear_reg_live)
	inst: 0 %		func_inst: 0
1470(restore_referenced_regs)
	inst: 0 %		func_inst: 0
1471(insert_save_restore)
	inst: 0 %		func_inst: 0
1472(peephole)
	inst: 0.211815 %		func_inst: 172438
1473(mark_referenced_resources)
	inst: 1.47884 %		func_inst: 1203918
1474(mark_set_resources)
	inst: 2.05783 %		func_inst: 1675266
1475(find_end_label)
	inst: 0.00052328 %		func_inst: 426
1476(emit_delay_sequence)
	inst: 0.0428377 %		func_inst: 34874
1477(add_to_delay_list)
	inst: 0 %		func_inst: 0
1478(delete_from_delay_slot)
	inst: 0 %		func_inst: 0
1479(note_delay_statistics)
	inst: 0.0139848 %		func_inst: 11385
1480(optimize_skip)
	inst: 0.00533721 %		func_inst: 4345
1481(get_jump_flags)
	inst: 0.00755931 %		func_inst: 6154
1482(mostly_true_jump)
	inst: 0.168423 %		func_inst: 137112
1483(get_branch_condition)
	inst: 0.0271025 %		func_inst: 22064
1484(redirect_with_delay_slots_safe_p)
	inst: 0.000423783 %		func_inst: 345
1485(steal_delay_list_from_target)
	inst: 0 %		func_inst: 0
1486(steal_delay_list_from_fallthrough)
	inst: 0.000757896 %		func_inst: 617
1487(try_merge_delay_insns)
	inst: 0.0873681 %		func_inst: 71126
1488(redundant_insn_p)
	inst: 0.165634 %		func_inst: 134842
1489(update_block)
	inst: 0.0767895 %		func_inst: 62514
1490(reorg_redirect_jump)
	inst: 0.0342982 %		func_inst: 27922
1491(update_live_status)
	inst: 0.284916 %		func_inst: 231949
1492(mark_target_live_regs)
	inst: 2.62122 %		func_inst: 2133920
1493(fill_simple_delay_slots)
	inst: 0.240364 %		func_inst: 195679
1494(fill_slots_from_thread)
	inst: 0.0886739 %		func_inst: 72189
1495(fill_eager_delay_slots)
	inst: 0.0252673 %		func_inst: 20570
1496(relax_delay_slots)
	inst: 0.0634422 %		func_inst: 51648
1497(make_return_insns)
	inst: 0 %		func_inst: 0
1498(dbr_schedule)
	inst: 0.102923 %		func_inst: 83789
1499(canon_rtx)
	inst: 0.0240783 %		func_inst: 19602
1500(init_alias_analysis)
	inst: 0.12027 %		func_inst: 97911
1501(rtx_equal_for_memref_p)
	inst: 0.0529741 %		func_inst: 43126
1502(find_symbolic_term)
	inst: 0.00053065 %		func_inst: 432
1503(memrefs_conflict_p)
	inst: 0.0372143 %		func_inst: 30296
1504(read_dependence)
	inst: 0 %		func_inst: 0
1505(true_dependence)
	inst: 0.00496011 %		func_inst: 4038
1506(anti_dependence)
	inst: 0.0027982 %		func_inst: 2278
1507(output_dependence)
	inst: 0.00415922 %		func_inst: 3386
1508(prepare_unit)
	inst: 0 %		func_inst: 0
1509(schedule_unit)
	inst: 0 %		func_inst: 0
1510(actual_hazard)
	inst: 0 %		func_inst: 0
1511(potential_hazard)
	inst: 0 %		func_inst: 0
1512(priority)
	inst: 0.601453 %		func_inst: 489640
1513(free_pending_lists)
	inst: 0.0101217 %		func_inst: 8240
1514(flush_pending_lists)
	inst: 0.0255351 %		func_inst: 20788
1515(sched_analyze_1)
	inst: 0.284597 %		func_inst: 231689
1516(sched_analyze_2)
	inst: 0.635761 %		func_inst: 517570
1517(sched_analyze_insn)
	inst: 0.153394 %		func_inst: 124877
1518(sched_analyze)
	inst: 0.848544 %		func_inst: 690796
1519(sched_note_set)
	inst: 0.151477 %		func_inst: 123317
1520(rank_for_schedule)
	inst: 0.0900214 %		func_inst: 73286
1521(birthing_insn_p)
	inst: 0.00753474 %		func_inst: 6134
1522(schedule_insn)
	inst: 0.430334 %		func_inst: 350333
1523(schedule_select)
	inst: 0.312296 %		func_inst: 254239
1524(create_reg_dead_note)
	inst: 0.043307 %		func_inst: 35256
1525(attach_deaths)
	inst: 0.328561 %		func_inst: 267480
1526(schedule_block)
	inst: 1.71374 %		func_inst: 1395145
1527(regno_use_in)
	inst: 0 %		func_inst: 0
1528(new_insn_dead_notes)
	inst: 8.96701e-05 %		func_inst: 73
1529(update_flow_info)
	inst: 0.000469232 %		func_inst: 382
1530(schedule_insns)
	inst: 0.113634 %		func_inst: 92509
1531(init_final)
	inst: 1.22836e-05 %		func_inst: 10
1532(end_final)
	inst: 3.07089e-05 %		func_inst: 25
1533(app_enable)
	inst: 0 %		func_inst: 0
1534(app_disable)
	inst: 0.000137576 %		func_inst: 112
1535(dbr_sequence_length)
	inst: 0.00129469 %		func_inst: 1054
1536(init_insn_lengths)
	inst: 1.7197e-05 %		func_inst: 14
1537(get_attr_length)
	inst: 0.000864764 %		func_inst: 704
1538(shorten_branches)
	inst: 0.172313 %		func_inst: 140279
1539(asm_insn_count)
	inst: 0 %		func_inst: 0
1540(final_start_function)
	inst: 0.000464319 %		func_inst: 378
1541(profile_after_prologue)
	inst: 0.000154773 %		func_inst: 126
1542(profile_function)
	inst: 0 %		func_inst: 0
1543(final_end_function)
	inst: 0.000257955 %		func_inst: 210
1544(add_bb_string)
	inst: 0 %		func_inst: 0
1545(final)
	inst: 0.0335907 %		func_inst: 27346
1546(final_scan_insn)
	inst: 0.298153 %		func_inst: 242725
1547(output_source_line)
	inst: 0 %		func_inst: 0
1548(alter_subreg)
	inst: 0.00017197 %		func_inst: 140
1549(walk_alter_subreg)
	inst: 0.0238658 %		func_inst: 19429
1550(output_operand_lossage)
	inst: 0 %		func_inst: 0
1551(output_asm_insn)
	inst: 0.339766 %		func_inst: 276602
1552(output_asm_label)
	inst: 0.00252427 %		func_inst: 2055
1553(output_operand)
	inst: 0.0538524 %		func_inst: 43841
1554(output_address)
	inst: 0.0280115 %		func_inst: 22804
1555(output_addr_const)
	inst: 0.0269391 %		func_inst: 21931
1556(asm_fprintf)
	inst: 0 %		func_inst: 0
1557(split_double)
	inst: 0 %		func_inst: 0
1558(leaf_function_p)
	inst: 0.00256972 %		func_inst: 2092
1559(only_leaf_regs_used)
	inst: 0.00779024 %		func_inst: 6342
1560(leaf_renumber_regs)
	inst: 0 %		func_inst: 0
1561(leaf_renumber_regs_insn)
	inst: 0 %		func_inst: 0
1562(init_recog_no_volatile)
	inst: 5.1591e-05 %		func_inst: 42
1563(init_recog)
	inst: 0.000208821 %		func_inst: 170
1564(recog_memoized)
	inst: 0.399712 %		func_inst: 325404
1565(check_asm_operands)
	inst: 0.0529569 %		func_inst: 43112
1566(validate_change)
	inst: 0.345053 %		func_inst: 280906
1567(apply_change_group)
	inst: 0.43745 %		func_inst: 356126
1568(num_validated_changes)
	inst: 0 %		func_inst: 0
1569(cancel_changes)
	inst: 0.0564455 %		func_inst: 45952
1570(validate_replace_rtx_1)
	inst: 0.0204939 %		func_inst: 16684
1571(validate_replace_rtx)
	inst: 0.000393074 %		func_inst: 320
1572(find_single_use_1)
	inst: 0.106621 %		func_inst: 86800
1573(find_single_use)
	inst: 0.0146224 %		func_inst: 11904
1574(general_operand)
	inst: 0.14219 %		func_inst: 115756
1575(address_operand)
	inst: 0.00332271 %		func_inst: 2705
1576(register_operand)
	inst: 0.587393 %		func_inst: 478194
1577(scratch_operand)
	inst: 0 %		func_inst: 0
1578(immediate_operand)
	inst: 0.0713577 %		func_inst: 58092
1579(const_int_operand)
	inst: 0 %		func_inst: 0
1580(const_double_operand)
	inst: 0 %		func_inst: 0
1581(nonimmediate_operand)
	inst: 0 %		func_inst: 0
1582(nonmemory_operand)
	inst: 0 %		func_inst: 0
1583(push_operand)
	inst: 0.0018671 %		func_inst: 1520
1584(memory_address_p)
	inst: 0.120972 %		func_inst: 98483
1585(memory_operand)
	inst: 0.0649187 %		func_inst: 52850
1586(indirect_operand)
	inst: 0 %		func_inst: 0
1587(comparison_operator)
	inst: 0 %		func_inst: 0
1588(asm_noperands)
	inst: 0.195733 %		func_inst: 159345
1589(decode_asm_operands)
	inst: 0 %		func_inst: 0
1590(find_constant_term_loc)
	inst: 0 %		func_inst: 0
1591(offsettable_memref_p)
	inst: 0 %		func_inst: 0
1592(offsettable_nonstrict_memref_p)
	inst: 0 %		func_inst: 0
1593(offsettable_address_p)
	inst: 0 %		func_inst: 0
1594(mode_dependent_address_p)
	inst: 0.000219876 %		func_inst: 179
1595(mode_independent_operand)
	inst: 0 %		func_inst: 0
1596(adj_offsettable_operand)
	inst: 0 %		func_inst: 0
1597(constrain_operands)
	inst: 1.90274 %		func_inst: 1549012
1598(reg_fits_class_p)
	inst: 0.29955 %		func_inst: 243862
1599(init_all_optabs)
	inst: 0.000319373 %		func_inst: 260
1600(recog_1)
	inst: 0.109606 %		func_inst: 89230
1601(recog_2)
	inst: 0.0861803 %		func_inst: 70159
1602(recog_3)
	inst: 0.549416 %		func_inst: 447277
1603(recog_4)
	inst: 0.00759493 %		func_inst: 6183
1604(recog_5)
	inst: 0.0698886 %		func_inst: 56896
1605(recog)
	inst: 0.392948 %		func_inst: 319897
1606(split_1)
	inst: 0.00109692 %		func_inst: 893
1607(split_insns)
	inst: 0.115373 %		func_inst: 93925
1608(insn_extract)
	inst: 0.306303 %		func_inst: 249360
1609(output_44)
	inst: 0 %		func_inst: 0
1610(output_55)
	inst: 0.00173198 %		func_inst: 1410
1611(output_56)
	inst: 0 %		func_inst: 0
1612(output_58)
	inst: 0.000147403 %		func_inst: 120
1613(output_62)
	inst: 1.84254e-05 %		func_inst: 15
1614(output_66)
	inst: 0.0019101 %		func_inst: 1555
1615(output_68)
	inst: 0 %		func_inst: 0
1616(output_76)
	inst: 0 %		func_inst: 0
1617(output_77)
	inst: 0 %		func_inst: 0
1618(output_78)
	inst: 0 %		func_inst: 0
1619(output_80)
	inst: 0 %		func_inst: 0
1620(output_81)
	inst: 0 %		func_inst: 0
1621(output_83)
	inst: 0 %		func_inst: 0
1622(output_85)
	inst: 0 %		func_inst: 0
1623(output_86)
	inst: 0 %		func_inst: 0
1624(output_88)
	inst: 0 %		func_inst: 0
1625(output_89)
	inst: 0 %		func_inst: 0
1626(output_91)
	inst: 0 %		func_inst: 0
1627(output_92)
	inst: 0 %		func_inst: 0
1628(output_93)
	inst: 0 %		func_inst: 0
1629(output_97)
	inst: 0 %		func_inst: 0
1630(output_99)
	inst: 3.68507e-05 %		func_inst: 30
1631(output_110)
	inst: 5.1591e-05 %		func_inst: 42
1632(output_123)
	inst: 0 %		func_inst: 0
1633(output_127)
	inst: 0 %		func_inst: 0
1634(output_144)
	inst: 0 %		func_inst: 0
1635(output_150)
	inst: 0 %		func_inst: 0
1636(output_156)
	inst: 0 %		func_inst: 0
1637(output_173)
	inst: 0 %		func_inst: 0
1638(output_191)
	inst: 0 %		func_inst: 0
1639(output_192)
	inst: 0 %		func_inst: 0
1640(output_194)
	inst: 0 %		func_inst: 0
1641(output_195)
	inst: 0 %		func_inst: 0
1642(output_211)
	inst: 0 %		func_inst: 0
1643(output_212)
	inst: 0.000117922 %		func_inst: 96
1644(output_213)
	inst: 0 %		func_inst: 0
1645(output_214)
	inst: 0 %		func_inst: 0
1646(output_216)
	inst: 0 %		func_inst: 0
1647(output_217)
	inst: 0.000277609 %		func_inst: 226
1648(output_219)
	inst: 0 %		func_inst: 0
1649(output_220)
	inst: 0 %		func_inst: 0
1650(output_223)
	inst: 0 %		func_inst: 0
1651(output_256)
	inst: 0 %		func_inst: 0
1652(output_257)
	inst: 0 %		func_inst: 0
1653(output_258)
	inst: 0 %		func_inst: 0
1654(output_260)
	inst: 0 %		func_inst: 0
1655(output_261)
	inst: 0 %		func_inst: 0
1656(output_262)
	inst: 0 %		func_inst: 0
1657(output_263)
	inst: 0 %		func_inst: 0
1658(output_264)
	inst: 0 %		func_inst: 0
1659(output_266)
	inst: 0 %		func_inst: 0
1660(output_267)
	inst: 0 %		func_inst: 0
1661(gen_cmpsi)
	inst: 0.00147894 %		func_inst: 1204
1662(gen_cmpsf)
	inst: 0 %		func_inst: 0
1663(gen_cmpdf)
	inst: 0 %		func_inst: 0
1664(gen_cmptf)
	inst: 0 %		func_inst: 0
1665(gen_seq_special)
	inst: 0 %		func_inst: 0
1666(gen_sne_special)
	inst: 0 %		func_inst: 0
1667(gen_seq)
	inst: 0 %		func_inst: 0
1668(gen_sne)
	inst: 7.12447e-05 %		func_inst: 58
1669(gen_sgt)
	inst: 0 %		func_inst: 0
1670(gen_slt)
	inst: 0 %		func_inst: 0
1671(gen_sge)
	inst: 0 %		func_inst: 0
1672(gen_sle)
	inst: 0 %		func_inst: 0
1673(gen_sgtu)
	inst: 0 %		func_inst: 0
1674(gen_sltu)
	inst: 0 %		func_inst: 0
1675(gen_sgeu)
	inst: 0 %		func_inst: 0
1676(gen_sleu)
	inst: 0 %		func_inst: 0
1677(gen_beq)
	inst: 0.000471689 %		func_inst: 384
1678(gen_bne)
	inst: 0.00192606 %		func_inst: 1568
1679(gen_bgt)
	inst: 0.000275152 %		func_inst: 224
1680(gen_bgtu)
	inst: 0 %		func_inst: 0
1681(gen_blt)
	inst: 0.000353767 %		func_inst: 288
1682(gen_bltu)
	inst: 0.000196537 %		func_inst: 160
1683(gen_bge)
	inst: 7.86149e-05 %		func_inst: 64
1684(gen_bgeu)
	inst: 0 %		func_inst: 0
1685(gen_ble)
	inst: 3.93074e-05 %		func_inst: 32
1686(gen_bleu)
	inst: 0 %		func_inst: 0
1687(gen_movqi)
	inst: 0.000773865 %		func_inst: 630
1688(gen_movhi)
	inst: 0.000221104 %		func_inst: 180
1689(gen_movsi)
	inst: 0.0137269 %		func_inst: 11175
1690(gen_movdi)
	inst: 0 %		func_inst: 0
1691(gen_movsf)
	inst: 0 %		func_inst: 0
1692(gen_movdf)
	inst: 0 %		func_inst: 0
1693(gen_split_87)
	inst: 0 %		func_inst: 0
1694(gen_movtf)
	inst: 0 %		func_inst: 0
1695(gen_zero_extendhisi2)
	inst: 0.000272695 %		func_inst: 222
1696(gen_zero_extendqihi2)
	inst: 0 %		func_inst: 0
1697(gen_zero_extendqisi2)
	inst: 5.89612e-05 %		func_inst: 48
1698(gen_extendhisi2)
	inst: 0.000136348 %		func_inst: 111
1699(gen_extendqihi2)
	inst: 0 %		func_inst: 0
1700(gen_extendqisi2)
	inst: 0.000636289 %		func_inst: 518
1701(gen_extendsfdf2)
	inst: 0 %		func_inst: 0
1702(gen_extendsftf2)
	inst: 0 %		func_inst: 0
1703(gen_extenddftf2)
	inst: 0 %		func_inst: 0
1704(gen_truncdfsf2)
	inst: 0 %		func_inst: 0
1705(gen_trunctfsf2)
	inst: 0 %		func_inst: 0
1706(gen_trunctfdf2)
	inst: 0 %		func_inst: 0
1707(gen_floatsisf2)
	inst: 0 %		func_inst: 0
1708(gen_floatsidf2)
	inst: 0 %		func_inst: 0
1709(gen_floatsitf2)
	inst: 0 %		func_inst: 0
1710(gen_fix_truncsfsi2)
	inst: 0 %		func_inst: 0
1711(gen_fix_truncdfsi2)
	inst: 0 %		func_inst: 0
1712(gen_fix_trunctfsi2)
	inst: 0 %		func_inst: 0
1713(gen_adddi3)
	inst: 0 %		func_inst: 0
1714(gen_addsi3)
	inst: 0.00146175 %		func_inst: 1190
1715(gen_subdi3)
	inst: 0 %		func_inst: 0
1716(gen_subsi3)
	inst: 0 %		func_inst: 0
1717(gen_mulsi3)
	inst: 0 %		func_inst: 0
1718(gen_mulsidi3)
	inst: 0 %		func_inst: 0
1719(gen_const_mulsidi3)
	inst: 0 %		func_inst: 0
1720(gen_umulsidi3)
	inst: 0 %		func_inst: 0
1721(gen_const_umulsidi3)
	inst: 0 %		func_inst: 0
1722(gen_divsi3)
	inst: 0 %		func_inst: 0
1723(gen_udivsi3)
	inst: 0 %		func_inst: 0
1724(gen_anddi3)
	inst: 0 %		func_inst: 0
1725(gen_andsi3)
	inst: 0.000103182 %		func_inst: 84
1726(gen_split_146)
	inst: 0 %		func_inst: 0
1727(gen_iordi3)
	inst: 0 %		func_inst: 0
1728(gen_iorsi3)
	inst: 0 %		func_inst: 0
1729(gen_split_152)
	inst: 0 %		func_inst: 0
1730(gen_xordi3)
	inst: 0 %		func_inst: 0
1731(gen_xorsi3)
	inst: 0 %		func_inst: 0
1732(gen_split_158)
	inst: 0 %		func_inst: 0
1733(gen_split_159)
	inst: 0 %		func_inst: 0
1734(gen_negdi2)
	inst: 0 %		func_inst: 0
1735(gen_negsi2)
	inst: 4.42209e-05 %		func_inst: 36
1736(gen_one_cmpldi2)
	inst: 0 %		func_inst: 0
1737(gen_one_cmplsi2)
	inst: 0 %		func_inst: 0
1738(gen_addtf3)
	inst: 0 %		func_inst: 0
1739(gen_adddf3)
	inst: 0 %		func_inst: 0
1740(gen_addsf3)
	inst: 0 %		func_inst: 0
1741(gen_subtf3)
	inst: 0 %		func_inst: 0
1742(gen_subdf3)
	inst: 0 %		func_inst: 0
1743(gen_subsf3)
	inst: 0 %		func_inst: 0
1744(gen_multf3)
	inst: 0 %		func_inst: 0
1745(gen_muldf3)
	inst: 0 %		func_inst: 0
1746(gen_mulsf3)
	inst: 0 %		func_inst: 0
1747(gen_divtf3)
	inst: 0 %		func_inst: 0
1748(gen_divdf3)
	inst: 0 %		func_inst: 0
1749(gen_divsf3)
	inst: 0 %		func_inst: 0
1750(gen_negtf2)
	inst: 0 %		func_inst: 0
1751(gen_negdf2)
	inst: 0 %		func_inst: 0
1752(gen_negsf2)
	inst: 0 %		func_inst: 0
1753(gen_abstf2)
	inst: 0 %		func_inst: 0
1754(gen_absdf2)
	inst: 0 %		func_inst: 0
1755(gen_abssf2)
	inst: 0 %		func_inst: 0
1756(gen_sqrttf2)
	inst: 0 %		func_inst: 0
1757(gen_sqrtdf2)
	inst: 0 %		func_inst: 0
1758(gen_sqrtsf2)
	inst: 0 %		func_inst: 0
1759(gen_ashlsi3)
	inst: 0.000877047 %		func_inst: 714
1760(gen_ashrsi3)
	inst: 0.000292349 %		func_inst: 238
1761(gen_lshrsi3)
	inst: 0.000137576 %		func_inst: 112
1762(gen_jump)
	inst: 0.00105025 %		func_inst: 855
1763(gen_tablejump)
	inst: 0 %		func_inst: 0
1764(gen_pic_tablejump)
	inst: 0 %		func_inst: 0
1765(gen_call)
	inst: 0.00259429 %		func_inst: 2112
1766(gen_call_value)
	inst: 0.00644151 %		func_inst: 5244
1767(gen_untyped_call)
	inst: 0 %		func_inst: 0
1768(gen_untyped_return)
	inst: 0 %		func_inst: 0
1769(gen_update_return)
	inst: 0 %		func_inst: 0
1770(gen_return)
	inst: 0 %		func_inst: 0
1771(gen_nop)
	inst: 0 %		func_inst: 0
1772(gen_indirect_jump)
	inst: 0 %		func_inst: 0
1773(gen_nonlocal_goto)
	inst: 0 %		func_inst: 0
1774(gen_flush_register_windows)
	inst: 0 %		func_inst: 0
1775(gen_goto_handler_and_restore)
	inst: 0 %		func_inst: 0
1776(gen_flush)
	inst: 0 %		func_inst: 0
1777(gen_ffssi2)
	inst: 0 %		func_inst: 0
1778(gen_split_231)
	inst: 0.000136348 %		func_inst: 111
1779(gen_split_232)
	inst: 0 %		func_inst: 0
1780(gen_split_233)
	inst: 0 %		func_inst: 0
1781(gen_split_234)
	inst: 0 %		func_inst: 0
1782(gen_split_235)
	inst: 0 %		func_inst: 0
1783(gen_split_236)
	inst: 0 %		func_inst: 0
1784(gen_split_237)
	inst: 0 %		func_inst: 0
1785(gen_split_238)
	inst: 5.1591e-05 %		func_inst: 42
1786(gen_split_239)
	inst: 0 %		func_inst: 0
1787(gen_split_240)
	inst: 0 %		func_inst: 0
1788(gen_split_241)
	inst: 0 %		func_inst: 0
1789(gen_split_242)
	inst: 0 %		func_inst: 0
1790(gen_split_243)
	inst: 0 %		func_inst: 0
1791(gen_split_244)
	inst: 0 %		func_inst: 0
1792(add_clobbers)
	inst: 0.000422555 %		func_inst: 344
1793(init_mov_optab)
	inst: 0 %		func_inst: 0
1794(insn_current_length)
	inst: 0 %		func_inst: 0
1795(insn_variable_length_p)
	inst: 0.0121067 %		func_inst: 9856
1796(insn_default_length)
	inst: 0.02916 %		func_inst: 23739
1797(result_ready_cost)
	inst: 0.0401304 %		func_inst: 32670
1798(fp_mds_unit_ready_cost)
	inst: 0 %		func_inst: 0
1799(fp_mds_unit_blockage_range)
	inst: 0 %		func_inst: 0
1800(fp_alu_unit_ready_cost)
	inst: 0 %		func_inst: 0
1801(memory_unit_ready_cost)
	inst: 0 %		func_inst: 0
1802(function_units_used)
	inst: 0.0459725 %		func_inst: 37426
1803(num_delay_slots)
	inst: 0.0315983 %		func_inst: 25724
1804(get_attr_in_annul_branch_delay)
	inst: 0 %		func_inst: 0
1805(get_attr_in_uncond_branch_delay)
	inst: 0 %		func_inst: 0
1806(get_attr_in_branch_delay)
	inst: 0 %		func_inst: 0
1807(get_attr_in_call_delay)
	inst: 0 %		func_inst: 0
1808(get_attr_type)
	inst: 0 %		func_inst: 0
1809(get_attr_use_clobbered)
	inst: 0 %		func_inst: 0
1810(eligible_for_delay)
	inst: 0.0164489 %		func_inst: 13391
1811(eligible_for_annul_false)
	inst: 0.00550181 %		func_inst: 4479
1812(const_num_delay_slots)
	inst: 0.00103182 %		func_inst: 840
1813(reg_or_0_operand)
	inst: 0.000596982 %		func_inst: 486
1814(fp_zero_operand)
	inst: 0 %		func_inst: 0
1815(restore_operand)
	inst: 0.00202679 %		func_inst: 1650
1816(call_operand)
	inst: 0 %		func_inst: 0
1817(call_operand_address)
	inst: 4.42209e-05 %		func_inst: 36
1818(symbolic_operand)
	inst: 0.00318759 %		func_inst: 2595
1819(symbolic_memory_operand)
	inst: 0.0539937 %		func_inst: 43956
1820(reg_or_nonsymb_mem_operand)
	inst: 0.0540404 %		func_inst: 43994
1821(sparc_operand)
	inst: 0.000555218 %		func_inst: 452
1822(move_operand)
	inst: 0.102416 %		func_inst: 83376
1823(move_pic_label)
	inst: 0.000773865 %		func_inst: 630
1824(memop)
	inst: 0.00879012 %		func_inst: 7156
1825(eq_or_neq)
	inst: 0 %		func_inst: 0
1826(normal_comp_operator)
	inst: 0 %		func_inst: 0
1827(noov_compare_op)
	inst: 0.0365498 %		func_inst: 29755
1828(extend_op)
	inst: 0.00465793 %		func_inst: 3792
1829(cc_arithop)
	inst: 0.00281048 %		func_inst: 2288
1830(cc_arithopn)
	inst: 0.00105393 %		func_inst: 858
1831(arith_operand)
	inst: 0.0240328 %		func_inst: 19565
1832(arith_double_operand)
	inst: 0 %		func_inst: 0
1833(shift_operand)
	inst: 0.00409289 %		func_inst: 3332
1834(small_int)
	inst: 3.93074e-05 %		func_inst: 32
1835(uns_small_int)
	inst: 0 %		func_inst: 0
1836(uns_arith_operand)
	inst: 0 %		func_inst: 0
1837(clobbered_register)
	inst: 0 %		func_inst: 0
1838(gen_compare_reg)
	inst: 0.00428083 %		func_inst: 3485
1839(leaf_return_peephole_ok)
	inst: 0 %		func_inst: 0
1840(eligible_for_epilogue_delay)
	inst: 0.000589612 %		func_inst: 480
1841(short_branch)
	inst: 0 %		func_inst: 0
1842(reg_unused_after)
	inst: 0 %		func_inst: 0
1843(check_pic)
	inst: 0.00200468 %		func_inst: 1632
1844(pic_address_needs_scratch)
	inst: 0 %		func_inst: 0
1845(legitimize_pic_address)
	inst: 0 %		func_inst: 0
1846(initialize_pic)
	inst: 0 %		func_inst: 0
1847(finalize_pic)
	inst: 0 %		func_inst: 0
1848(sparc_address_cost)
	inst: 0.0291551 %		func_inst: 23735
1849(emit_move_sequence)
	inst: 0.0533672 %		func_inst: 43446
1850(singlemove_string)
	inst: 0 %		func_inst: 0
1851(mem_aligned_8)
	inst: 0 %		func_inst: 0
1852(output_move_double)
	inst: 0 %		func_inst: 0
1853(output_move_quad)
	inst: 0 %		func_inst: 0
1854(output_fp_move_double)
	inst: 0 %		func_inst: 0
1855(output_fp_move_quad)
	inst: 0 %		func_inst: 0
1856(find_addr_reg)
	inst: 0 %		func_inst: 0
1857(output_scc_insn)
	inst: 0 %		func_inst: 0
1858(compute_frame_size)
	inst: 0.00823736 %		func_inst: 6706
1859(output_function_prologue)
	inst: 0.000877047 %		func_inst: 714
1860(output_function_epilogue)
	inst: 0.000877047 %		func_inst: 714
1861(sparc_builtin_saveregs)
	inst: 0 %		func_inst: 0
1862(output_cbranch)
	inst: 0.00711956 %		func_inst: 5796
1863(output_return)
	inst: 0 %		func_inst: 0
1864(order_regs_for_local_alloc)
	inst: 0.000750526 %		func_inst: 611
1865(registers_ok_for_ldd_peep)
	inst: 0.000255498 %		func_inst: 208
1866(addrs_ok_for_ldd_peep)
	inst: 0 %		func_inst: 0
1867(register_ok_for_ldd)
	inst: 0 %		func_inst: 0
1868(print_operand)
	inst: 0.0726266 %		func_inst: 59125
1869(output_double_int)
	inst: 0 %		func_inst: 0
1870(sparc_type_code)
	inst: 0.00069525 %		func_inst: 566
1871(sparc_frw_compute_frame_size)
	inst: 0 %		func_inst: 0
1872(sparc_frw_save_restore)
	inst: 0 %		func_inst: 0
1873(sparc_frw_output_function_prologue)
	inst: 0 %		func_inst: 0
1874(sparc_frw_output_function_epilogue)
	inst: 0 %		func_inst: 0
1875(sparc_frw_epilogue_delay_slots)
	inst: 0 %		func_inst: 0
1876(sparc_frw_eligible_for_epilogue_delay)
	inst: 0 %		func_inst: 0
1877(getpwd)
	inst: 0 %		func_inst: 0
1878(convert_to_pointer)
	inst: 0.00510751 %		func_inst: 4158
1879(convert_to_real)
	inst: 0 %		func_inst: 0
1880(convert_to_integer)
	inst: 0.0205185 %		func_inst: 16704
1881(convert_to_complex)
	inst: 0 %		func_inst: 0
1882(qst)
	inst: 0.191381 %		func_inst: 155802
1883(qsort)
	inst: 0.0818725 %		func_inst: 66652
1884(__do_global_dtors)
	inst: 9.82686e-06 %		func_inst: 8
1885(__do_global_ctors)
	inst: 1.84254e-05 %		func_inst: 15
1886(__main)
	inst: 7.37014e-06 %		func_inst: 6
1887(__libc_init)
	inst: 2.45671e-06 %		func_inst: 2
1888(exit)
	inst: 4.05358e-05 %		func_inst: 33
1889(_cleanup)
	inst: 3.68507e-06 %		func_inst: 3
1890(fprintf)
	inst: 0.0119691 %		func_inst: 9744
1891(memcpy)
	inst: 0.189426 %		func_inst: 154211
1892(abort)
	inst: 0 %		func_inst: 0
1893(strcmp)
	inst: 0.0829669 %		func_inst: 67543
1894(__stdio_check_funcs)
	inst: 0 %		func_inst: 0
1895(__stdio_check_offset)
	inst: 0.0517237 %		func_inst: 42108
1896(flushbuf)
	inst: 0.00196169 %		func_inst: 1597
1897(fillbuf)
	inst: 0.000639974 %		func_inst: 521
1898(__flshfp)
	inst: 0.00158949 %		func_inst: 1294
1899(__fillbf)
	inst: 0.0275779 %		func_inst: 22451
1900(__invalidate)
	inst: 9.45835e-05 %		func_inst: 77
1901(ungetc)
	inst: 0.0365584 %		func_inst: 29762
1902(strcpy)
	inst: 7.86149e-05 %		func_inst: 64
1903(_free_internal)
	inst: 0.0283529 %		func_inst: 23082
1904(free)
	inst: 0.00196906 %		func_inst: 1603
1905(strlen)
	inst: 0.18907 %		func_inst: 153921
1906(sprintf)
	inst: 0.00195309 %		func_inst: 1590
1907(strcat)
	inst: 0.00758019 %		func_inst: 6171
1908(__setjmp)
	inst: 0 %		func_inst: 0
1909(memset)
	inst: 2.36617 %		func_inst: 1926286
1910(strncmp)
	inst: 0.0527407 %		func_inst: 42936
1911(atoi)
	inst: 0.0127061 %		func_inst: 10344
1912(strchr)
	inst: 0.0438106 %		func_inst: 35666
1913(_obstack_begin)
	inst: 0.00128978 %		func_inst: 1050
1914(_obstack_begin_1)
	inst: 0 %		func_inst: 0
1915(_obstack_newchunk)
	inst: 0.0168076 %		func_inst: 13683
1916(_obstack_allocated_p)
	inst: 0 %		func_inst: 0
1917(_obstack_free)
	inst: 0 %		func_inst: 0
1918(obstack_free)
	inst: 0.00379562 %		func_inst: 3090
1919(perror)
	inst: 0 %		func_inst: 0
1920(fflush)
	inst: 0.000497485 %		func_inst: 405
1921(initialize)
	inst: 5.03626e-05 %		func_inst: 41
1922(morecore)
	inst: 0.00480779 %		func_inst: 3914
1923(malloc)
	inst: 0.061069 %		func_inst: 49716
1924(realloc)
	inst: 0.000120379 %		func_inst: 98
1925(signal)
	inst: 6.8788e-05 %		func_inst: 56
1926(__longjmp)
	inst: 0 %		func_inst: 0
1927(fputc)
	inst: 0.0163028 %		func_inst: 13272
1928(fputs)
	inst: 0.0491159 %		func_inst: 39985
1929(__getmode)
	inst: 9.70402e-05 %		func_inst: 79
1930(fopen)
	inst: 5.1591e-05 %		func_inst: 42
1931(fclose)
	inst: 0.00027638 %		func_inst: 225
1932(unlink)
	inst: 0 %		func_inst: 0
1933(sbrk)
	inst: 0 %		func_inst: 0
1934(system)
	inst: 0 %		func_inst: 0
1935(memcmp)
	inst: 0.060305 %		func_inst: 49094
1936(ftell)
	inst: 0 %		func_inst: 0
1937(getenv)
	inst: 0 %		func_inst: 0
1938(stat)
	inst: 0 %		func_inst: 0
1939(getcwd)
	inst: 0 %		func_inst: 0
1940(atexit)
	inst: 1.47403e-05 %		func_inst: 12
1941(__new_exitfn)
	inst: 2.21104e-05 %		func_inst: 18
1942(__init_misc)
	inst: 1.47403e-05 %		func_inst: 12
1943(_exit)
	inst: 1.22836e-06 %		func_inst: 1
1944(vfprintf)
	inst: 0.854596 %		func_inst: 695723
1945(printf_unknown)
	inst: 0 %		func_inst: 0
1946(_wordcopy_fwd_aligned)
	inst: 0.67498 %		func_inst: 549498
1947(_wordcopy_fwd_dest_aligned)
	inst: 0.00598087 %		func_inst: 4869
1948(_wordcopy_bwd_aligned)
	inst: 0 %		func_inst: 0
1949(_wordcopy_bwd_dest_aligned)
	inst: 0 %		func_inst: 0
1950(__stdio_read)
	inst: 1.7197e-05 %		func_inst: 14
1951(__stdio_write)
	inst: 0.00053065 %		func_inst: 432
1952(__stdio_seek)
	inst: 2.45671e-05 %		func_inst: 20
1953(__stdio_close)
	inst: 9.82686e-06 %		func_inst: 8
1954(__stdio_fileno)
	inst: 0 %		func_inst: 0
1955(__stdio_open)
	inst: 6.14179e-05 %		func_inst: 50
1956(__stdio_reopen)
	inst: 0 %		func_inst: 0
1957(__stdio_init_stream)
	inst: 0.00010441 %		func_inst: 85
1958(vsprintf)
	inst: 0.0117185 %		func_inst: 9540
1959(__setjmp_aux)
	inst: 0 %		func_inst: 0
1960(strtol)
	inst: 0.21555 %		func_inst: 175478
1961(_strerror_internal)
	inst: 0 %		func_inst: 0
1962(__default_morecore)
	inst: 0.00103182 %		func_inst: 840
1963(memmove)
	inst: 0 %		func_inst: 0
1964(raise)
	inst: 0 %		func_inst: 0
1965(__sigaction)
	inst: 8.84417e-05 %		func_inst: 72
1966(fwrite)
	inst: 0.308572 %		func_inst: 251207
1967(__newstream)
	inst: 0.000113009 %		func_inst: 92
1968(__unlink)
	inst: 0 %		func_inst: 0
1969(__sbrk)
	inst: 0.00172339 %		func_inst: 1403
1970(__sigprocmask)
	inst: 0 %		func_inst: 0
1971(__vfork)
	inst: 0 %		func_inst: 0
1972(__execve)
	inst: 0 %		func_inst: 0
1973(__waitpid)
	inst: 0 %		func_inst: 0
1974(__stat)
	inst: 0 %		func_inst: 0
1975(__lstat)
	inst: 0 %		func_inst: 0
1976(opendir)
	inst: 0 %		func_inst: 0
1977(readdir)
	inst: 0 %		func_inst: 0
1978(closedir)
	inst: 0 %		func_inst: 0
1979(strrchr)
	inst: 5.77328e-05 %		func_inst: 47
1980(syscall_error)
	inst: 3.68507e-06 %		func_inst: 3
1981(register_printf_function)
	inst: 0 %		func_inst: 0
1982(mbtowc)
	inst: 0.0487277 %		func_inst: 39669
1983(_itoa)
	inst: 0 %		func_inst: 0
1984(__printf_fp)
	inst: 0 %		func_inst: 0
1985(__read)
	inst: 2.57955e-05 %		func_inst: 21
1986(__write)
	inst: 6.63313e-05 %		func_inst: 54
1987(__lseek)
	inst: 7.37014e-06 %		func_inst: 6
1988(__close)
	inst: 1.47403e-05 %		func_inst: 12
1989(__open)
	inst: 7.37014e-06 %		func_inst: 6
1990(__dup2)
	inst: 0 %		func_inst: 0
1991(__fstat)
	inst: 1.10552e-05 %		func_inst: 9
1992(__isatty)
	inst: 0 %		func_inst: 0
1993(__getpid)
	inst: 0 %		func_inst: 0
1994(__kill)
	inst: 0 %		func_inst: 0
1995(__sigvec)
	inst: 9.82686e-06 %		func_inst: 8
1996(memchr)
	inst: 0 %		func_inst: 0
1997(__brk)
	inst: 0.00103919 %		func_inst: 846
1998(__sigblock)
	inst: 1.22836e-06 %		func_inst: 1
1999(__sigsetmask)
	inst: 0 %		func_inst: 0
2000(fcntl)
	inst: 0 %		func_inst: 0
2001(fstat)
	inst: 0 %		func_inst: 0
2002(calloc)
	inst: 0 %		func_inst: 0
2003(__getdirentries)
	inst: 0 %		func_inst: 0
2004(__isnan)
	inst: 0 %		func_inst: 0
2005(__isinf)
	inst: 0 %		func_inst: 0
2006(__mpn_extract_double)
	inst: 0 %		func_inst: 0
2007(__mpn_lshift)
	inst: 0 %		func_inst: 0
2008(__mpn_cmp)
	inst: 0 %		func_inst: 0
2009(__mpn_divmod_1)
	inst: 0 %		func_inst: 0
2010(__mpn_mul_1)
	inst: 0 %		func_inst: 0
2011(__mpn_add_n)
	inst: 0 %		func_inst: 0
2012(__mpn_divmod)
	inst: 0 %		func_inst: 0
2013(__mpn_rshift)
	inst: 0 %		func_inst: 0
2014(__mpn_sub_n)
	inst: 0 %		func_inst: 0
2015(__ioctl)
	inst: 0 %		func_inst: 0
2016(__handler)
	inst: 0 %		func_inst: 0
2017(__raw_sigvec)
	inst: 7.37014e-06 %		func_inst: 6
2018(__fcntl)
	inst: 0 %		func_inst: 0
2019(__mpn_submul_1)
	inst: 0 %		func_inst: 0
2020(__sigreturn)
	inst: 0 %		func_inst: 0
2021(__umoddi3)
	inst: 0.0119949 %		func_inst: 9765
2022(__udivdi3)
	inst: 0.00719695 %		func_inst: 5859
2023(__udivmoddi4)
	inst: 0.335857 %		func_inst: 273420

====== inst statistic ======
0(__start)
	func: 8.18947e-05 %		call: 1
1(yyparse)
	func: 8.18947e-05 %		call: 1
2(lang_decode_option)
	func: 0 %		call: 0
3(lang_init)
	func: 8.18947e-05 %		call: 1
4(lang_finish)
	func: 8.18947e-05 %		call: 1
5(lang_identify)
	func: 0.000163789 %		call: 2
6(print_lang_statistics)
	func: 0 %		call: 0
7(lookup_interface)
	func: 0 %		call: 0
8(is_class_name)
	func: 0 %		call: 0
9(maybe_objc_check_decl)
	func: 0.020965 %		call: 256
10(maybe_objc_comptypes)
	func: 0.00753431 %		call: 92
11(maybe_objc_method_name)
	func: 0 %		call: 0
12(maybe_building_objc_message_expr)
	func: 0 %		call: 0
13(recognize_objc_keyword)
	func: 0 %		call: 0
14(build_objc_string)
	func: 0 %		call: 0
15(GNU_xref_begin)
	func: 0 %		call: 0
16(GNU_xref_end)
	func: 0 %		call: 0
17(is_reserved_word)
	func: 0 %		call: 0
18(make_pointer_declarator)
	func: 0.00753431 %		call: 92
19(forget_protocol_qualifiers)
	func: 0 %		call: 0
20(remember_protocol_qualifiers)
	func: 0 %		call: 0
21(init_lex)
	func: 8.18947e-05 %		call: 1
22(reinit_parse_for_function)
	func: 0.00114653 %		call: 14
23(yyprint)
	func: 0 %		call: 0
24(skip_white_space)
	func: 0.0675631 %		call: 825
25(position_after_white_space)
	func: 0.00737052 %		call: 90
26(check_newline)
	func: 0.0837783 %		call: 1023
27(readescape)
	func: 0.0113015 %		call: 138
28(yyerror)
	func: 0 %		call: 0
29(yylex)
	func: 0.414387 %		call: 5060
30(set_yydebug)
	func: 0 %		call: 0
31(c_decode_option)
	func: 0 %		call: 0
32(print_lang_decl)
	func: 0 %		call: 0
33(print_lang_type)
	func: 0 %		call: 0
34(print_lang_identifier)
	func: 0 %		call: 0
35(finish_incomplete_decl)
	func: 0.000900842 %		call: 11
36(global_bindings_p)
	func: 0.000982737 %		call: 12
37(keep_next_level)
	func: 0 %		call: 0
38(kept_level_p)
	func: 0.00409474 %		call: 50
39(declare_parm_level)
	func: 0.00868084 %		call: 106
40(in_parm_level_p)
	func: 0 %		call: 0
41(pushlevel)
	func: 0.0121204 %		call: 148
42(poplevel)
	func: 0.0132669 %		call: 162
43(delete_block)
	func: 0 %		call: 0
44(insert_block)
	func: 0 %		call: 0
45(set_block)
	func: 0 %		call: 0
46(push_label_level)
	func: 0 %		call: 0
47(pop_label_level)
	func: 0 %		call: 0
48(pushtag)
	func: 0 %		call: 0
49(duplicate_decls)
	func: 0.000409474 %		call: 5
50(pushdecl)
	func: 0.0412749 %		call: 504
51(pushdecl_top_level)
	func: 0 %		call: 0
52(implicitly_declare)
	func: 0.00131032 %		call: 16
53(redeclaration_error_message)
	func: 0.000409474 %		call: 5
54(lookup_label)
	func: 0 %		call: 0
55(shadow_label)
	func: 0 %		call: 0
56(define_label)
	func: 0 %		call: 0
57(getdecls)
	func: 0.00352147 %		call: 43
58(gettags)
	func: 0 %		call: 0
59(pending_xref_error)
	func: 0.0194909 %		call: 238
60(lookup_name)
	func: 0.121859 %		call: 1488
61(lookup_name_current_level)
	func: 0.039637 %		call: 484
62(init_decl_processing)
	func: 8.18947e-05 %		call: 1
63(builtin_function)
	func: 0.00319389 %		call: 39
64(shadow_tag)
	func: 0.000655158 %		call: 8
65(shadow_tag_warned)
	func: 0.000655158 %		call: 8
66(groktypename)
	func: 0.00171979 %		call: 21
67(groktypename_in_parm_context)
	func: 0 %		call: 0
68(start_decl)
	func: 0.0144954 %		call: 177
69(finish_decl)
	func: 0.0236676 %		call: 289
70(maybe_build_cleanup)
	func: 0 %		call: 0
71(push_parm_decl)
	func: 0.00262063 %		call: 32
72(clear_parm_order)
	func: 0.00868084 %		call: 106
73(complete_array_type)
	func: 0.00180168 %		call: 22
74(grokdeclarator)
	func: 0.024077 %		call: 294
75(grokparms)
	func: 0.00868084 %		call: 106
76(get_parm_info)
	func: 0.0076981 %		call: 94
77(parmlist_tags_warning)
	func: 0.00868084 %		call: 106
78(xref_tag)
	func: 0.00434042 %		call: 53
79(start_struct)
	func: 0.000573263 %		call: 7
80(grokfield)
	func: 0.00409474 %		call: 50
81(finish_struct)
	func: 0.000573263 %		call: 7
82(layout_array_type)
	func: 0 %		call: 0
83(start_enum)
	func: 0.000409474 %		call: 5
84(finish_enum)
	func: 0.000409474 %		call: 5
85(build_enumerator)
	func: 0.0122842 %		call: 150
86(start_function)
	func: 0.00114653 %		call: 14
87(c_mark_varargs)
	func: 0 %		call: 0
88(store_parm_decls)
	func: 0.00114653 %		call: 14
89(combine_parm_decls)
	func: 0 %		call: 0
90(finish_function)
	func: 0.00114653 %		call: 14
91(push_c_function_context)
	func: 0 %		call: 0
92(pop_c_function_context)
	func: 0 %		call: 0
93(field_decl_cmp)
	func: 0 %		call: 0
94(require_complete_type)
	func: 0 %		call: 0
95(incomplete_type_error)
	func: 0 %		call: 0
96(common_type)
	func: 0.0216202 %		call: 264
97(comptypes)
	func: 0.00556884 %		call: 68
98(function_types_compatible_p)
	func: 0 %		call: 0
99(type_lists_compatible_p)
	func: 0 %		call: 0
100(self_promoting_args_p)
	func: 0 %		call: 0
101(self_promoting_type_p)
	func: 0 %		call: 0
102(unsigned_type)
	func: 0.000573263 %		call: 7
103(signed_type)
	func: 8.18947e-05 %		call: 1
104(signed_or_unsigned_type)
	func: 0.001556 %		call: 19
105(c_sizeof)
	func: 0.00253874 %		call: 31
106(c_sizeof_nowarn)
	func: 0 %		call: 0
107(c_size_in_bytes)
	func: 0 %		call: 0
108(c_alignof)
	func: 0 %		call: 0
109(c_alignof_expr)
	func: 0 %		call: 0
110(default_conversion)
	func: 0.0877911 %		call: 1072
111(lookup_field)
	func: 0.0172798 %		call: 211
112(build_component_ref)
	func: 0.0172798 %		call: 211
113(build_indirect_ref)
	func: 0.016297 %		call: 199
114(build_array_ref)
	func: 0.00835326 %		call: 102
115(build_function_call)
	func: 0.013185 %		call: 161
116(convert_arguments)
	func: 0.013185 %		call: 161
117(parser_build_binary_op)
	func: 0.00548695 %		call: 67
118(build_binary_op)
	func: 0.0265339 %		call: 324
119(pointer_int_sum)
	func: 0.0030301 %		call: 37
120(pointer_diff)
	func: 0 %		call: 0
121(build_unary_op)
	func: 0.0169522 %		call: 207
122(lvalue_p)
	func: 0.0213745 %		call: 261
123(lvalue_or_else)
	func: 0.0122842 %		call: 150
124(unary_complex_lvalue)
	func: 0.012448 %		call: 152
125(pedantic_lvalue_warning)
	func: 0 %		call: 0
126(readonly_warning)
	func: 0 %		call: 0
127(mark_addressable)
	func: 0.0230943 %		call: 282
128(build_conditional_expr)
	func: 0.000655158 %		call: 8
129(build_compound_expr)
	func: 0.0525764 %		call: 642
130(internal_build_compound_expr)
	func: 0.0525764 %		call: 642
131(build_c_cast)
	func: 0.0014741 %		call: 18
132(build_modify_expr)
	func: 0.00900842 %		call: 110
133(convert_for_assignment)
	func: 0.0092541 %		call: 113
134(warn_for_assignment)
	func: 0 %		call: 0
135(initializer_constant_valid_p)
	func: 8.18947e-05 %		call: 1
136(valid_compound_expr_initializer)
	func: 0 %		call: 0
137(store_init_value)
	func: 0.00335768 %		call: 41
138(get_spelling)
	func: 0 %		call: 0
139(error_init)
	func: 0 %		call: 0
140(pedwarn_init)
	func: 0 %		call: 0
141(digest_init)
	func: 0.00335768 %		call: 41
142(start_init)
	func: 0.000900842 %		call: 11
143(finish_init)
	func: 0.000900842 %		call: 11
144(really_start_incremental_init)
	func: 0 %		call: 0
145(push_init_level)
	func: 0 %		call: 0
146(check_init_type_bitfields)
	func: 0 %		call: 0
147(pop_init_level)
	func: 0 %		call: 0
148(set_init_index)
	func: 0 %		call: 0
149(set_init_label)
	func: 0 %		call: 0
150(output_init_element)
	func: 0 %		call: 0
151(output_pending_init_elements)
	func: 0 %		call: 0
152(process_init_element)
	func: 0 %		call: 0
153(c_expand_asm_operands)
	func: 0 %		call: 0
154(c_expand_return)
	func: 0.000900842 %		call: 11
155(c_expand_start_case)
	func: 8.18947e-05 %		call: 1
156(convert)
	func: 0.0599469 %		call: 732
157(affix_data_type)
	func: 0 %		call: 0
158(gen_formal_list_for_type)
	func: 0 %		call: 0
159(gen_formal_list_for_func_def)
	func: 0 %		call: 0
160(gen_type)
	func: 0 %		call: 0
161(gen_decl)
	func: 0 %		call: 0
162(gen_aux_info_record)
	func: 0.00982737 %		call: 120
163(declare_function_name)
	func: 0.00122842 %		call: 15
164(declare_hidden_char_array)
	func: 0.00245684 %		call: 30
165(combine_strings)
	func: 0.00810758 %		call: 99
166(decl_attributes)
	func: 0.0194909 %		call: 238
167(init_function_format_info)
	func: 8.18947e-05 %		call: 1
168(record_function_format)
	func: 0.000737052 %		call: 9
169(check_function_format)
	func: 0 %		call: 0
170(check_format_info)
	func: 0 %		call: 0
171(constant_expression_warning)
	func: 0.0108101 %		call: 132
172(overflow_warning)
	func: 0.0163789 %		call: 200
173(unsigned_conversion_warning)
	func: 0.0109739 %		call: 134
174(convert_and_check)
	func: 0.000982737 %		call: 12
175(c_expand_expr_stmt)
	func: 0.00393095 %		call: 48
176(check_case_value)
	func: 0.000163789 %		call: 2
177(type_for_size)
	func: 0.0181806 %		call: 222
178(type_for_mode)
	func: 0.00188358 %		call: 23
179(binary_op_error)
	func: 0 %		call: 0
180(shorten_compare)
	func: 0.00499558 %		call: 61
181(truthvalue_conversion)
	func: 0.00753431 %		call: 92
182(get_directive_line)
	func: 0 %		call: 0
183(c_build_type_variant)
	func: 0 %		call: 0
184(init_iterators)
	func: 8.18947e-05 %		call: 1
185(iterator_for_loop_start)
	func: 0 %		call: 0
186(iterator_for_loop_end)
	func: 0 %		call: 0
187(iterator_expand)
	func: 0.0180987 %		call: 221
188(expand_stmt_with_iterators_1)
	func: 0.0180987 %		call: 221
189(collect_iterators)
	func: 0.169113 %		call: 2065
190(iterator_loop_prologue)
	func: 0 %		call: 0
191(iterator_loop_epilogue)
	func: 0 %		call: 0
192(top_level_ixpansion_p)
	func: 0 %		call: 0
193(istack_sublevel_to_current)
	func: 0.0180987 %		call: 221
194(push_iterator_stack)
	func: 0 %		call: 0
195(pop_iterator_stack)
	func: 0 %		call: 0
196(add_ixpansion)
	func: 0 %		call: 0
197(delete_ixpansion)
	func: 0 %		call: 0
198(sym_lookup)
	func: 0 %		call: 0
199(bc_sym_write)
	func: 0 %		call: 0
200(seg_concat)
	func: 0 %		call: 0
201(bc_seg_write)
	func: 0 %		call: 0
202(bc_initialize)
	func: 0 %		call: 0
203(bc_define_pointer)
	func: 0 %		call: 0
204(bc_begin_function)
	func: 0 %		call: 0
205(bc_align_bytecode)
	func: 0 %		call: 0
206(bc_emit_bytecode_const)
	func: 0 %		call: 0
207(bc_get_bytecode_label)
	func: 0 %		call: 0
208(bc_emit_bytecode_labeldef)
	func: 0 %		call: 0
209(bc_emit_bytecode_labelref)
	func: 0 %		call: 0
210(bc_emit_code_labelref)
	func: 0 %		call: 0
211(bc_end_function)
	func: 0 %		call: 0
212(bc_align_const)
	func: 0 %		call: 0
213(bc_emit_const)
	func: 0 %		call: 0
214(bc_emit_const_skip)
	func: 0 %		call: 0
215(bc_emit_const_labeldef)
	func: 0 %		call: 0
216(bc_emit_const_labelref)
	func: 0 %		call: 0
217(bc_align_data)
	func: 0 %		call: 0
218(bc_emit_data)
	func: 0 %		call: 0
219(bc_emit_data_skip)
	func: 0 %		call: 0
220(bc_emit_data_labeldef)
	func: 0 %		call: 0
221(bc_emit_data_labelref)
	func: 0 %		call: 0
222(bc_emit_common)
	func: 0 %		call: 0
223(bc_globalize_label)
	func: 0 %		call: 0
224(bc_text)
	func: 0 %		call: 0
225(bc_data)
	func: 0 %		call: 0
226(bc_align)
	func: 0 %		call: 0
227(bc_emit)
	func: 0 %		call: 0
228(bc_emit_skip)
	func: 0 %		call: 0
229(bc_emit_labeldef)
	func: 0 %		call: 0
230(bc_emit_labelref)
	func: 0 %		call: 0
231(bc_write_file)
	func: 0 %		call: 0
232(bc_gen_rtx)
	func: 0 %		call: 0
233(bc_print_rtl)
	func: 0 %		call: 0
234(bc_emit_bytecode)
	func: 0 %		call: 0
235(bc_emit_instruction)
	func: 0 %		call: 0
236(bc_emit_trampoline)
	func: 0 %		call: 0
237(bc_xstrdup)
	func: 0 %		call: 0
238(conversion_reasonable_p)
	func: 0 %		call: 0
239(deduce_conversion)
	func: 0 %		call: 0
240(emit_typecode_conversion)
	func: 0 %		call: 0
241(bc_init_mode_to_code_map)
	func: 0 %		call: 0
242(preferred_typecode)
	func: 0 %		call: 0
243(bc_expand_conversion)
	func: 0 %		call: 0
244(bc_expand_truth_conversion)
	func: 0 %		call: 0
245(bc_expand_binary_operation)
	func: 0 %		call: 0
246(bc_expand_unary_operation)
	func: 0 %		call: 0
247(bc_expand_increment)
	func: 0 %		call: 0
248(get_run_time)
	func: 0 %		call: 0
249(print_time)
	func: 0 %		call: 0
250(count_error)
	func: 0 %		call: 0
251(pfatal_with_name)
	func: 0 %		call: 0
252(fatal_io_error)
	func: 0 %		call: 0
253(fatal_insn_not_found)
	func: 0 %		call: 0
254(announce_function)
	func: 0.00114653 %		call: 14
255(report_error_function)
	func: 0 %		call: 0
256(error)
	func: 0 %		call: 0
257(error_with_file_and_line)
	func: 0 %		call: 0
258(error_with_decl)
	func: 0 %		call: 0
259(error_for_asm)
	func: 0 %		call: 0
260(fatal)
	func: 0 %		call: 0
261(warning_with_file_and_line)
	func: 0 %		call: 0
262(warning)
	func: 0 %		call: 0
263(warning_with_decl)
	func: 0 %		call: 0
264(warning_for_asm)
	func: 0 %		call: 0
265(pedwarn)
	func: 0 %		call: 0
266(pedwarn_with_decl)
	func: 0 %		call: 0
267(pedwarn_with_file_and_line)
	func: 0 %		call: 0
268(sorry)
	func: 0 %		call: 0
269(really_sorry)
	func: 0 %		call: 0
270(fancy_abort)
	func: 0 %		call: 0
271(do_abort)
	func: 0 %		call: 0
272(botch)
	func: 0 %		call: 0
273(xmalloc)
	func: 0.0400465 %		call: 489
274(xrealloc)
	func: 0.000163789 %		call: 2
275(exact_log2_wide)
	func: 0.0338225 %		call: 413
276(floor_log2_wide)
	func: 0.317588 %		call: 3878
277(set_float_handler)
	func: 0 %		call: 0
278(push_float_handler)
	func: 0 %		call: 0
279(pop_float_handler)
	func: 0 %		call: 0
280(float_signal)
	func: 0 %		call: 0
281(strip_off_ending)
	func: 8.18947e-05 %		call: 1
282(output_quoted_string)
	func: 0 %		call: 0
283(output_file_directive)
	func: 0 %		call: 0
284(output_lang_identify)
	func: 8.18947e-05 %		call: 1
285(compile_file)
	func: 8.18947e-05 %		call: 1
286(rest_of_decl_compilation)
	func: 0.0179349 %		call: 219
287(rest_of_type_compilation)
	func: 0.000982737 %		call: 12
288(rest_of_compilation)
	func: 0.00114653 %		call: 14
289(main)
	func: 8.18947e-05 %		call: 1
290(set_target_switch)
	func: 8.18947e-05 %		call: 1
291(print_switch_values)
	func: 0 %		call: 0
292(decl_name)
	func: 0.00229305 %		call: 28
293(pipe_closed)
	func: 0 %		call: 0
294(init_obstacks)
	func: 8.18947e-05 %		call: 1
295(gcc_obstack_init)
	func: 0.00204737 %		call: 25
296(save_tree_status)
	func: 0 %		call: 0
297(restore_tree_status)
	func: 0 %		call: 0
298(temporary_allocation)
	func: 0.00122842 %		call: 15
299(end_temporary_allocation)
	func: 0.00409474 %		call: 50
300(resume_temporary_allocation)
	func: 0.00229305 %		call: 28
301(saveable_allocation)
	func: 0.0268615 %		call: 328
302(push_obstacks)
	func: 0.0268615 %		call: 328
303(push_obstacks_nochange)
	func: 0.0620762 %		call: 758
304(pop_obstacks)
	func: 0.0889377 %		call: 1086
305(allocation_temporary_p)
	func: 0.0547057 %		call: 668
306(permanent_allocation)
	func: 0.00122842 %		call: 15
307(preserve_data)
	func: 0.00171979 %		call: 21
308(preserve_initializer)
	func: 0 %		call: 0
309(rtl_in_current_obstack)
	func: 0.00229305 %		call: 28
310(rtl_in_saveable_obstack)
	func: 0.00204737 %		call: 25
311(oballoc)
	func: 0.270498 %		call: 3303
312(obfree)
	func: 0.11195 %		call: 1367
313(permalloc)
	func: 0.00204737 %		call: 25
314(perm_calloc)
	func: 0 %		call: 0
315(savealloc)
	func: 0 %		call: 0
316(print_obstack_name)
	func: 0 %		call: 0
317(debug_obstack)
	func: 0 %		call: 0
318(object_permanent_p)
	func: 0 %		call: 0
319(push_momentary)
	func: 0.00548695 %		call: 67
320(clear_momentary)
	func: 0.0180987 %		call: 221
321(pop_momentary)
	func: 0.00548695 %		call: 67
322(pop_momentary_nofree)
	func: 0 %		call: 0
323(suspend_momentary)
	func: 0.0473351 %		call: 578
324(resume_momentary)
	func: 0.0353785 %		call: 432
325(init_tree_codes)
	func: 8.18947e-05 %		call: 1
326(make_node)
	func: 0.444525 %		call: 5428
327(copy_node)
	func: 0.004668 %		call: 57
328(copy_list)
	func: 0 %		call: 0
329(get_identifier)
	func: 0.126937 %		call: 1550
330(start_identifier_warnings)
	func: 8.18947e-05 %		call: 1
331(set_identifier_size)
	func: 8.18947e-05 %		call: 1
332(build_int_2_wide)
	func: 0.102532 %		call: 1252
333(build_real)
	func: 0 %		call: 0
334(real_value_from_int_cst)
	func: 0 %		call: 0
335(build_real_from_int_cst)
	func: 0 %		call: 0
336(build_string)
	func: 0.0105644 %		call: 129
337(build_complex)
	func: 0 %		call: 0
338(make_tree_vec)
	func: 0 %		call: 0
339(integer_zerop)
	func: 0.122269 %		call: 1493
340(integer_onep)
	func: 0.0140859 %		call: 172
341(integer_all_onesp)
	func: 0.000245684 %		call: 3
342(integer_pow2p)
	func: 0.000327579 %		call: 4
343(real_zerop)
	func: 0 %		call: 0
344(real_onep)
	func: 0 %		call: 0
345(real_twop)
	func: 0 %		call: 0
346(really_constant_p)
	func: 0 %		call: 0
347(value_member)
	func: 0 %		call: 0
348(purpose_member)
	func: 0 %		call: 0
349(binfo_member)
	func: 0 %		call: 0
350(chain_member)
	func: 0 %		call: 0
351(list_length)
	func: 0.003112 %		call: 38
352(chainon)
	func: 0.0454516 %		call: 555
353(tree_last)
	func: 0.00212926 %		call: 26
354(nreverse)
	func: 0.0262882 %		call: 321
355(listify)
	func: 0 %		call: 0
356(build_tree_list)
	func: 0.0796017 %		call: 972
357(build_decl_list)
	func: 0 %		call: 0
358(tree_cons)
	func: 0.0820585 %		call: 1002
359(decl_tree_cons)
	func: 0 %		call: 0
360(perm_tree_cons)
	func: 0.00409474 %		call: 50
361(temp_tree_cons)
	func: 0 %		call: 0
362(saveable_tree_cons)
	func: 0.024077 %		call: 294
363(size_in_bytes)
	func: 0.0247322 %		call: 302
364(int_size_in_bytes)
	func: 0.0204737 %		call: 250
365(array_type_nelts)
	func: 0 %		call: 0
366(staticp)
	func: 0.0152324 %		call: 186
367(save_expr)
	func: 0 %		call: 0
368(contains_placeholder_p)
	func: 0.00425853 %		call: 52
369(substitute_in_expr)
	func: 0 %		call: 0
370(substitute_in_type)
	func: 0 %		call: 0
371(stabilize_reference)
	func: 0.0014741 %		call: 18
372(stabilize_reference_1)
	func: 0.000163789 %		call: 2
373(build)
	func: 0.0955711 %		call: 1167
374(build1)
	func: 0.101549 %		call: 1240
375(build_nt)
	func: 0.0111377 %		call: 136
376(build_parse_node)
	func: 0 %		call: 0
377(build_decl)
	func: 0.0467619 %		call: 571
378(build_block)
	func: 0 %		call: 0
379(build_type_variant)
	func: 0.0160514 %		call: 196
380(change_main_variant)
	func: 0 %		call: 0
381(build_type_copy)
	func: 0.00139221 %		call: 17
382(type_hash_list)
	func: 0 %		call: 0
383(type_hash_lookup)
	func: 0.0306286 %		call: 374
384(type_hash_add)
	func: 0.00384905 %		call: 47
385(type_hash_canon)
	func: 0 %		call: 0
386(type_list_equal)
	func: 0.00106463 %		call: 13
387(tree_int_cst_equal)
	func: 0.004668 %		call: 57
388(tree_int_cst_lt)
	func: 0.0471714 %		call: 576
389(simple_cst_list_equal)
	func: 0 %		call: 0
390(simple_cst_equal)
	func: 0 %		call: 0
391(build_pointer_type)
	func: 0.0675631 %		call: 825
392(build_index_type)
	func: 0.0103187 %		call: 126
393(build_range_type)
	func: 0 %		call: 0
394(build_index_2_type)
	func: 0 %		call: 0
395(index_type_equal)
	func: 0 %		call: 0
396(build_array_type)
	func: 0.0104825 %		call: 128
397(build_function_type)
	func: 0.0107282 %		call: 131
398(build_reference_type)
	func: 0 %		call: 0
399(build_method_type)
	func: 0 %		call: 0
400(build_offset_type)
	func: 0 %		call: 0
401(build_complex_type)
	func: 0 %		call: 0
402(get_unwidened)
	func: 0.00417663 %		call: 51
403(get_narrower)
	func: 0.012448 %		call: 152
404(type_precision)
	func: 0.00319389 %		call: 39
405(int_fits_type_p)
	func: 0.0355423 %		call: 434
406(decl_function_context)
	func: 0.0631408 %		call: 771
407(decl_type_context)
	func: 0 %		call: 0
408(print_obstack_statistics)
	func: 0 %		call: 0
409(dump_tree_statistics)
	func: 0 %		call: 0
410(get_file_function_name)
	func: 0 %		call: 0
411(debug_tree)
	func: 0 %		call: 0
412(print_node_brief)
	func: 0 %		call: 0
413(indent_to)
	func: 0 %		call: 0
414(print_node)
	func: 0 %		call: 0
415(get_pending_sizes)
	func: 0.0162152 %		call: 198
416(variable_size)
	func: 0 %		call: 0
417(mode_for_size)
	func: 0.00966358 %		call: 118
418(round_up)
	func: 0 %		call: 0
419(layout_decl)
	func: 0.0195728 %		call: 239
420(layout_record)
	func: 0.000491368 %		call: 6
421(layout_union)
	func: 8.18947e-05 %		call: 1
422(layout_type)
	func: 0.0269434 %		call: 329
423(make_signed_type)
	func: 0.000818947 %		call: 10
424(make_unsigned_type)
	func: 0.000737052 %		call: 9
425(fixup_signed_type)
	func: 0 %		call: 0
426(fixup_unsigned_type)
	func: 0.000737052 %		call: 9
427(get_best_mode)
	func: 0.000163789 %		call: 2
428(save_storage_status)
	func: 0 %		call: 0
429(restore_storage_status)
	func: 0 %		call: 0
430(force_fit_type)
	func: 0.0696105 %		call: 850
431(add_double)
	func: 0.00450421 %		call: 55
432(neg_double)
	func: 0 %		call: 0
433(mul_double)
	func: 0.0130213 %		call: 159
434(lshift_double)
	func: 0 %		call: 0
435(rshift_double)
	func: 0 %		call: 0
436(lrotate_double)
	func: 0 %		call: 0
437(rrotate_double)
	func: 0 %		call: 0
438(div_and_round_double)
	func: 0.00294821 %		call: 36
439(split_tree)
	func: 0.0222754 %		call: 272
440(const_binop)
	func: 0.0724768 %		call: 885
441(size_int)
	func: 0.0937694 %		call: 1145
442(size_binop)
	func: 0.0687916 %		call: 840
443(fold_convert)
	func: 0.0229305 %		call: 280
444(non_lvalue)
	func: 0.0014741 %		call: 18
445(pedantic_non_lvalue)
	func: 0 %		call: 0
446(operand_equal_p)
	func: 0.00990926 %		call: 121
447(twoval_comparison_p)
	func: 0.00696105 %		call: 85
448(eval_subst)
	func: 0 %		call: 0
449(invert_truthvalue)
	func: 8.18947e-05 %		call: 1
450(optimize_bit_field_compare)
	func: 0.000982737 %		call: 12
451(decode_field_reference)
	func: 0.000655158 %		call: 8
452(all_ones_mask_p)
	func: 0 %		call: 0
453(range_test)
	func: 0 %		call: 0
454(fold_truthop)
	func: 0.000327579 %		call: 4
455(fold)
	func: 0.0931962 %		call: 1138
456(find_function_data)
	func: 0 %		call: 0
457(push_function_context)
	func: 0 %		call: 0
458(pop_function_context)
	func: 0 %		call: 0
459(get_frame_size)
	func: 0.0106463 %		call: 130
460(assign_stack_local)
	func: 0.00114653 %		call: 14
461(assign_outer_stack_local)
	func: 0 %		call: 0
462(assign_stack_temp)
	func: 0 %		call: 0
463(combine_temp_slots)
	func: 0.0827956 %		call: 1011
464(preserve_temp_slots)
	func: 0.0530678 %		call: 648
465(free_temp_slots)
	func: 0.0556884 %		call: 680
466(push_temp_slots)
	func: 0.0271072 %		call: 331
467(pop_temp_slots)
	func: 0.0271072 %		call: 331
468(put_var_into_stack)
	func: 0.00745242 %		call: 91
469(put_reg_into_stack)
	func: 0 %		call: 0
470(fixup_var_refs)
	func: 0 %		call: 0
471(fixup_var_refs_insns)
	func: 0 %		call: 0
472(fixup_var_refs_1)
	func: 0 %		call: 0
473(fixup_memory_subreg)
	func: 0 %		call: 0
474(walk_fixup_memory_subreg)
	func: 0 %		call: 0
475(fixup_stack_1)
	func: 0 %		call: 0
476(optimize_bit_field)
	func: 0 %		call: 0
477(instantiate_virtual_regs)
	func: 0.00114653 %		call: 14
478(instantiate_decls)
	func: 0.00229305 %		call: 28
479(instantiate_decls_1)
	func: 0.00606021 %		call: 74
480(instantiate_decl)
	func: 0.0150686 %		call: 184
481(instantiate_virtual_regs_1)
	func: 0.506355 %		call: 6183
482(nonlocal_label_rtx_list)
	func: 0.00114653 %		call: 14
483(use_variable)
	func: 0 %		call: 0
484(use_variable_after)
	func: 0 %		call: 0
485(max_parm_reg_num)
	func: 0.000573263 %		call: 7
486(get_first_nonparm_insn)
	func: 0.00131032 %		call: 16
487(get_first_block_beg)
	func: 0 %		call: 0
488(aggregate_value_p)
	func: 0.0170341 %		call: 208
489(assign_parms)
	func: 0.00114653 %		call: 14
490(locate_and_pad_parm)
	func: 0.0226848 %		call: 277
491(pad_to_arg_alignment)
	func: 0.0226848 %		call: 277
492(pad_below)
	func: 0 %		call: 0
493(uninitialized_vars_warning)
	func: 0 %		call: 0
494(setjmp_args_warning)
	func: 0 %		call: 0
495(setjmp_protect)
	func: 0 %		call: 0
496(setjmp_protect_args)
	func: 0 %		call: 0
497(lookup_static_chain)
	func: 0.013185 %		call: 161
498(fix_lexical_addr)
	func: 0 %		call: 0
499(trampoline_address)
	func: 0 %		call: 0
500(round_trampoline_addr)
	func: 0 %		call: 0
501(identify_blocks)
	func: 0 %		call: 0
502(reorder_blocks)
	func: 0 %		call: 0
503(blocks_nreverse)
	func: 0 %		call: 0
504(all_blocks)
	func: 0 %		call: 0
505(bc_build_calldesc)
	func: 0 %		call: 0
506(init_function_start)
	func: 0.00114653 %		call: 14
507(mark_varargs)
	func: 0 %		call: 0
508(expand_main_function)
	func: 8.18947e-05 %		call: 1
509(bc_expand_function_start)
	func: 0 %		call: 0
510(bc_expand_function_end)
	func: 0 %		call: 0
511(expand_function_start)
	func: 0.00114653 %		call: 14
512(expand_function_end)
	func: 0.00114653 %		call: 14
513(thread_prologue_and_epilogue_insns)
	func: 0.00114653 %		call: 14
514(reposition_prologue_and_epilogue_notes)
	func: 0.00229305 %		call: 28
515(init_stmt)
	func: 8.18947e-05 %		call: 1
516(init_stmt_for_function)
	func: 0.00114653 %		call: 14
517(save_stmt_status)
	func: 0 %		call: 0
518(restore_stmt_status)
	func: 0 %		call: 0
519(emit_nop)
	func: 0.00237495 %		call: 29
520(label_rtx)
	func: 0 %		call: 0
521(emit_jump)
	func: 8.18947e-05 %		call: 1
522(expand_computed_goto)
	func: 0 %		call: 0
523(expand_label)
	func: 0 %		call: 0
524(declare_nonlocal_label)
	func: 0 %		call: 0
525(expand_goto)
	func: 0 %		call: 0
526(expand_goto_internal)
	func: 0 %		call: 0
527(expand_fixup)
	func: 0.00114653 %		call: 14
528(bc_expand_fixup)
	func: 0 %		call: 0
529(fixup_gotos)
	func: 0.00114653 %		call: 14
530(bc_fixup_gotos)
	func: 0 %		call: 0
531(expand_asm)
	func: 0 %		call: 0
532(expand_asm_operands)
	func: 0 %		call: 0
533(expand_expr_stmt)
	func: 0.0220297 %		call: 269
534(warn_if_unused_value)
	func: 0 %		call: 0
535(clear_last_expr)
	func: 0.00343958 %		call: 42
536(expand_start_stmt_expr)
	func: 0 %		call: 0
537(expand_end_stmt_expr)
	func: 0 %		call: 0
538(in_try_block)
	func: 0 %		call: 0
539(in_except_block)
	func: 0 %		call: 0
540(in_exception_handler)
	func: 0 %		call: 0
541(expand_raise)
	func: 0 %		call: 0
542(expand_start_try)
	func: 0 %		call: 0
543(expand_end_try)
	func: 0 %		call: 0
544(expand_start_except)
	func: 0 %		call: 0
545(expand_escape_except)
	func: 0 %		call: 0
546(expand_end_except)
	func: 0 %		call: 0
547(expand_catch)
	func: 0 %		call: 0
548(expand_catch_default)
	func: 0 %		call: 0
549(expand_end_catch)
	func: 0 %		call: 0
550(expand_start_cond)
	func: 0.00352147 %		call: 43
551(expand_start_elseif)
	func: 0 %		call: 0
552(expand_start_else)
	func: 0.00106463 %		call: 13
553(expand_end_cond)
	func: 0.00352147 %		call: 43
554(bc_expand_start_cond)
	func: 0 %		call: 0
555(bc_expand_end_cond)
	func: 0 %		call: 0
556(bc_expand_start_else)
	func: 0 %		call: 0
557(expand_start_loop)
	func: 0.00237495 %		call: 29
558(expand_start_loop_continue_elsewhere)
	func: 0.00196547 %		call: 24
559(expand_loop_continue_here)
	func: 0.00196547 %		call: 24
560(bc_expand_end_loop)
	func: 0 %		call: 0
561(expand_end_loop)
	func: 0.00237495 %		call: 29
562(expand_continue_loop)
	func: 0 %		call: 0
563(expand_exit_loop)
	func: 0 %		call: 0
564(expand_exit_loop_if_false)
	func: 0.00237495 %		call: 29
565(preserve_subexpressions_p)
	func: 0.18025 %		call: 2201
566(expand_exit_something)
	func: 0.000245684 %		call: 3
567(expand_null_return)
	func: 0.000655158 %		call: 8
568(expand_value_return)
	func: 0 %		call: 0
569(expand_null_return_1)
	func: 0.000900842 %		call: 11
570(expand_return)
	func: 0.000245684 %		call: 3
571(drop_through_at_end_p)
	func: 0 %		call: 0
572(tail_recursion_args)
	func: 0 %		call: 0
573(expand_start_bindings)
	func: 0.00343958 %		call: 42
574(remember_end_note)
	func: 0.0030301 %		call: 37
575(expand_end_bindings)
	func: 0.00343958 %		call: 42
576(bc_expand_end_bindings)
	func: 0 %		call: 0
577(expand_decl)
	func: 0.00368526 %		call: 45
578(bc_expand_decl)
	func: 0 %		call: 0
579(expand_decl_init)
	func: 0.00450421 %		call: 55
580(bc_expand_variable_local_init)
	func: 0 %		call: 0
581(bc_expand_decl_init)
	func: 0 %		call: 0
582(expand_decl_cleanup)
	func: 0 %		call: 0
583(expand_anon_union_decl)
	func: 0 %		call: 0
584(expand_cleanups)
	func: 0 %		call: 0
585(move_cleanups_up)
	func: 0 %		call: 0
586(last_cleanup_this_contour)
	func: 0 %		call: 0
587(any_pending_cleanups)
	func: 0.000245684 %		call: 3
588(expand_start_case)
	func: 8.18947e-05 %		call: 1
589(bc_expand_start_case)
	func: 0 %		call: 0
590(expand_start_case_dummy)
	func: 0 %		call: 0
591(expand_end_case_dummy)
	func: 0 %		call: 0
592(case_index_expr_type)
	func: 0 %		call: 0
593(pushcase)
	func: 0.000163789 %		call: 2
594(pushcase_range)
	func: 0 %		call: 0
595(bc_pushcase)
	func: 0 %		call: 0
596(check_for_full_enumeration_handling)
	func: 0 %		call: 0
597(bc_check_for_full_enumeration_handling)
	func: 0 %		call: 0
598(expand_end_case)
	func: 8.18947e-05 %		call: 1
599(bc_expand_end_case)
	func: 0 %		call: 0
600(bc_new_uid)
	func: 0 %		call: 0
601(do_jump_if_equal)
	func: 0 %		call: 0
602(estimate_case_costs)
	func: 8.18947e-05 %		call: 1
603(group_case_nodes)
	func: 8.18947e-05 %		call: 1
604(balance_case_nodes)
	func: 8.18947e-05 %		call: 1
605(node_is_bounded)
	func: 8.18947e-05 %		call: 1
606(emit_jump_if_reachable)
	func: 8.18947e-05 %		call: 1
607(emit_case_nodes)
	func: 8.18947e-05 %		call: 1
608(find_loop_tree_blocks)
	func: 0 %		call: 0
609(unroll_block_trees)
	func: 0 %		call: 0
610(bc_init_mode_to_opcode_maps)
	func: 0 %		call: 0
611(init_expr_once)
	func: 8.18947e-05 %		call: 1
612(init_expr)
	func: 0.00114653 %		call: 14
613(save_expr_status)
	func: 0 %		call: 0
614(restore_expr_status)
	func: 0 %		call: 0
615(protect_from_queue)
	func: 0.252809 %		call: 3087
616(queued_subexp_p)
	func: 0.0122842 %		call: 150
617(emit_queue)
	func: 0.0666623 %		call: 814
618(init_queue)
	func: 0.00114653 %		call: 14
619(convert_move)
	func: 0.00229305 %		call: 28
620(convert_to_mode)
	func: 8.18947e-05 %		call: 1
621(convert_modes)
	func: 0.00573263 %		call: 70
622(move_by_pieces)
	func: 0 %		call: 0
623(move_by_pieces_ninsns)
	func: 0 %		call: 0
624(move_by_pieces_1)
	func: 0 %		call: 0
625(emit_block_move)
	func: 0 %		call: 0
626(move_block_to_reg)
	func: 0 %		call: 0
627(move_block_from_reg)
	func: 0 %		call: 0
628(use_regs)
	func: 0 %		call: 0
629(clear_storage)
	func: 0 %		call: 0
630(emit_move_insn)
	func: 0.0581452 %		call: 710
631(emit_move_insn_1)
	func: 0.0588004 %		call: 718
632(push_block)
	func: 8.18947e-05 %		call: 1
633(gen_push_operand)
	func: 0 %		call: 0
634(emit_push_insn)
	func: 0 %		call: 0
635(expand_assignment)
	func: 0.0103187 %		call: 126
636(store_expr)
	func: 0.0105644 %		call: 129
637(store_constructor)
	func: 0 %		call: 0
638(store_field)
	func: 0.00294821 %		call: 36
639(get_inner_reference)
	func: 0.0149867 %		call: 183
640(force_operand)
	func: 0.0199004 %		call: 243
641(save_noncopied_parts)
	func: 0 %		call: 0
642(init_noncopied_parts)
	func: 0 %		call: 0
643(safe_from_p)
	func: 0.00679726 %		call: 83
644(expand_expr)
	func: 0.161087 %		call: 1967
645(bc_expand_expr)
	func: 0 %		call: 0
646(get_pointer_alignment)
	func: 0 %		call: 0
647(string_constant)
	func: 0 %		call: 0
648(c_strlen)
	func: 0 %		call: 0
649(expand_builtin)
	func: 0 %		call: 0
650(apply_args_register_offset)
	func: 0 %		call: 0
651(apply_args_size)
	func: 0 %		call: 0
652(apply_result_size)
	func: 0 %		call: 0
653(result_vector)
	func: 0 %		call: 0
654(expand_builtin_apply_args)
	func: 0 %		call: 0
655(expand_builtin_apply)
	func: 0 %		call: 0
656(expand_builtin_return)
	func: 0 %		call: 0
657(expand_increment)
	func: 0.00262063 %		call: 32
658(preexpand_calls)
	func: 0.0390638 %		call: 477
659(init_pending_stack_adjust)
	func: 0.00114653 %		call: 14
660(clear_pending_stack_adjust)
	func: 0.00204737 %		call: 25
661(do_pending_stack_adjust)
	func: 0.0175255 %		call: 214
662(expand_cleanups_to)
	func: 0.013185 %		call: 161
663(jumpifnot)
	func: 0.000737052 %		call: 9
664(jumpif)
	func: 0 %		call: 0
665(do_jump)
	func: 0.0115472 %		call: 141
666(do_jump_by_parts_greater)
	func: 0 %		call: 0
667(do_jump_by_parts_greater_rtx)
	func: 0 %		call: 0
668(do_jump_by_parts_equality)
	func: 0 %		call: 0
669(do_jump_by_parts_equality_rtx)
	func: 0 %		call: 0
670(do_jump_for_compare)
	func: 0.00679726 %		call: 83
671(compare)
	func: 0.003112 %		call: 38
672(compare_from_rtx)
	func: 0.00687916 %		call: 84
673(do_store_flag)
	func: 0 %		call: 0
674(do_tablejump)
	func: 0 %		call: 0
675(bc_load_memory)
	func: 0 %		call: 0
676(bc_store_memory)
	func: 0 %		call: 0
677(bc_allocate_local)
	func: 0 %		call: 0
678(bc_allocate_variable_array)
	func: 0 %		call: 0
679(bc_load_externaddr)
	func: 0 %		call: 0
680(bc_load_externaddr_id)
	func: 0 %		call: 0
681(bc_load_localaddr)
	func: 0 %		call: 0
682(bc_load_parmaddr)
	func: 0 %		call: 0
683(bc_canonicalize_array_ref)
	func: 0 %		call: 0
684(bc_expand_component_address)
	func: 0 %		call: 0
685(bc_push_offset_and_size)
	func: 0 %		call: 0
686(bc_expand_address)
	func: 0 %		call: 0
687(bc_runtime_type_code)
	func: 0 %		call: 0
688(bc_gen_constr_label)
	func: 0 %		call: 0
689(bc_expand_constructor)
	func: 0 %		call: 0
690(bc_store_field)
	func: 0 %		call: 0
691(bc_store_bit_field)
	func: 0 %		call: 0
692(bc_load_bit_field)
	func: 0 %		call: 0
693(bc_adjust_stack)
	func: 0 %		call: 0
694(calls_function_1)
	func: 0 %		call: 0
695(prepare_call_address)
	func: 0 %		call: 0
696(expand_call)
	func: 0.013185 %		call: 161
697(emit_library_call)
	func: 8.18947e-05 %		call: 1
698(emit_library_call_value)
	func: 0 %		call: 0
699(store_one_arg)
	func: 0 %		call: 0
700(init_expmed)
	func: 8.18947e-05 %		call: 1
701(negate_rtx)
	func: 0 %		call: 0
702(store_bit_field)
	func: 0 %		call: 0
703(store_fixed_bit_field)
	func: 0 %		call: 0
704(store_split_bit_field)
	func: 0 %		call: 0
705(extract_bit_field)
	func: 0.000163789 %		call: 2
706(extract_fixed_bit_field)
	func: 0.000163789 %		call: 2
707(mask_rtx)
	func: 0.000163789 %		call: 2
708(lshift_value)
	func: 0 %		call: 0
709(extract_split_bit_field)
	func: 0 %		call: 0
710(expand_inc)
	func: 0 %		call: 0
711(expand_dec)
	func: 0 %		call: 0
712(expand_shift)
	func: 0.00245684 %		call: 30
713(synth_mult)
	func: 0.00687916 %		call: 84
714(expand_mult)
	func: 0.00229305 %		call: 28
715(expand_divmod)
	func: 0 %		call: 0
716(make_tree)
	func: 0.00294821 %		call: 36
717(expand_mult_add)
	func: 0.000982737 %		call: 12
718(expand_and)
	func: 8.18947e-05 %		call: 1
719(emit_store_flag)
	func: 8.18947e-05 %		call: 1
720(plus_constant_wide)
	func: 0.10458 %		call: 1277
721(plus_constant_for_output_wide)
	func: 0.00131032 %		call: 16
722(eliminate_constant_term)
	func: 0.00270253 %		call: 33
723(find_next_ref)
	func: 0 %		call: 0
724(expr_size)
	func: 0 %		call: 0
725(break_out_memory_refs)
	func: 0.0419301 %		call: 512
726(copy_all_regs)
	func: 0 %		call: 0
727(memory_address)
	func: 0.0325122 %		call: 397
728(memory_address_noforce)
	func: 0 %		call: 0
729(validize_mem)
	func: 0.00376716 %		call: 46
730(stabilize)
	func: 0 %		call: 0
731(copy_to_reg)
	func: 0.00139221 %		call: 17
732(copy_addr_to_reg)
	func: 0 %		call: 0
733(copy_to_mode_reg)
	func: 0.00237495 %		call: 29
734(force_reg)
	func: 0.0118747 %		call: 145
735(force_not_mem)
	func: 0.0517575 %		call: 632
736(copy_to_suggested_reg)
	func: 0 %		call: 0
737(adjust_stack)
	func: 0 %		call: 0
738(anti_adjust_stack)
	func: 8.18947e-05 %		call: 1
739(round_push)
	func: 0 %		call: 0
740(emit_stack_save)
	func: 0 %		call: 0
741(emit_stack_restore)
	func: 0 %		call: 0
742(allocate_dynamic_stack_space)
	func: 0 %		call: 0
743(hard_function_value)
	func: 0.0263701 %		call: 322
744(hard_libcall_value)
	func: 0 %		call: 0
745(rtx_to_tree_code)
	func: 0 %		call: 0
746(add_equal_note)
	func: 0.00188358 %		call: 23
747(expand_binop)
	func: 0.009336 %		call: 114
748(sign_expand_binop)
	func: 0 %		call: 0
749(expand_twoval_binop)
	func: 0 %		call: 0
750(expand_unop)
	func: 0.000245684 %		call: 3
751(expand_complex_abs)
	func: 0 %		call: 0
752(emit_unop_insn)
	func: 0.00221116 %		call: 27
753(emit_no_conflict_block)
	func: 0 %		call: 0
754(emit_libcall_block)
	func: 0 %		call: 0
755(emit_clr_insn)
	func: 0 %		call: 0
756(emit_0_to_1_insn)
	func: 0 %		call: 0
757(emit_cmp_insn)
	func: 0.00843516 %		call: 103
758(can_compare_p)
	func: 0.00679726 %		call: 83
759(emit_float_lib_cmp)
	func: 0 %		call: 0
760(emit_indirect_jump)
	func: 0 %		call: 0
761(gen_add2_insn)
	func: 0 %		call: 0
762(have_add2_insn)
	func: 0 %		call: 0
763(gen_sub2_insn)
	func: 0 %		call: 0
764(have_sub2_insn)
	func: 0 %		call: 0
765(gen_move_insn)
	func: 0.000655158 %		call: 8
766(can_extend_p)
	func: 0.00221116 %		call: 27
767(gen_extend_insn)
	func: 0 %		call: 0
768(expand_float)
	func: 0 %		call: 0
769(expand_fix)
	func: 0 %		call: 0
770(init_optabs)
	func: 8.18947e-05 %		call: 1
771(text_section)
	func: 0 %		call: 0
772(data_section)
	func: 0 %		call: 0
773(readonly_data_section)
	func: 0 %		call: 0
774(in_text_section)
	func: 0 %		call: 0
775(make_function_rtl)
	func: 0.00114653 %		call: 14
776(bc_make_decl_rtl)
	func: 0 %		call: 0
777(decode_reg_name)
	func: 0.018672 %		call: 228
778(make_decl_rtl)
	func: 0.018672 %		call: 228
779(make_var_volatile)
	func: 0 %		call: 0
780(assemble_constant_align)
	func: 0 %		call: 0
781(assemble_asm)
	func: 0 %		call: 0
782(assemble_destructor)
	func: 0 %		call: 0
783(assemble_constructor)
	func: 0 %		call: 0
784(assemble_gc_entry)
	func: 0 %		call: 0
785(assemble_start_function)
	func: 0.00114653 %		call: 14
786(assemble_end_function)
	func: 0.00114653 %		call: 14
787(assemble_zeros)
	func: 0 %		call: 0
788(assemble_align)
	func: 0 %		call: 0
789(assemble_string)
	func: 0.00499558 %		call: 61
790(bc_output_ascii)
	func: 0 %		call: 0
791(assemble_variable)
	func: 0.00499558 %		call: 61
792(contains_pointers_p)
	func: 0 %		call: 0
793(bc_output_constructor)
	func: 0 %		call: 0
794(bc_output_data_constructor)
	func: 0 %		call: 0
795(assemble_external)
	func: 0.0524126 %		call: 640
796(assemble_external_libcall)
	func: 8.18947e-05 %		call: 1
797(assemble_global)
	func: 0 %		call: 0
798(assemble_label)
	func: 0 %		call: 0
799(assemble_name)
	func: 0.06224 %		call: 760
800(assemble_static_space)
	func: 0 %		call: 0
801(assemble_trampoline_template)
	func: 0 %		call: 0
802(assemble_integer)
	func: 8.18947e-05 %		call: 1
803(assemble_real)
	func: 0 %		call: 0
804(immed_double_const)
	func: 0.019409 %		call: 237
805(immed_real_const_1)
	func: 0 %		call: 0
806(immed_real_const)
	func: 0 %		call: 0
807(clear_const_double_mem)
	func: 0.00114653 %		call: 14
808(decode_addr_const)
	func: 0 %		call: 0
809(const_hash)
	func: 0.00810758 %		call: 99
810(compare_constant_1)
	func: 0.003112 %		call: 38
811(record_constant)
	func: 0.00499558 %		call: 61
812(record_constant_1)
	func: 0.00499558 %		call: 61
813(defer_addressed_constants)
	func: 0 %		call: 0
814(output_deferred_addressed_constants)
	func: 0 %		call: 0
815(copy_constant)
	func: 0 %		call: 0
816(output_constant_def)
	func: 0.00810758 %		call: 99
817(output_constant_def_contents)
	func: 0.00499558 %		call: 61
818(init_const_rtx_hash_table)
	func: 0.00114653 %		call: 14
819(save_varasm_status)
	func: 0 %		call: 0
820(restore_varasm_status)
	func: 0 %		call: 0
821(decode_rtx_const)
	func: 0 %		call: 0
822(simplify_subtraction)
	func: 0 %		call: 0
823(const_hash_rtx)
	func: 0 %		call: 0
824(record_constant_rtx)
	func: 0 %		call: 0
825(force_const_mem)
	func: 0 %		call: 0
826(get_pool_constant)
	func: 0 %		call: 0
827(get_pool_mode)
	func: 0 %		call: 0
828(get_pool_offset)
	func: 0 %		call: 0
829(get_pool_size)
	func: 0 %		call: 0
830(output_constant_pool)
	func: 0.00114653 %		call: 14
831(output_addressed_constants)
	func: 0.00818947 %		call: 100
832(output_byte_asm)
	func: 0 %		call: 0
833(output_constant)
	func: 0.00507747 %		call: 62
834(bc_assemble_integer)
	func: 0 %		call: 0
835(output_constructor)
	func: 0 %		call: 0
836(rtvec_alloc)
	func: 0.0728863 %		call: 890
837(rtx_alloc)
	func: 1.9866 %		call: 24258
838(rtx_free)
	func: 0.0827956 %		call: 1011
839(copy_rtx)
	func: 0.674731 %		call: 8239
840(copy_most_rtx)
	func: 0 %		call: 0
841(read_skip_spaces)
	func: 0 %		call: 0
842(read_name)
	func: 0 %		call: 0
843(read_rtx)
	func: 0 %		call: 0
844(init_rtl)
	func: 8.18947e-05 %		call: 1
845(print_rtx)
	func: 0 %		call: 0
846(debug_rtx)
	func: 0 %		call: 0
847(debug_rtx_list)
	func: 0 %		call: 0
848(debug_rtx_find)
	func: 0 %		call: 0
849(print_rtl)
	func: 0 %		call: 0
850(rtx_unstable_p)
	func: 0 %		call: 0
851(rtx_varies_p)
	func: 0.17116 %		call: 2090
852(rtx_addr_can_trap_p)
	func: 0.000982737 %		call: 12
853(rtx_addr_varies_p)
	func: 0.078537 %		call: 959
854(get_integer_term)
	func: 0 %		call: 0
855(get_related_value)
	func: 0.006224 %		call: 76
856(reg_mentioned_p)
	func: 0.42618 %		call: 5204
857(no_labels_between_p)
	func: 0.00802568 %		call: 98
858(reg_used_between_p)
	func: 0.014741 %		call: 180
859(reg_referenced_p)
	func: 0.117437 %		call: 1434
860(reg_referenced_between_p)
	func: 8.18947e-05 %		call: 1
861(reg_set_between_p)
	func: 0.00122842 %		call: 15
862(reg_set_p_1)
	func: 0.0121204 %		call: 148
863(reg_set_p)
	func: 0.0129394 %		call: 158
864(modified_between_p)
	func: 0.00671537 %		call: 82
865(modified_in_p)
	func: 0 %		call: 0
866(single_set)
	func: 1.97055 %		call: 24062
867(find_last_value)
	func: 0 %		call: 0
868(refers_to_regno_p)
	func: 1.21507 %		call: 14837
869(reg_overlap_mentioned_p)
	func: 0.654339 %		call: 7990
870(reg_set_last)
	func: 0.00245684 %		call: 30
871(rtx_equal_p)
	func: 2.72341 %		call: 33255
872(note_stores)
	func: 1.52439 %		call: 18614
873(dead_or_set_p)
	func: 0.317506 %		call: 3877
874(dead_or_set_regno_p)
	func: 0.317506 %		call: 3877
875(find_reg_note)
	func: 3.78927 %		call: 46270
876(find_regno_note)
	func: 0.115717 %		call: 1413
877(remove_note)
	func: 0.00696105 %		call: 85
878(volatile_insn_p)
	func: 0.0546238 %		call: 667
879(volatile_refs_p)
	func: 1.25774 %		call: 15358
880(side_effects_p)
	func: 0.294657 %		call: 3598
881(may_trap_p)
	func: 0.0250598 %		call: 306
882(inequality_comparisons_p)
	func: 0 %		call: 0
883(replace_rtx)
	func: 0.00131032 %		call: 16
884(replace_regs)
	func: 0.494317 %		call: 6036
885(reg_set_last_1)
	func: 0.0226029 %		call: 276
886(gen_rtx)
	func: 1.60211 %		call: 19563
887(gen_rtvec)
	func: 0.02334 %		call: 285
888(gen_rtvec_v)
	func: 0.0245684 %		call: 300
889(gen_reg_rtx)
	func: 0.0612572 %		call: 748
890(mark_reg_pointer)
	func: 0.00450421 %		call: 55
891(max_reg_num)
	func: 0.266567 %		call: 3255
892(max_label_num)
	func: 0.00384905 %		call: 47
893(get_first_label_num)
	func: 0.00515937 %		call: 63
894(gen_lowpart_common)
	func: 0.249943 %		call: 3052
895(gen_realpart)
	func: 0 %		call: 0
896(gen_imagpart)
	func: 0 %		call: 0
897(gen_lowpart)
	func: 0.000491368 %		call: 6
898(gen_highpart)
	func: 0 %		call: 0
899(subreg_lowpart_p)
	func: 0.0370983 %		call: 453
900(operand_subword)
	func: 0 %		call: 0
901(operand_subword_force)
	func: 0 %		call: 0
902(reverse_comparison)
	func: 0 %		call: 0
903(change_address)
	func: 0.0153962 %		call: 188
904(gen_label_rtx)
	func: 0.0253874 %		call: 310
905(gen_inline_header_rtx)
	func: 0.000573263 %		call: 7
906(set_new_first_and_last_insn)
	func: 0.000573263 %		call: 7
907(set_new_first_and_last_label_num)
	func: 0 %		call: 0
908(save_emit_status)
	func: 0 %		call: 0
909(restore_emit_status)
	func: 0 %		call: 0
910(unshare_all_rtl)
	func: 0.00114653 %		call: 14
911(copy_rtx_if_shared)
	func: 1.0503 %		call: 12825
912(reset_used_flags)
	func: 0.0959806 %		call: 1172
913(make_safe_from)
	func: 0 %		call: 0
914(get_insns)
	func: 0.0663347 %		call: 810
915(get_last_insn)
	func: 0.0958168 %		call: 1170
916(set_last_insn)
	func: 0.00139221 %		call: 17
917(get_last_insn_anywhere)
	func: 0 %		call: 0
918(get_max_uid)
	func: 0.0284175 %		call: 347
919(next_insn)
	func: 0.00335768 %		call: 41
920(previous_insn)
	func: 0 %		call: 0
921(next_nonnote_insn)
	func: 0.253874 %		call: 3100
922(prev_nonnote_insn)
	func: 1.76999 %		call: 21613
923(next_real_insn)
	func: 0.201215 %		call: 2457
924(prev_real_insn)
	func: 0.17419 %		call: 2127
925(next_active_insn)
	func: 0.994775 %		call: 12147
926(prev_active_insn)
	func: 0.151096 %		call: 1845
927(next_label)
	func: 0.0474989 %		call: 580
928(prev_label)
	func: 0.0529859 %		call: 647
929(try_split)
	func: 0.147738 %		call: 1804
930(make_insn_raw)
	func: 0.0230943 %		call: 282
931(add_insn)
	func: 0 %		call: 0
932(add_insn_after)
	func: 0 %		call: 0
933(delete_insns_since)
	func: 0 %		call: 0
934(reorder_insns)
	func: 0.00237495 %		call: 29
935(reorder_insns_with_line_notes)
	func: 0 %		call: 0
936(emit_insn_before)
	func: 0.0239952 %		call: 293
937(emit_jump_insn_before)
	func: 0.0045861 %		call: 56
938(emit_call_insn_before)
	func: 0 %		call: 0
939(emit_barrier_before)
	func: 0.00229305 %		call: 28
940(emit_note_before)
	func: 0.00270253 %		call: 33
941(emit_insn_after)
	func: 0.00106463 %		call: 13
942(emit_insn_after_with_line_notes)
	func: 8.18947e-05 %		call: 1
943(emit_jump_insn_after)
	func: 0.00229305 %		call: 28
944(emit_barrier_after)
	func: 0.00442231 %		call: 54
945(emit_label_after)
	func: 0.00728863 %		call: 89
946(emit_note_after)
	func: 0.00188358 %		call: 23
947(emit_line_note_after)
	func: 0 %		call: 0
948(emit_insn)
	func: 0.188194 %		call: 2298
949(emit_insns)
	func: 0.00204737 %		call: 25
950(emit_insns_before)
	func: 0.0167065 %		call: 204
951(emit_insns_after)
	func: 0 %		call: 0
952(emit_jump_insn)
	func: 0.019409 %		call: 237
953(emit_call_insn)
	func: 0.0265339 %		call: 324
954(emit_label)
	func: 0.0142497 %		call: 174
955(emit_barrier)
	func: 0.00573263 %		call: 70
956(emit_line_note)
	func: 0.0384086 %		call: 469
957(emit_note)
	func: 0.0574082 %		call: 701
958(emit_line_note_force)
	func: 0.00114653 %		call: 14
959(force_next_line_note)
	func: 0.00114653 %		call: 14
960(classify_insn)
	func: 8.18947e-05 %		call: 1
961(emit)
	func: 8.18947e-05 %		call: 1
962(start_sequence)
	func: 0.0937694 %		call: 1145
963(push_to_sequence)
	func: 0.0208013 %		call: 254
964(push_topmost_sequence)
	func: 0 %		call: 0
965(pop_topmost_sequence)
	func: 0 %		call: 0
966(end_sequence)
	func: 0.114571 %		call: 1399
967(in_sequence_p)
	func: 0.00114653 %		call: 14
968(gen_sequence)
	func: 0.0900842 %		call: 1100
969(restore_reg_data)
	func: 0 %		call: 0
970(restore_reg_data_1)
	func: 0 %		call: 0
971(init_emit)
	func: 0.00114653 %		call: 14
972(init_emit_once)
	func: 8.18947e-05 %		call: 1
973(endian)
	func: 0 %		call: 0
974(earith)
	func: 0 %		call: 0
975(etrunci)
	func: 0 %		call: 0
976(etruncui)
	func: 0 %		call: 0
977(ereal_atof)
	func: 0.000327579 %		call: 4
978(ereal_negate)
	func: 0 %		call: 0
979(efixi)
	func: 0 %		call: 0
980(efixui)
	func: 0 %		call: 0
981(ereal_from_int)
	func: 0 %		call: 0
982(ereal_from_uint)
	func: 0 %		call: 0
983(ereal_to_int)
	func: 0 %		call: 0
984(ereal_ldexp)
	func: 0 %		call: 0
985(target_isinf)
	func: 0 %		call: 0
986(target_isnan)
	func: 0 %		call: 0
987(target_negative)
	func: 0 %		call: 0
988(real_value_truncate)
	func: 0 %		call: 0
989(debug_real)
	func: 0 %		call: 0
990(etartdouble)
	func: 0 %		call: 0
991(etarldouble)
	func: 0 %		call: 0
992(etardouble)
	func: 0 %		call: 0
993(etarsingle)
	func: 0 %		call: 0
994(ereal_to_decimal)
	func: 0 %		call: 0
995(ereal_cmp)
	func: 0 %		call: 0
996(ereal_isneg)
	func: 0 %		call: 0
997(einit)
	func: 0 %		call: 0
998(eclear)
	func: 0 %		call: 0
999(emov)
	func: 0 %		call: 0
1000(eabs)
	func: 0 %		call: 0
1001(eneg)
	func: 0 %		call: 0
1002(eisneg)
	func: 0 %		call: 0
1003(eisinf)
	func: 0 %		call: 0
1004(eisnan)
	func: 0.000327579 %		call: 4
1005(einfin)
	func: 0 %		call: 0
1006(enan)
	func: 0 %		call: 0
1007(emovi)
	func: 0.000327579 %		call: 4
1008(emovo)
	func: 0 %		call: 0
1009(ecleaz)
	func: 0 %		call: 0
1010(ecleazs)
	func: 0 %		call: 0
1011(emovz)
	func: 0 %		call: 0
1012(einan)
	func: 0 %		call: 0
1013(eiisnan)
	func: 0 %		call: 0
1014(eiinfin)
	func: 0 %		call: 0
1015(eiisinf)
	func: 0 %		call: 0
1016(ecmpm)
	func: 0 %		call: 0
1017(eshdn1)
	func: 0 %		call: 0
1018(eshup1)
	func: 0 %		call: 0
1019(eshdn8)
	func: 0 %		call: 0
1020(eshup8)
	func: 0 %		call: 0
1021(eshup6)
	func: 0 %		call: 0
1022(eshdn6)
	func: 0 %		call: 0
1023(eaddm)
	func: 0 %		call: 0
1024(esubm)
	func: 0 %		call: 0
1025(m16m)
	func: 0 %		call: 0
1026(edivm)
	func: 0 %		call: 0
1027(emulm)
	func: 0 %		call: 0
1028(emdnorm)
	func: 0.000818947 %		call: 10
1029(esub)
	func: 0 %		call: 0
1030(eadd)
	func: 0 %		call: 0
1031(eadd1)
	func: 0 %		call: 0
1032(ediv)
	func: 0 %		call: 0
1033(emul)
	func: 0 %		call: 0
1034(e53toe)
	func: 0.000327579 %		call: 4
1035(e64toe)
	func: 0 %		call: 0
1036(e113toe)
	func: 0 %		call: 0
1037(e24toe)
	func: 0 %		call: 0
1038(etoe113)
	func: 0 %		call: 0
1039(toe113)
	func: 0 %		call: 0
1040(etoe64)
	func: 0 %		call: 0
1041(toe64)
	func: 0 %		call: 0
1042(etoe53)
	func: 0.000327579 %		call: 4
1043(toe53)
	func: 0.000655158 %		call: 8
1044(etoe24)
	func: 0 %		call: 0
1045(toe24)
	func: 0 %		call: 0
1046(ecmp)
	func: 0 %		call: 0
1047(eround)
	func: 0 %		call: 0
1048(ltoe)
	func: 0 %		call: 0
1049(ultoe)
	func: 0 %		call: 0
1050(eifrac)
	func: 0 %		call: 0
1051(euifrac)
	func: 0 %		call: 0
1052(eshift)
	func: 0.000982737 %		call: 12
1053(enormlz)
	func: 0.00122842 %		call: 15
1054(e24toasc)
	func: 0 %		call: 0
1055(e53toasc)
	func: 0 %		call: 0
1056(e64toasc)
	func: 0 %		call: 0
1057(e113toasc)
	func: 0 %		call: 0
1058(etoasc)
	func: 0 %		call: 0
1059(asctoe24)
	func: 0 %		call: 0
1060(asctoe53)
	func: 0.000327579 %		call: 4
1061(asctoe64)
	func: 0 %		call: 0
1062(asctoe113)
	func: 0 %		call: 0
1063(asctoe)
	func: 0 %		call: 0
1064(asctoeg)
	func: 0.000327579 %		call: 4
1065(efloor)
	func: 0 %		call: 0
1066(efrexp)
	func: 0 %		call: 0
1067(eldexp)
	func: 0 %		call: 0
1068(eremain)
	func: 0 %		call: 0
1069(eiremain)
	func: 0 %		call: 0
1070(mtherr)
	func: 0 %		call: 0
1071(make_nan)
	func: 0 %		call: 0
1072(ereal_from_float)
	func: 0 %		call: 0
1073(ereal_from_double)
	func: 0 %		call: 0
1074(uditoe)
	func: 0 %		call: 0
1075(ditoe)
	func: 0 %		call: 0
1076(etoudi)
	func: 0 %		call: 0
1077(etodi)
	func: 0 %		call: 0
1078(esqrt)
	func: 0 %		call: 0
1079(dbxout_init)
	func: 0 %		call: 0
1080(dbxout_typedefs)
	func: 0 %		call: 0
1081(dbxout_source_file)
	func: 0 %		call: 0
1082(dbxout_source_line)
	func: 0 %		call: 0
1083(dbxout_finish)
	func: 0 %		call: 0
1084(dbxout_type_fields)
	func: 0 %		call: 0
1085(dbxout_type_method_1)
	func: 0 %		call: 0
1086(dbxout_type_methods)
	func: 0 %		call: 0
1087(dbxout_type)
	func: 0 %		call: 0
1088(print_int_cst_octal)
	func: 0 %		call: 0
1089(print_octal)
	func: 0 %		call: 0
1090(dbxout_type_name)
	func: 0 %		call: 0
1091(dbxout_symbol)
	func: 0 %		call: 0
1092(dbxout_symbol_location)
	func: 0 %		call: 0
1093(dbxout_symbol_name)
	func: 0 %		call: 0
1094(dbxout_prepare_symbol)
	func: 0 %		call: 0
1095(dbxout_finish_symbol)
	func: 0 %		call: 0
1096(dbxout_syms)
	func: 0 %		call: 0
1097(dbxout_parms)
	func: 0 %		call: 0
1098(dbxout_reg_parms)
	func: 0 %		call: 0
1099(dbxout_args)
	func: 0 %		call: 0
1100(dbxout_types)
	func: 0 %		call: 0
1101(dbxout_block)
	func: 0 %		call: 0
1102(dbxout_begin_function)
	func: 0 %		call: 0
1103(dbxout_function)
	func: 0 %		call: 0
1104(function_cannot_inline_p)
	func: 0.00114653 %		call: 14
1105(initialize_for_inline)
	func: 0.000573263 %		call: 7
1106(adjust_copied_decl_tree)
	func: 0.000409474 %		call: 5
1107(save_for_inline_copying)
	func: 0.000573263 %		call: 7
1108(copy_decl_list)
	func: 0.000573263 %		call: 7
1109(copy_decl_tree)
	func: 0.000982737 %		call: 12
1110(copy_decl_rtls)
	func: 0.000982737 %		call: 12
1111(save_for_inline_nocopy)
	func: 0 %		call: 0
1112(save_constants)
	func: 0 %		call: 0
1113(note_modified_parmregs)
	func: 0 %		call: 0
1114(copy_for_inline)
	func: 0.0596194 %		call: 728
1115(expand_inline_function)
	func: 8.18947e-05 %		call: 1
1116(integrate_parm_decls)
	func: 0 %		call: 0
1117(integrate_decl_tree)
	func: 0 %		call: 0
1118(copy_rtx_and_substitute)
	func: 0 %		call: 0
1119(try_constants)
	func: 0 %		call: 0
1120(subst_constants)
	func: 0 %		call: 0
1121(mark_stores)
	func: 0 %		call: 0
1122(restore_constants)
	func: 0 %		call: 0
1123(set_block_origin_self)
	func: 0 %		call: 0
1124(set_decl_origin_self)
	func: 0 %		call: 0
1125(set_block_abstract_flags)
	func: 0 %		call: 0
1126(set_decl_abstract_flags)
	func: 0 %		call: 0
1127(output_inline_function)
	func: 0 %		call: 0
1128(jump_optimize)
	func: 0.00229305 %		call: 28
1129(duplicate_loop_exit_test)
	func: 0.00229305 %		call: 28
1130(squeeze_notes)
	func: 8.18947e-05 %		call: 1
1131(find_cross_jump)
	func: 0.00794379 %		call: 97
1132(do_cross_jump)
	func: 0.000163789 %		call: 2
1133(get_label_before)
	func: 0.00556884 %		call: 68
1134(get_label_after)
	func: 0 %		call: 0
1135(jump_back_p)
	func: 0.021784 %		call: 266
1136(can_reverse_comparison_p)
	func: 0.0107282 %		call: 131
1137(reverse_condition)
	func: 0.0823042 %		call: 1005
1138(swap_condition)
	func: 0.00270253 %		call: 33
1139(unsigned_condition)
	func: 0 %		call: 0
1140(signed_condition)
	func: 0 %		call: 0
1141(comparison_dominates_p)
	func: 0.0571625 %		call: 698
1142(simplejump_p)
	func: 0.853998 %		call: 10428
1143(condjump_p)
	func: 0.318407 %		call: 3888
1144(sets_cc0_p)
	func: 0 %		call: 0
1145(follow_jumps)
	func: 0.0683821 %		call: 835
1146(tension_vector_labels)
	func: 0 %		call: 0
1147(mark_jump_label)
	func: 1.18682 %		call: 14492
1148(delete_jump)
	func: 0.00286632 %		call: 35
1149(delete_computation)
	func: 0.00286632 %		call: 35
1150(delete_insn)
	func: 0.0782095 %		call: 955
1151(next_nondeleted_insn)
	func: 0 %		call: 0
1152(delete_for_peephole)
	func: 0.000327579 %		call: 4
1153(invert_jump)
	func: 0.00876273 %		call: 107
1154(invert_exp)
	func: 0.0262882 %		call: 321
1155(redirect_jump)
	func: 0.0201461 %		call: 246
1156(delete_from_jump_chain)
	func: 0.00818947 %		call: 100
1157(redirect_exp)
	func: 0.125872 %		call: 1537
1158(redirect_tablejump)
	func: 0 %		call: 0
1159(delete_labelref_insn)
	func: 0 %		call: 0
1160(rtx_renumbered_equal_p)
	func: 0.0421758 %		call: 515
1161(true_regnum)
	func: 0.167557 %		call: 2046
1162(thread_jumps)
	func: 0.00229305 %		call: 28
1163(rtx_equal_for_thread_p)
	func: 0.0106463 %		call: 130
1164(mark_modified_reg)
	func: 0.142742 %		call: 1743
1165(rtx_cost)
	func: 2.15956 %		call: 26370
1166(new_basic_block)
	func: 0.0303829 %		call: 371
1167(make_regs_eqv)
	func: 0.0634684 %		call: 775
1168(mention_regs)
	func: 0.901988 %		call: 11014
1169(insert_regs)
	func: 0.67514 %		call: 8244
1170(free_element)
	func: 0.524372 %		call: 6403
1171(remove_from_table)
	func: 0.394569 %		call: 4818
1172(lookup_as_function)
	func: 0.1556 %		call: 1900
1173(insert)
	func: 0.740983 %		call: 9048
1174(merge_equiv_classes)
	func: 0.012448 %		call: 152
1175(invalidate)
	func: 0.463278 %		call: 5657
1176(remove_invalid_refs)
	func: 0.00532316 %		call: 65
1177(rehash_using_reg)
	func: 0.00335768 %		call: 41
1178(invalidate_for_call)
	func: 0.0425853 %		call: 520
1179(use_related_value)
	func: 0.00630589 %		call: 77
1180(canon_hash)
	func: 1.89095 %		call: 23090
1181(safe_hash)
	func: 0.161824 %		call: 1976
1182(exp_equiv_p)
	func: 1.33816 %		call: 16340
1183(refers_to_p)
	func: 0 %		call: 0
1184(set_nonvarying_address_components)
	func: 0.0150686 %		call: 184
1185(refers_to_mem_p)
	func: 0.178203 %		call: 2176
1186(cse_rtx_addr_varies_p)
	func: 0.0594556 %		call: 726
1187(canon_reg)
	func: 2.3643 %		call: 28870
1188(find_best_addr)
	func: 0.118092 %		call: 1442
1189(find_comparison_args)
	func: 0.0689554 %		call: 842
1190(simplify_unary_operation)
	func: 0.0208832 %		call: 255
1191(simplify_binary_operation)
	func: 0.408982 %		call: 4994
1192(simplify_plus_minus)
	func: 0.00606021 %		call: 74
1193(cse_gen_binary)
	func: 0.0526583 %		call: 643
1194(simplify_relational_operation)
	func: 0.0607659 %		call: 742
1195(simplify_ternary_operation)
	func: 0.0601926 %		call: 735
1196(fold_rtx)
	func: 1.08363 %		call: 13232
1197(equiv_constant)
	func: 0.196384 %		call: 2398
1198(gen_lowpart_if_possible)
	func: 0.226848 %		call: 2770
1199(record_jump_cond)
	func: 0.0393095 %		call: 480
1200(cse_insn)
	func: 0.483834 %		call: 5908
1201(note_mem_written)
	func: 0.0234219 %		call: 286
1202(invalidate_from_clobbers)
	func: 0.500786 %		call: 6115
1203(cse_process_notes)
	func: 0.282291 %		call: 3447
1204(cse_around_loop)
	func: 0.00229305 %		call: 28
1205(invalidate_skipped_set)
	func: 0.014004 %		call: 171
1206(cse_set_around_loop)
	func: 0.0171979 %		call: 210
1207(cse_end_of_basic_block)
	func: 0.0328398 %		call: 401
1208(cse_main)
	func: 0.00229305 %		call: 28
1209(cse_basic_block)
	func: 0.0303829 %		call: 371
1210(count_reg_usage)
	func: 0.893799 %		call: 10914
1211(delete_dead_from_cse)
	func: 0.00114653 %		call: 14
1212(cse_check_loop_start)
	func: 0.003112 %		call: 38
1213(init_loop)
	func: 8.18947e-05 %		call: 1
1214(loop_optimize)
	func: 0.00114653 %		call: 14
1215(scan_loop)
	func: 0.00237495 %		call: 29
1216(record_excess_regs)
	func: 0 %		call: 0
1217(libcall_other_reg)
	func: 0 %		call: 0
1218(reg_in_basic_block_p)
	func: 0.00319389 %		call: 39
1219(libcall_benefit)
	func: 0 %		call: 0
1220(skip_consec_insns)
	func: 0 %		call: 0
1221(ignore_some_movables)
	func: 0.00237495 %		call: 29
1222(force_movables)
	func: 0.00237495 %		call: 29
1223(combine_movables)
	func: 0.00237495 %		call: 29
1224(rtx_equal_for_loop_p)
	func: 0.0200642 %		call: 245
1225(add_label_notes)
	func: 0.00671537 %		call: 82
1226(move_movables)
	func: 0.00237495 %		call: 29
1227(count_nonfixed_reads)
	func: 0.0919678 %		call: 1123
1228(prescan_loop)
	func: 0.00237495 %		call: 29
1229(find_and_verify_loops)
	func: 0.000737052 %		call: 9
1230(mark_loop_jump)
	func: 0.0406198 %		call: 496
1231(labels_in_range_p)
	func: 0 %		call: 0
1232(note_addr_stored)
	func: 0.0461067 %		call: 563
1233(invariant_p)
	func: 0.128411 %		call: 1568
1234(consec_sets_invariant_p)
	func: 0 %		call: 0
1235(find_single_use_in_loop)
	func: 0.277214 %		call: 3385
1236(count_loop_regs_set)
	func: 0.00237495 %		call: 29
1237(loop_reg_used_before_p)
	func: 0.010892 %		call: 133
1238(strength_reduce)
	func: 0.00237495 %		call: 29
1239(valid_initial_value_p)
	func: 0.00253874 %		call: 31
1240(find_mem_givs)
	func: 0.0778 %		call: 950
1241(record_biv)
	func: 0.00188358 %		call: 23
1242(record_giv)
	func: 0.00188358 %		call: 23
1243(check_final_value)
	func: 0 %		call: 0
1244(update_giv_derive)
	func: 0.025633 %		call: 313
1245(basic_induction_var)
	func: 0.0200642 %		call: 245
1246(general_induction_var)
	func: 0.0172798 %		call: 211
1247(simplify_giv_expr)
	func: 0.0418482 %		call: 511
1248(consec_sets_giv)
	func: 0 %		call: 0
1249(combine_givs_p)
	func: 0.00212926 %		call: 26
1250(combine_givs)
	func: 0.00171979 %		call: 21
1251(emit_iv_add_mult)
	func: 0.000982737 %		call: 12
1252(product_cheap_p)
	func: 0.000491368 %		call: 6
1253(check_dbra_loop)
	func: 0.00131032 %		call: 16
1254(maybe_eliminate_biv)
	func: 0.00163789 %		call: 20
1255(maybe_eliminate_biv_1)
	func: 0.00597831 %		call: 73
1256(last_use_this_basic_block)
	func: 0.000491368 %		call: 6
1257(record_initial)
	func: 0.0199823 %		call: 244
1258(update_reg_last_use)
	func: 0.00294821 %		call: 36
1259(get_condition)
	func: 0.00409474 %		call: 50
1260(get_condition_for_loop)
	func: 0.00401284 %		call: 49
1261(unroll_loop)
	func: 0.00237495 %		call: 29
1262(precondition_loop_p)
	func: 0.00114653 %		call: 14
1263(init_reg_map)
	func: 0 %		call: 0
1264(initial_reg_note_copy)
	func: 0 %		call: 0
1265(copy_loop_body)
	func: 0 %		call: 0
1266(emit_unrolled_add)
	func: 0 %		call: 0
1267(biv_total_increment)
	func: 0.000982737 %		call: 12
1268(iteration_info)
	func: 0.00131032 %		call: 16
1269(find_splittable_regs)
	func: 0 %		call: 0
1270(find_splittable_givs)
	func: 0 %		call: 0
1271(final_biv_value)
	func: 0.000409474 %		call: 5
1272(final_giv_value)
	func: 0 %		call: 0
1273(loop_iterations)
	func: 0.00131032 %		call: 16
1274(flow_analysis)
	func: 0.00114653 %		call: 14
1275(find_basic_blocks)
	func: 0.00114653 %		call: 14
1276(mark_label_ref)
	func: 0.0802568 %		call: 980
1277(life_analysis)
	func: 0.00114653 %		call: 14
1278(allocate_for_life_analysis)
	func: 0.00114653 %		call: 14
1279(init_regset_vector)
	func: 0.0045861 %		call: 56
1280(propagate_block)
	func: 0.0366888 %		call: 448
1281(insn_dead_p)
	func: 0.336997 %		call: 4115
1282(libcall_dead_p)
	func: 0 %		call: 0
1283(regno_uninitialized)
	func: 0 %		call: 0
1284(regno_clobbered_at_setjmp)
	func: 0 %		call: 0
1285(mark_set_regs)
	func: 0.277869 %		call: 3393
1286(mark_set_1)
	func: 0.253055 %		call: 3090
1287(mark_used_regs)
	func: 0.757362 %		call: 9248
1288(find_use_as_address)
	func: 0 %		call: 0
1289(dump_flow_info)
	func: 0 %		call: 0
1290(stupid_life_analysis)
	func: 0 %		call: 0
1291(stupid_reg_compare)
	func: 0 %		call: 0
1292(stupid_find_reg)
	func: 0 %		call: 0
1293(stupid_mark_refs)
	func: 0 %		call: 0
1294(combine_instructions)
	func: 0.00114653 %		call: 14
1295(init_reg_last_arrays)
	func: 0.00229305 %		call: 28
1296(setup_incoming_promotions)
	func: 0.00229305 %		call: 28
1297(set_nonzero_bits_and_sign_copies)
	func: 0.124234 %		call: 1517
1298(can_combine_p)
	func: 0.141432 %		call: 1727
1299(combinable_i3pat)
	func: 0.136027 %		call: 1661
1300(try_combine)
	func: 0.107528 %		call: 1313
1301(undo_all)
	func: 0.100731 %		call: 1230
1302(find_split_point)
	func: 0.0474989 %		call: 580
1303(subst)
	func: 0.735578 %		call: 8982
1304(expand_compound_operation)
	func: 0.00892652 %		call: 109
1305(expand_field_assignment)
	func: 0.24421 %		call: 2982
1306(make_extraction)
	func: 0.00679726 %		call: 83
1307(make_compound_operation)
	func: 0.744013 %		call: 9085
1308(force_to_mode)
	func: 0.0219478 %		call: 268
1309(known_cond)
	func: 0 %		call: 0
1310(make_field_assignment)
	func: 0.0936876 %		call: 1144
1311(apply_distributive_law)
	func: 0.0479084 %		call: 585
1312(simplify_and_const_int)
	func: 0.0107282 %		call: 131
1313(nonzero_bits)
	func: 0.649589 %		call: 7932
1314(num_sign_bit_copies)
	func: 0.339535 %		call: 4146
1315(extended_count)
	func: 0 %		call: 0
1316(merge_outer_ops)
	func: 0.00687916 %		call: 84
1317(simplify_shift_const)
	func: 0.0363613 %		call: 444
1318(recog_for_combine)
	func: 0.127264 %		call: 1554
1319(gen_lowpart_for_combine)
	func: 0.0867265 %		call: 1059
1320(gen_rtx_combine)
	func: 0.0469257 %		call: 573
1321(gen_binary)
	func: 0.00589642 %		call: 72
1322(gen_unary)
	func: 0 %		call: 0
1323(simplify_comparison)
	func: 0.0474989 %		call: 580
1324(reversible_comparison_p)
	func: 0.0603564 %		call: 737
1325(update_table_tick)
	func: 0.305385 %		call: 3729
1326(record_value_for_reg)
	func: 0.205064 %		call: 2504
1327(record_dead_and_set_regs)
	func: 0.255348 %		call: 3118
1328(get_last_value_validate)
	func: 0.621417 %		call: 7588
1329(get_last_value)
	func: 0.0968814 %		call: 1183
1330(use_crosses_set_p)
	func: 0.123907 %		call: 1513
1331(reg_dead_at_p)
	func: 8.18947e-05 %		call: 1
1332(remove_death)
	func: 0.000737052 %		call: 9
1333(move_deaths)
	func: 0.0299735 %		call: 366
1334(reg_bitfield_target_p)
	func: 0.00376716 %		call: 46
1335(distribute_notes)
	func: 0.01556 %		call: 190
1336(distribute_links)
	func: 0.0203918 %		call: 249
1337(dump_combine_stats)
	func: 0 %		call: 0
1338(dump_combine_total_stats)
	func: 0 %		call: 0
1339(record_dead_and_set_regs_1)
	func: 0.233482 %		call: 2851
1340(reg_dead_at_p_1)
	func: 0.000245684 %		call: 3
1341(init_reg_sets)
	func: 8.18947e-05 %		call: 1
1342(init_reg_sets_1)
	func: 8.18947e-05 %		call: 1
1343(fix_register)
	func: 0 %		call: 0
1344(reg_preferred_class)
	func: 0.0440594 %		call: 538
1345(reg_alternate_class)
	func: 0.0476627 %		call: 582
1346(regclass_init)
	func: 0.00114653 %		call: 14
1347(regclass)
	func: 0.00114653 %		call: 14
1348(record_reg_classes)
	func: 0.20965 %		call: 2560
1349(copy_cost)
	func: 0.227504 %		call: 2778
1350(record_address_regs)
	func: 0.0753431 %		call: 920
1351(reg_scan)
	func: 0.00417663 %		call: 51
1352(reg_scan_mark_refs)
	func: 2.76321 %		call: 33741
1353(reg_class_subset_p)
	func: 0.00843516 %		call: 103
1354(reg_classes_intersect_p)
	func: 0 %		call: 0
1355(alloc_qty_for_scratch)
	func: 0.00114653 %		call: 14
1356(local_alloc)
	func: 0.00114653 %		call: 14
1357(memref_referenced_p)
	func: 0.0145773 %		call: 178
1358(optimize_reg_copy_1)
	func: 0.00131032 %		call: 16
1359(optimize_reg_copy_2)
	func: 0.000245684 %		call: 3
1360(update_equiv_regs)
	func: 0.00114653 %		call: 14
1361(block_alloc)
	func: 0.0171979 %		call: 210
1362(qty_compare)
	func: 0.00532316 %		call: 65
1363(qty_compare_1)
	func: 0.0320208 %		call: 391
1364(combine_regs)
	func: 0.0257968 %		call: 315
1365(reg_meets_class_p)
	func: 0.00237495 %		call: 29
1366(update_qty_class)
	func: 0.00237495 %		call: 29
1367(reg_is_set)
	func: 0.109248 %		call: 1334
1368(reg_is_born)
	func: 0.0910669 %		call: 1112
1369(wipe_dead_reg)
	func: 0.0829593 %		call: 1013
1370(find_free_reg)
	func: 0.0229305 %		call: 280
1371(mark_life)
	func: 0.10761 %		call: 1314
1372(post_mark_life)
	func: 0.0577358 %		call: 705
1373(no_conflict_p)
	func: 0 %		call: 0
1374(requires_inout_p)
	func: 0.101468 %		call: 1239
1375(dump_local_alloc)
	func: 0 %		call: 0
1376(validate_equiv_mem_from_store)
	func: 0.0149048 %		call: 182
1377(global_alloc)
	func: 0.00114653 %		call: 14
1378(allocno_compare)
	func: 0.0393914 %		call: 481
1379(global_conflicts)
	func: 0.000900842 %		call: 11
1380(expand_preferences)
	func: 0.000900842 %		call: 11
1381(prune_preferences)
	func: 0.000900842 %		call: 11
1382(find_reg)
	func: 0.00892652 %		call: 109
1383(retry_global_alloc)
	func: 0 %		call: 0
1384(record_one_conflict)
	func: 0.0949979 %		call: 1160
1385(record_conflicts)
	func: 0.0169522 %		call: 207
1386(mark_reg_store)
	func: 0.100239 %		call: 1224
1387(mark_reg_clobber)
	func: 0.112687 %		call: 1376
1388(mark_reg_conflicts)
	func: 0 %		call: 0
1389(mark_reg_death)
	func: 0.0873817 %		call: 1067
1390(mark_reg_live_nc)
	func: 0 %		call: 0
1391(set_preference)
	func: 0.0701019 %		call: 856
1392(mark_elimination)
	func: 0 %		call: 0
1393(dump_conflicts)
	func: 0 %		call: 0
1394(dump_global_regs)
	func: 0 %		call: 0
1395(find_secondary_reload)
	func: 0 %		call: 0
1396(get_secondary_mem)
	func: 0 %		call: 0
1397(clear_secondary_mem)
	func: 0.00114653 %		call: 14
1398(push_reload)
	func: 0 %		call: 0
1399(transfer_replacements)
	func: 0 %		call: 0
1400(combine_reloads)
	func: 0.0803387 %		call: 981
1401(find_dummy_reload)
	func: 0 %		call: 0
1402(earlyclobber_operand_p)
	func: 0 %		call: 0
1403(hard_reg_set_here_p)
	func: 0 %		call: 0
1404(strict_memory_address_p)
	func: 0.014741 %		call: 180
1405(operands_match_p)
	func: 0 %		call: 0
1406(n_occurrences)
	func: 0 %		call: 0
1407(decompose)
	func: 0.00114653 %		call: 14
1408(immune_p)
	func: 0.00114653 %		call: 14
1409(safe_from_earlyclobber)
	func: 0 %		call: 0
1410(find_reloads)
	func: 0.11973 %		call: 1462
1411(alternative_allows_memconst)
	func: 0 %		call: 0
1412(find_reloads_toplev)
	func: 0.00114653 %		call: 14
1413(find_reloads_address)
	func: 0.0185082 %		call: 226
1414(subst_reg_equivs)
	func: 0.0132669 %		call: 162
1415(form_sum)
	func: 0 %		call: 0
1416(subst_indexed_address)
	func: 0 %		call: 0
1417(find_reloads_address_1)
	func: 0 %		call: 0
1418(find_reloads_address_part)
	func: 0 %		call: 0
1419(subst_reloads)
	func: 0 %		call: 0
1420(copy_replacements)
	func: 0 %		call: 0
1421(find_replacement)
	func: 0 %		call: 0
1422(refers_to_regno_for_reload_p)
	func: 0.00114653 %		call: 14
1423(reg_overlap_mentioned_for_reload_p)
	func: 0 %		call: 0
1424(refers_to_mem_for_reload_p)
	func: 0 %		call: 0
1425(find_equiv_reg)
	func: 0.0228486 %		call: 279
1426(find_inc_amount)
	func: 0 %		call: 0
1427(regno_clobbered_p)
	func: 0.00376716 %		call: 46
1428(init_reload)
	func: 8.18947e-05 %		call: 1
1429(reload)
	func: 0.00114653 %		call: 14
1430(possible_group_p)
	func: 0 %		call: 0
1431(count_possible_groups)
	func: 0 %		call: 0
1432(modes_equiv_for_class_p)
	func: 0 %		call: 0
1433(spill_failure)
	func: 0 %		call: 0
1434(new_spill_reg)
	func: 0 %		call: 0
1435(delete_dead_insn)
	func: 0 %		call: 0
1436(alter_reg)
	func: 0.0612572 %		call: 748
1437(mark_home_live)
	func: 0.0658434 %		call: 804
1438(mark_scratch_live)
	func: 0.00114653 %		call: 14
1439(set_label_offsets)
	func: 0.135781 %		call: 1658
1440(eliminate_regs)
	func: 0 %		call: 0
1441(eliminate_regs_in_insn)
	func: 0 %		call: 0
1442(mark_not_eliminable)
	func: 0 %		call: 0
1443(spill_hard_reg)
	func: 0.00114653 %		call: 14
1444(scan_paradoxical_subregs)
	func: 0.546647 %		call: 6675
1445(order_regs_for_reload)
	func: 0.00114653 %		call: 14
1446(reload_as_needed)
	func: 0 %		call: 0
1447(forget_old_reloads_1)
	func: 0 %		call: 0
1448(reload_reg_class_lower)
	func: 0 %		call: 0
1449(mark_reload_reg_in_use)
	func: 0 %		call: 0
1450(clear_reload_reg_in_use)
	func: 0 %		call: 0
1451(reload_reg_free_p)
	func: 0 %		call: 0
1452(reload_reg_free_before_p)
	func: 0 %		call: 0
1453(reload_reg_reaches_end_p)
	func: 0 %		call: 0
1454(allocate_reload_reg)
	func: 0 %		call: 0
1455(choose_reload_regs)
	func: 0 %		call: 0
1456(emit_reload_insns)
	func: 0 %		call: 0
1457(gen_input_reload)
	func: 0 %		call: 0
1458(delete_output_reload)
	func: 0 %		call: 0
1459(inc_for_reload)
	func: 0 %		call: 0
1460(constraint_accepts_reg_p)
	func: 0 %		call: 0
1461(count_occurrences)
	func: 0 %		call: 0
1462(hard_reg_use_compare)
	func: 0.451731 %		call: 5516
1463(choose_hard_reg_mode)
	func: 0 %		call: 0
1464(init_caller_save)
	func: 0 %		call: 0
1465(init_save_areas)
	func: 0.00114653 %		call: 14
1466(setup_save_areas)
	func: 0 %		call: 0
1467(save_call_clobbered_regs)
	func: 0 %		call: 0
1468(set_reg_live)
	func: 0 %		call: 0
1469(clear_reg_live)
	func: 0 %		call: 0
1470(restore_referenced_regs)
	func: 0 %		call: 0
1471(insert_save_restore)
	func: 0 %		call: 0
1472(peephole)
	func: 0.0547057 %		call: 668
1473(mark_referenced_resources)
	func: 1.81266 %		call: 22134
1474(mark_set_resources)
	func: 2.1743 %		call: 26550
1475(find_end_label)
	func: 0.00229305 %		call: 28
1476(emit_delay_sequence)
	func: 0.0230943 %		call: 282
1477(add_to_delay_list)
	func: 0 %		call: 0
1478(delete_from_delay_slot)
	func: 0 %		call: 0
1479(note_delay_statistics)
	func: 0.0405379 %		call: 495
1480(optimize_skip)
	func: 0.0100731 %		call: 123
1481(get_jump_flags)
	func: 0.0100731 %		call: 123
1482(mostly_true_jump)
	func: 0.0574082 %		call: 701
1483(get_branch_condition)
	func: 0.0589642 %		call: 720
1484(redirect_with_delay_slots_safe_p)
	func: 0.000327579 %		call: 4
1485(steal_delay_list_from_target)
	func: 0 %		call: 0
1486(steal_delay_list_from_fallthrough)
	func: 0.000245684 %		call: 3
1487(try_merge_delay_insns)
	func: 0.0122842 %		call: 150
1488(redundant_insn_p)
	func: 0.074688 %		call: 912
1489(update_block)
	func: 0.0176074 %		call: 215
1490(reorg_redirect_jump)
	func: 0.00581452 %		call: 71
1491(update_live_status)
	func: 0.54894 %		call: 6703
1492(mark_target_live_regs)
	func: 0.017116 %		call: 209
1493(fill_simple_delay_slots)
	func: 0.0045861 %		call: 56
1494(fill_slots_from_thread)
	func: 0.0135126 %		call: 165
1495(fill_eager_delay_slots)
	func: 0.00229305 %		call: 28
1496(relax_delay_slots)
	func: 0.00229305 %		call: 28
1497(make_return_insns)
	func: 0 %		call: 0
1498(dbr_schedule)
	func: 0.00114653 %		call: 14
1499(canon_rtx)
	func: 0.0948341 %		call: 1158
1500(init_alias_analysis)
	func: 0.00343958 %		call: 42
1501(rtx_equal_for_memref_p)
	func: 0.0551151 %		call: 673
1502(find_symbolic_term)
	func: 0.00196547 %		call: 24
1503(memrefs_conflict_p)
	func: 0.0171979 %		call: 210
1504(read_dependence)
	func: 0 %		call: 0
1505(true_dependence)
	func: 0.00655158 %		call: 80
1506(anti_dependence)
	func: 0.00343958 %		call: 42
1507(output_dependence)
	func: 0.00720674 %		call: 88
1508(prepare_unit)
	func: 0 %		call: 0
1509(schedule_unit)
	func: 0 %		call: 0
1510(actual_hazard)
	func: 0 %		call: 0
1511(potential_hazard)
	func: 0 %		call: 0
1512(priority)
	func: 0.569168 %		call: 6950
1513(free_pending_lists)
	func: 0.033413 %		call: 408
1514(flush_pending_lists)
	func: 0.0265339 %		call: 324
1515(sched_analyze_1)
	func: 0.213991 %		call: 2613
1516(sched_analyze_2)
	func: 0.694877 %		call: 8485
1517(sched_analyze_insn)
	func: 0.234956 %		call: 2869
1518(sched_analyze)
	func: 0.033413 %		call: 408
1519(sched_note_set)
	func: 0.216775 %		call: 2647
1520(rank_for_schedule)
	func: 0.0823042 %		call: 1005
1521(birthing_insn_p)
	func: 0.0229305 %		call: 280
1522(schedule_insn)
	func: 0.234956 %		call: 2869
1523(schedule_select)
	func: 0.193845 %		call: 2367
1524(create_reg_dead_note)
	func: 0.0597012 %		call: 729
1525(attach_deaths)
	func: 0.441085 %		call: 5386
1526(schedule_block)
	func: 0.0343958 %		call: 420
1527(regno_use_in)
	func: 0 %		call: 0
1528(new_insn_dead_notes)
	func: 8.18947e-05 %		call: 1
1529(update_flow_info)
	func: 8.18947e-05 %		call: 1
1530(schedule_insns)
	func: 0.00229305 %		call: 28
1531(init_final)
	func: 8.18947e-05 %		call: 1
1532(end_final)
	func: 8.18947e-05 %		call: 1
1533(app_enable)
	func: 0 %		call: 0
1534(app_disable)
	func: 0.00229305 %		call: 28
1535(dbr_sequence_length)
	func: 0.0174436 %		call: 213
1536(init_insn_lengths)
	func: 0.00114653 %		call: 14
1537(get_attr_length)
	func: 0.00131032 %		call: 16
1538(shorten_branches)
	func: 0.00114653 %		call: 14
1539(asm_insn_count)
	func: 0 %		call: 0
1540(final_start_function)
	func: 0.00114653 %		call: 14
1541(profile_after_prologue)
	func: 0.00114653 %		call: 14
1542(profile_function)
	func: 0 %		call: 0
1543(final_end_function)
	func: 0.00114653 %		call: 14
1544(add_bb_string)
	func: 0 %		call: 0
1545(final)
	func: 0.00114653 %		call: 14
1546(final_scan_insn)
	func: 0.18975 %		call: 2317
1547(output_source_line)
	func: 0 %		call: 0
1548(alter_subreg)
	func: 0.000573263 %		call: 7
1549(walk_alter_subreg)
	func: 0.0931962 %		call: 1138
1550(output_operand_lossage)
	func: 0 %		call: 0
1551(output_asm_insn)
	func: 0.100567 %		call: 1228
1552(output_asm_label)
	func: 0.0112196 %		call: 137
1553(output_operand)
	func: 0.178776 %		call: 2183
1554(output_address)
	func: 0.0671537 %		call: 820
1555(output_addr_const)
	func: 0.0852524 %		call: 1041
1556(asm_fprintf)
	func: 0 %		call: 0
1557(split_double)
	func: 0 %		call: 0
1558(leaf_function_p)
	func: 0.00139221 %		call: 17
1559(only_leaf_regs_used)
	func: 0.00253874 %		call: 31
1560(leaf_renumber_regs)
	func: 0 %		call: 0
1561(leaf_renumber_regs_insn)
	func: 0 %		call: 0
1562(init_recog_no_volatile)
	func: 0.00343958 %		call: 42
1563(init_recog)
	func: 0.00696105 %		call: 85
1564(recog_memoized)
	func: 3.15065 %		call: 38472
1565(check_asm_operands)
	func: 0.207685 %		call: 2536
1566(validate_change)
	func: 0.972664 %		call: 11877
1567(apply_change_group)
	func: 1.0304 %		call: 12582
1568(num_validated_changes)
	func: 0 %		call: 0
1569(cancel_changes)
	func: 0.107446 %		call: 1312
1570(validate_replace_rtx_1)
	func: 0.0167884 %		call: 205
1571(validate_replace_rtx)
	func: 0.00327579 %		call: 40
1572(find_single_use_1)
	func: 0.121859 %		call: 1488
1573(find_single_use)
	func: 0.0203099 %		call: 248
1574(general_operand)
	func: 0.200642 %		call: 2450
1575(address_operand)
	func: 0.044305 %		call: 541
1576(register_operand)
	func: 2.84445 %		call: 34733
1577(scratch_operand)
	func: 0 %		call: 0
1578(immediate_operand)
	func: 0.189668 %		call: 2316
1579(const_int_operand)
	func: 0 %		call: 0
1580(const_double_operand)
	func: 0 %		call: 0
1581(nonimmediate_operand)
	func: 0 %		call: 0
1582(nonmemory_operand)
	func: 0 %		call: 0
1583(push_operand)
	func: 0.012448 %		call: 152
1584(memory_address_p)
	func: 0.30686 %		call: 3747
1585(memory_operand)
	func: 0.338389 %		call: 4132
1586(indirect_operand)
	func: 0 %		call: 0
1587(comparison_operator)
	func: 0 %		call: 0
1588(asm_noperands)
	func: 1.01484 %		call: 12392
1589(decode_asm_operands)
	func: 0 %		call: 0
1590(find_constant_term_loc)
	func: 0 %		call: 0
1591(offsettable_memref_p)
	func: 0 %		call: 0
1592(offsettable_nonstrict_memref_p)
	func: 0 %		call: 0
1593(offsettable_address_p)
	func: 0 %		call: 0
1594(mode_dependent_address_p)
	func: 0.0146592 %		call: 179
1595(mode_independent_operand)
	func: 0 %		call: 0
1596(adj_offsettable_operand)
	func: 0 %		call: 0
1597(constrain_operands)
	func: 0.249288 %		call: 3044
1598(reg_fits_class_p)
	func: 0.777508 %		call: 9494
1599(init_all_optabs)
	func: 8.18947e-05 %		call: 1
1600(recog_1)
	func: 0.254201 %		call: 3104
1601(recog_2)
	func: 0.191961 %		call: 2344
1602(recog_3)
	func: 0.468356 %		call: 5719
1603(recog_4)
	func: 0.0172798 %		call: 211
1604(recog_5)
	func: 0.0539686 %		call: 659
1605(recog)
	func: 0.765961 %		call: 9353
1606(split_1)
	func: 0.00237495 %		call: 29
1607(split_insns)
	func: 0.165755 %		call: 2024
1608(insn_extract)
	func: 0.638124 %		call: 7792
1609(output_44)
	func: 0 %		call: 0
1610(output_55)
	func: 0.00909031 %		call: 111
1611(output_56)
	func: 0 %		call: 0
1612(output_58)
	func: 0.00196547 %		call: 24
1613(output_62)
	func: 0.000245684 %		call: 3
1614(output_66)
	func: 0.0254693 %		call: 311
1615(output_68)
	func: 0 %		call: 0
1616(output_76)
	func: 0 %		call: 0
1617(output_77)
	func: 0 %		call: 0
1618(output_78)
	func: 0 %		call: 0
1619(output_80)
	func: 0 %		call: 0
1620(output_81)
	func: 0 %		call: 0
1621(output_83)
	func: 0 %		call: 0
1622(output_85)
	func: 0 %		call: 0
1623(output_86)
	func: 0 %		call: 0
1624(output_88)
	func: 0 %		call: 0
1625(output_89)
	func: 0 %		call: 0
1626(output_91)
	func: 0 %		call: 0
1627(output_92)
	func: 0 %		call: 0
1628(output_93)
	func: 0 %		call: 0
1629(output_97)
	func: 0 %		call: 0
1630(output_99)
	func: 0.000491368 %		call: 6
1631(output_110)
	func: 0.000163789 %		call: 2
1632(output_123)
	func: 0 %		call: 0
1633(output_127)
	func: 0 %		call: 0
1634(output_144)
	func: 0 %		call: 0
1635(output_150)
	func: 0 %		call: 0
1636(output_156)
	func: 0 %		call: 0
1637(output_173)
	func: 0 %		call: 0
1638(output_191)
	func: 0 %		call: 0
1639(output_192)
	func: 0 %		call: 0
1640(output_194)
	func: 0 %		call: 0
1641(output_195)
	func: 0 %		call: 0
1642(output_211)
	func: 0 %		call: 0
1643(output_212)
	func: 0.00393095 %		call: 48
1644(output_213)
	func: 0 %		call: 0
1645(output_214)
	func: 0 %		call: 0
1646(output_216)
	func: 0 %		call: 0
1647(output_217)
	func: 0.0092541 %		call: 113
1648(output_219)
	func: 0 %		call: 0
1649(output_220)
	func: 0 %		call: 0
1650(output_223)
	func: 0 %		call: 0
1651(output_256)
	func: 0 %		call: 0
1652(output_257)
	func: 0 %		call: 0
1653(output_258)
	func: 0 %		call: 0
1654(output_260)
	func: 0 %		call: 0
1655(output_261)
	func: 0 %		call: 0
1656(output_262)
	func: 0 %		call: 0
1657(output_263)
	func: 0 %		call: 0
1658(output_264)
	func: 0 %		call: 0
1659(output_266)
	func: 0 %		call: 0
1660(output_267)
	func: 0 %		call: 0
1661(gen_cmpsi)
	func: 0.00704295 %		call: 86
1662(gen_cmpsf)
	func: 0 %		call: 0
1663(gen_cmpdf)
	func: 0 %		call: 0
1664(gen_cmptf)
	func: 0 %		call: 0
1665(gen_seq_special)
	func: 0 %		call: 0
1666(gen_sne_special)
	func: 0 %		call: 0
1667(gen_seq)
	func: 0 %		call: 0
1668(gen_sne)
	func: 8.18947e-05 %		call: 1
1669(gen_sgt)
	func: 0 %		call: 0
1670(gen_slt)
	func: 0 %		call: 0
1671(gen_sge)
	func: 0 %		call: 0
1672(gen_sle)
	func: 0 %		call: 0
1673(gen_sgtu)
	func: 0 %		call: 0
1674(gen_sltu)
	func: 0 %		call: 0
1675(gen_sgeu)
	func: 0 %		call: 0
1676(gen_sleu)
	func: 0 %		call: 0
1677(gen_beq)
	func: 0.000982737 %		call: 12
1678(gen_bne)
	func: 0.00401284 %		call: 49
1679(gen_bgt)
	func: 0.000573263 %		call: 7
1680(gen_bgtu)
	func: 0 %		call: 0
1681(gen_blt)
	func: 0.000737052 %		call: 9
1682(gen_bltu)
	func: 0.000409474 %		call: 5
1683(gen_bge)
	func: 0.000163789 %		call: 2
1684(gen_bgeu)
	func: 0 %		call: 0
1685(gen_ble)
	func: 8.18947e-05 %		call: 1
1686(gen_bleu)
	func: 0 %		call: 0
1687(gen_movqi)
	func: 0.00327579 %		call: 40
1688(gen_movhi)
	func: 0.000982737 %		call: 12
1689(gen_movsi)
	func: 0.0545419 %		call: 666
1690(gen_movdi)
	func: 0 %		call: 0
1691(gen_movsf)
	func: 0 %		call: 0
1692(gen_movdf)
	func: 0 %		call: 0
1693(gen_split_87)
	func: 0 %		call: 0
1694(gen_movtf)
	func: 0 %		call: 0
1695(gen_zero_extendhisi2)
	func: 0.000491368 %		call: 6
1696(gen_zero_extendqihi2)
	func: 0 %		call: 0
1697(gen_zero_extendqisi2)
	func: 0.000327579 %		call: 4
1698(gen_extendhisi2)
	func: 0.000245684 %		call: 3
1699(gen_extendqihi2)
	func: 0 %		call: 0
1700(gen_extendqisi2)
	func: 0.00114653 %		call: 14
1701(gen_extendsfdf2)
	func: 0 %		call: 0
1702(gen_extendsftf2)
	func: 0 %		call: 0
1703(gen_extenddftf2)
	func: 0 %		call: 0
1704(gen_truncdfsf2)
	func: 0 %		call: 0
1705(gen_trunctfsf2)
	func: 0 %		call: 0
1706(gen_trunctfdf2)
	func: 0 %		call: 0
1707(gen_floatsisf2)
	func: 0 %		call: 0
1708(gen_floatsidf2)
	func: 0 %		call: 0
1709(gen_floatsitf2)
	func: 0 %		call: 0
1710(gen_fix_truncsfsi2)
	func: 0 %		call: 0
1711(gen_fix_truncdfsi2)
	func: 0 %		call: 0
1712(gen_fix_trunctfsi2)
	func: 0 %		call: 0
1713(gen_adddi3)
	func: 0 %		call: 0
1714(gen_addsi3)
	func: 0.00696105 %		call: 85
1715(gen_subdi3)
	func: 0 %		call: 0
1716(gen_subsi3)
	func: 0 %		call: 0
1717(gen_mulsi3)
	func: 0 %		call: 0
1718(gen_mulsidi3)
	func: 0 %		call: 0
1719(gen_const_mulsidi3)
	func: 0 %		call: 0
1720(gen_umulsidi3)
	func: 0 %		call: 0
1721(gen_const_umulsidi3)
	func: 0 %		call: 0
1722(gen_divsi3)
	func: 0 %		call: 0
1723(gen_udivsi3)
	func: 0 %		call: 0
1724(gen_anddi3)
	func: 0 %		call: 0
1725(gen_andsi3)
	func: 0.000491368 %		call: 6
1726(gen_split_146)
	func: 0 %		call: 0
1727(gen_iordi3)
	func: 0 %		call: 0
1728(gen_iorsi3)
	func: 0 %		call: 0
1729(gen_split_152)
	func: 0 %		call: 0
1730(gen_xordi3)
	func: 0 %		call: 0
1731(gen_xorsi3)
	func: 0 %		call: 0
1732(gen_split_158)
	func: 0 %		call: 0
1733(gen_split_159)
	func: 0 %		call: 0
1734(gen_negdi2)
	func: 0 %		call: 0
1735(gen_negsi2)
	func: 0.000245684 %		call: 3
1736(gen_one_cmpldi2)
	func: 0 %		call: 0
1737(gen_one_cmplsi2)
	func: 0 %		call: 0
1738(gen_addtf3)
	func: 0 %		call: 0
1739(gen_adddf3)
	func: 0 %		call: 0
1740(gen_addsf3)
	func: 0 %		call: 0
1741(gen_subtf3)
	func: 0 %		call: 0
1742(gen_subdf3)
	func: 0 %		call: 0
1743(gen_subsf3)
	func: 0 %		call: 0
1744(gen_multf3)
	func: 0 %		call: 0
1745(gen_muldf3)
	func: 0 %		call: 0
1746(gen_mulsf3)
	func: 0 %		call: 0
1747(gen_divtf3)
	func: 0 %		call: 0
1748(gen_divdf3)
	func: 0 %		call: 0
1749(gen_divsf3)
	func: 0 %		call: 0
1750(gen_negtf2)
	func: 0 %		call: 0
1751(gen_negdf2)
	func: 0 %		call: 0
1752(gen_negsf2)
	func: 0 %		call: 0
1753(gen_abstf2)
	func: 0 %		call: 0
1754(gen_absdf2)
	func: 0 %		call: 0
1755(gen_abssf2)
	func: 0 %		call: 0
1756(gen_sqrttf2)
	func: 0 %		call: 0
1757(gen_sqrtdf2)
	func: 0 %		call: 0
1758(gen_sqrtsf2)
	func: 0 %		call: 0
1759(gen_ashlsi3)
	func: 0.00417663 %		call: 51
1760(gen_ashrsi3)
	func: 0.00139221 %		call: 17
1761(gen_lshrsi3)
	func: 0.000655158 %		call: 8
1762(gen_jump)
	func: 0.00778 %		call: 95
1763(gen_tablejump)
	func: 0 %		call: 0
1764(gen_pic_tablejump)
	func: 0 %		call: 0
1765(gen_call)
	func: 0.00393095 %		call: 48
1766(gen_call_value)
	func: 0.009336 %		call: 114
1767(gen_untyped_call)
	func: 0 %		call: 0
1768(gen_untyped_return)
	func: 0 %		call: 0
1769(gen_update_return)
	func: 0 %		call: 0
1770(gen_return)
	func: 0 %		call: 0
1771(gen_nop)
	func: 0 %		call: 0
1772(gen_indirect_jump)
	func: 0 %		call: 0
1773(gen_nonlocal_goto)
	func: 0 %		call: 0
1774(gen_flush_register_windows)
	func: 0 %		call: 0
1775(gen_goto_handler_and_restore)
	func: 0 %		call: 0
1776(gen_flush)
	func: 0 %		call: 0
1777(gen_ffssi2)
	func: 0 %		call: 0
1778(gen_split_231)
	func: 0.000245684 %		call: 3
1779(gen_split_232)
	func: 0 %		call: 0
1780(gen_split_233)
	func: 0 %		call: 0
1781(gen_split_234)
	func: 0 %		call: 0
1782(gen_split_235)
	func: 0 %		call: 0
1783(gen_split_236)
	func: 0 %		call: 0
1784(gen_split_237)
	func: 0 %		call: 0
1785(gen_split_238)
	func: 8.18947e-05 %		call: 1
1786(gen_split_239)
	func: 0 %		call: 0
1787(gen_split_240)
	func: 0 %		call: 0
1788(gen_split_241)
	func: 0 %		call: 0
1789(gen_split_242)
	func: 0 %		call: 0
1790(gen_split_243)
	func: 0 %		call: 0
1791(gen_split_244)
	func: 0 %		call: 0
1792(add_clobbers)
	func: 0.00122842 %		call: 15
1793(init_mov_optab)
	func: 8.18947e-05 %		call: 1
1794(insn_current_length)
	func: 0 %		call: 0
1795(insn_variable_length_p)
	func: 0.100894 %		call: 1232
1796(insn_default_length)
	func: 0.102205 %		call: 1248
1797(result_ready_cost)
	func: 0.158221 %		call: 1932
1798(fp_mds_unit_ready_cost)
	func: 0 %		call: 0
1799(fp_mds_unit_blockage_range)
	func: 0 %		call: 0
1800(fp_alu_unit_ready_cost)
	func: 0 %		call: 0
1801(memory_unit_ready_cost)
	func: 0 %		call: 0
1802(function_units_used)
	func: 0.19409 %		call: 2370
1803(num_delay_slots)
	func: 0.131359 %		call: 1604
1804(get_attr_in_annul_branch_delay)
	func: 0 %		call: 0
1805(get_attr_in_uncond_branch_delay)
	func: 0 %		call: 0
1806(get_attr_in_branch_delay)
	func: 0 %		call: 0
1807(get_attr_in_call_delay)
	func: 0 %		call: 0
1808(get_attr_type)
	func: 0 %		call: 0
1809(get_attr_use_clobbered)
	func: 0 %		call: 0
1810(eligible_for_delay)
	func: 0.0214564 %		call: 262
1811(eligible_for_annul_false)
	func: 0.00778 %		call: 95
1812(const_num_delay_slots)
	func: 0.0229305 %		call: 280
1813(reg_or_0_operand)
	func: 0.00319389 %		call: 39
1814(fp_zero_operand)
	func: 0 %		call: 0
1815(restore_operand)
	func: 0.0126118 %		call: 154
1816(call_operand)
	func: 0 %		call: 0
1817(call_operand_address)
	func: 0.000245684 %		call: 3
1818(symbolic_operand)
	func: 0.0224392 %		call: 274
1819(symbolic_memory_operand)
	func: 0.199987 %		call: 2442
1820(reg_or_nonsymb_mem_operand)
	func: 0.2913 %		call: 3557
1821(sparc_operand)
	func: 0.00180168 %		call: 22
1822(move_operand)
	func: 0.277132 %		call: 3384
1823(move_pic_label)
	func: 0.0171979 %		call: 210
1824(memop)
	func: 0.118502 %		call: 1447
1825(eq_or_neq)
	func: 0 %		call: 0
1826(normal_comp_operator)
	func: 0 %		call: 0
1827(noov_compare_op)
	func: 0.290808 %		call: 3551
1828(extend_op)
	func: 0.103515 %		call: 1264
1829(cc_arithop)
	func: 0.0234219 %		call: 286
1830(cc_arithopn)
	func: 0.0234219 %		call: 286
1831(arith_operand)
	func: 0.108347 %		call: 1323
1832(arith_double_operand)
	func: 0 %		call: 0
1833(shift_operand)
	func: 0.0160514 %		call: 196
1834(small_int)
	func: 0.000327579 %		call: 4
1835(uns_small_int)
	func: 0 %		call: 0
1836(uns_arith_operand)
	func: 0 %		call: 0
1837(clobbered_register)
	func: 0 %		call: 0
1838(gen_compare_reg)
	func: 0.00696105 %		call: 85
1839(leaf_return_peephole_ok)
	func: 0 %		call: 0
1840(eligible_for_epilogue_delay)
	func: 0.00131032 %		call: 16
1841(short_branch)
	func: 0 %		call: 0
1842(reg_unused_after)
	func: 0 %		call: 0
1843(check_pic)
	func: 0.0222754 %		call: 272
1844(pic_address_needs_scratch)
	func: 0 %		call: 0
1845(legitimize_pic_address)
	func: 0 %		call: 0
1846(initialize_pic)
	func: 0 %		call: 0
1847(finalize_pic)
	func: 0 %		call: 0
1848(sparc_address_cost)
	func: 0.203345 %		call: 2483
1849(emit_move_sequence)
	func: 0.0588004 %		call: 718
1850(singlemove_string)
	func: 0 %		call: 0
1851(mem_aligned_8)
	func: 0 %		call: 0
1852(output_move_double)
	func: 0 %		call: 0
1853(output_move_quad)
	func: 0 %		call: 0
1854(output_fp_move_double)
	func: 0 %		call: 0
1855(output_fp_move_quad)
	func: 0 %		call: 0
1856(find_addr_reg)
	func: 0 %		call: 0
1857(output_scc_insn)
	func: 0 %		call: 0
1858(compute_frame_size)
	func: 0.00229305 %		call: 28
1859(output_function_prologue)
	func: 0.00114653 %		call: 14
1860(output_function_epilogue)
	func: 0.00114653 %		call: 14
1861(sparc_builtin_saveregs)
	func: 0 %		call: 0
1862(output_cbranch)
	func: 0.00909031 %		call: 111
1863(output_return)
	func: 0 %		call: 0
1864(order_regs_for_local_alloc)
	func: 0.00114653 %		call: 14
1865(registers_ok_for_ldd_peep)
	func: 0.00131032 %		call: 16
1866(addrs_ok_for_ldd_peep)
	func: 0 %		call: 0
1867(register_ok_for_ldd)
	func: 0 %		call: 0
1868(print_operand)
	func: 0.178776 %		call: 2183
1869(output_double_int)
	func: 0 %		call: 0
1870(sparc_type_code)
	func: 0.00114653 %		call: 14
1871(sparc_frw_compute_frame_size)
	func: 0 %		call: 0
1872(sparc_frw_save_restore)
	func: 0 %		call: 0
1873(sparc_frw_output_function_prologue)
	func: 0 %		call: 0
1874(sparc_frw_output_function_epilogue)
	func: 0 %		call: 0
1875(sparc_frw_epilogue_delay_slots)
	func: 0 %		call: 0
1876(sparc_frw_eligible_for_epilogue_delay)
	func: 0 %		call: 0
1877(getpwd)
	func: 0 %		call: 0
1878(convert_to_pointer)
	func: 0.0142497 %		call: 174
1879(convert_to_real)
	func: 0 %		call: 0
1880(convert_to_integer)
	func: 0.0260425 %		call: 318
1881(convert_to_complex)
	func: 0 %		call: 0
1882(qst)
	func: 0.0146592 %		call: 179
1883(qsort)
	func: 0.0214564 %		call: 262
1884(__do_global_dtors)
	func: 8.18947e-05 %		call: 1
1885(__do_global_ctors)
	func: 8.18947e-05 %		call: 1
1886(__main)
	func: 8.18947e-05 %		call: 1
1887(__libc_init)
	func: 8.18947e-05 %		call: 1
1888(exit)
	func: 8.18947e-05 %		call: 1
1889(_cleanup)
	func: 8.18947e-05 %		call: 1
1890(fprintf)
	func: 0.132997 %		call: 1624
1891(memcpy)
	func: 0.264356 %		call: 3228
1892(abort)
	func: 0 %		call: 0
1893(strcmp)
	func: 0.103597 %		call: 1265
1894(__stdio_check_funcs)
	func: 0 %		call: 0
1895(__stdio_check_offset)
	func: 0.164117 %		call: 2004
1896(flushbuf)
	func: 0.00171979 %		call: 21
1897(fillbuf)
	func: 0.000573263 %		call: 7
1898(__flshfp)
	func: 0.00171979 %		call: 21
1899(__fillbf)
	func: 0.0535591 %		call: 654
1900(__invalidate)
	func: 0.000573263 %		call: 7
1901(ungetc)
	func: 0.0529859 %		call: 647
1902(strcpy)
	func: 8.18947e-05 %		call: 1
1903(_free_internal)
	func: 0.0187539 %		call: 229
1904(free)
	func: 0.0187539 %		call: 229
1905(strlen)
	func: 0.423068 %		call: 5166
1906(sprintf)
	func: 0.0217021 %		call: 265
1907(strcat)
	func: 0.0129394 %		call: 158
1908(__setjmp)
	func: 0 %		call: 0
1909(memset)
	func: 0.725751 %		call: 8862
1910(strncmp)
	func: 0.150195 %		call: 1834
1911(atoi)
	func: 0.21178 %		call: 2586
1912(strchr)
	func: 0.161578 %		call: 1973
1913(_obstack_begin)
	func: 0.00204737 %		call: 25
1914(_obstack_begin_1)
	func: 0 %		call: 0
1915(_obstack_newchunk)
	func: 0.0171979 %		call: 210
1916(_obstack_allocated_p)
	func: 0 %		call: 0
1917(_obstack_free)
	func: 0 %		call: 0
1918(obstack_free)
	func: 0.00294821 %		call: 36
1919(perror)
	func: 0 %		call: 0
1920(fflush)
	func: 0.00122842 %		call: 15
1921(initialize)
	func: 8.18947e-05 %		call: 1
1922(morecore)
	func: 0.00843516 %		call: 103
1923(malloc)
	func: 0.0416844 %		call: 509
1924(realloc)
	func: 0.000163789 %		call: 2
1925(signal)
	func: 0.000163789 %		call: 2
1926(__longjmp)
	func: 0 %		call: 0
1927(fputc)
	func: 0.0452878 %		call: 553
1928(fputs)
	func: 0.163298 %		call: 1994
1929(__getmode)
	func: 0.000163789 %		call: 2
1930(fopen)
	func: 0.000163789 %		call: 2
1931(fclose)
	func: 0.000491368 %		call: 6
1932(unlink)
	func: 0 %		call: 0
1933(sbrk)
	func: 0 %		call: 0
1934(system)
	func: 0 %		call: 0
1935(memcmp)
	func: 0.0917221 %		call: 1120
1936(ftell)
	func: 0 %		call: 0
1937(getenv)
	func: 0 %		call: 0
1938(stat)
	func: 0 %		call: 0
1939(getcwd)
	func: 0 %		call: 0
1940(atexit)
	func: 8.18947e-05 %		call: 1
1941(__new_exitfn)
	func: 8.18947e-05 %		call: 1
1942(__init_misc)
	func: 8.18947e-05 %		call: 1
1943(_exit)
	func: 8.18947e-05 %		call: 1
1944(vfprintf)
	func: 0.154699 %		call: 1889
1945(printf_unknown)
	func: 0 %		call: 0
1946(_wordcopy_fwd_aligned)
	func: 0.156665 %		call: 1913
1947(_wordcopy_fwd_dest_aligned)
	func: 0.00597831 %		call: 73
1948(_wordcopy_bwd_aligned)
	func: 0 %		call: 0
1949(_wordcopy_bwd_dest_aligned)
	func: 0 %		call: 0
1950(__stdio_read)
	func: 0.000573263 %		call: 7
1951(__stdio_write)
	func: 0.0014741 %		call: 18
1952(__stdio_seek)
	func: 0.000163789 %		call: 2
1953(__stdio_close)
	func: 0.000327579 %		call: 4
1954(__stdio_fileno)
	func: 0 %		call: 0
1955(__stdio_open)
	func: 0.000163789 %		call: 2
1956(__stdio_reopen)
	func: 0 %		call: 0
1957(__stdio_init_stream)
	func: 0.000327579 %		call: 4
1958(vsprintf)
	func: 0.0217021 %		call: 265
1959(__setjmp_aux)
	func: 0 %		call: 0
1960(strtol)
	func: 0.21178 %		call: 2586
1961(_strerror_internal)
	func: 0 %		call: 0
1962(__default_morecore)
	func: 0.0114653 %		call: 140
1963(memmove)
	func: 0 %		call: 0
1964(raise)
	func: 0 %		call: 0
1965(__sigaction)
	func: 0.000163789 %		call: 2
1966(fwrite)
	func: 0.16207 %		call: 1979
1967(__newstream)
	func: 0.000163789 %		call: 2
1968(__unlink)
	func: 0 %		call: 0
1969(__sbrk)
	func: 0.0114653 %		call: 140
1970(__sigprocmask)
	func: 0 %		call: 0
1971(__vfork)
	func: 0 %		call: 0
1972(__execve)
	func: 0 %		call: 0
1973(__waitpid)
	func: 0 %		call: 0
1974(__stat)
	func: 0 %		call: 0
1975(__lstat)
	func: 0 %		call: 0
1976(opendir)
	func: 0 %		call: 0
1977(readdir)
	func: 0 %		call: 0
1978(closedir)
	func: 0 %		call: 0
1979(strrchr)
	func: 8.18947e-05 %		call: 1
1980(syscall_error)
	func: 8.18947e-05 %		call: 1
1981(register_printf_function)
	func: 0 %		call: 0
1982(mbtowc)
	func: 0.154699 %		call: 1889
1983(_itoa)
	func: 0 %		call: 0
1984(__printf_fp)
	func: 0 %		call: 0
1985(__read)
	func: 0.000573263 %		call: 7
1986(__write)
	func: 0.0014741 %		call: 18
1987(__lseek)
	func: 0.000163789 %		call: 2
1988(__close)
	func: 0.000327579 %		call: 4
1989(__open)
	func: 0.000163789 %		call: 2
1990(__dup2)
	func: 0 %		call: 0
1991(__fstat)
	func: 0.000245684 %		call: 3
1992(__isatty)
	func: 0 %		call: 0
1993(__getpid)
	func: 0 %		call: 0
1994(__kill)
	func: 0 %		call: 0
1995(__sigvec)
	func: 0.000163789 %		call: 2
1996(memchr)
	func: 0 %		call: 0
1997(__brk)
	func: 0.00868084 %		call: 106
1998(__sigblock)
	func: 8.18947e-05 %		call: 1
1999(__sigsetmask)
	func: 0 %		call: 0
2000(fcntl)
	func: 0 %		call: 0
2001(fstat)
	func: 0 %		call: 0
2002(calloc)
	func: 0 %		call: 0
2003(__getdirentries)
	func: 0 %		call: 0
2004(__isnan)
	func: 0 %		call: 0
2005(__isinf)
	func: 0 %		call: 0
2006(__mpn_extract_double)
	func: 0 %		call: 0
2007(__mpn_lshift)
	func: 0 %		call: 0
2008(__mpn_cmp)
	func: 0 %		call: 0
2009(__mpn_divmod_1)
	func: 0 %		call: 0
2010(__mpn_mul_1)
	func: 0 %		call: 0
2011(__mpn_add_n)
	func: 0 %		call: 0
2012(__mpn_divmod)
	func: 0 %		call: 0
2013(__mpn_rshift)
	func: 0 %		call: 0
2014(__mpn_sub_n)
	func: 0 %		call: 0
2015(__ioctl)
	func: 0 %		call: 0
2016(__handler)
	func: 0 %		call: 0
2017(__raw_sigvec)
	func: 0.000163789 %		call: 2
2018(__fcntl)
	func: 0 %		call: 0
2019(__mpn_submul_1)
	func: 0 %		call: 0
2020(__sigreturn)
	func: 0 %		call: 0
2021(__umoddi3)
	func: 0.15994 %		call: 1953
2022(__udivdi3)
	func: 0.15994 %		call: 1953
2023(__udivmoddi4)
	func: 0.319881 %		call: 3906
