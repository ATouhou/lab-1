Cameron L Palmer
CSCE 2610
February 11, 2006

Chapter 2 - 2.30, 2.31, 2.37, 2.51

2.30)

   # $a0 and $a1 contain arrays of 0 to 2499 words
   # $a2 and $a3 contain the sizes of $a0 and $a1
   sll $a2, $a2, 2 # $a2 = 2500 * 4
   sll $a3, $a3, 2 # $a3 = 2500 * 4
   add $v0, $zero, $zero # $v0 = 0
   add $t0, $zero, $zero # $t0 = 0
   
outer: # Operates on array0
   # Basically add the $t0 index to $a0 array base address and get address of element
   add $t4, $a0, $t0 # $t4 = $a0 + $t0
   # load the element in $t4 and place it in $t4 array
   lw $t4, 0($t4) # $t4 = $t4[offset]
   add $t1, $zero, $zero # $t1 = 0; Resets the $t1 value
   
inner: # Operates on array1
   add $t3, $a1, $t1 # $t3 = $a1 + $t1; Store base plus offset in $t3
   lw $t3, 0($t3) # $t3 = $t3[offset]
   bne $t3, $t4, skip # if $t3 != $t4 then skip
   addi $v0, $v0, 1 # $v0 = $v0 + 1; Add 1 to the match count
   
skip:
   addi $t1, $t1, 4 # $t1 = $t1 + 4
   bne $t1, $a3, inner # if $t1 != $a3 then inner
   addi $t0, $t0, 4 # $t0 = $t0 + 4
   bne $t0, $a2, outer # if $t0 != $a2 then outer

## $v0 will contain the number of matches between the two array's elements.
##

2.31)

Outer loop loops 2500 times
Inner loop loops 2500*2500 times

Both have:
   sll, sll, add, add => 1, 1, 1, 1 = 4 cycles
   4 cycles

Outer loop has:
   add, lw, add, addi, bne => 1, 2, 1, 1, 2 = 7 cycles
   17 500
   
Inner loop has:
   add, lw, bne, addi, addi, bne => 1, 2, 2, 1, 1, 2 = 9 cycles
   56 250 000
   
   Total cycles => 56 267 504

Approximately 28 milliseconds.

2.37)

move $t1, $t2
clear $t0
beq $t1, small, L
beq $t2, big, L
li $t1, small
li $t2, big
ble $t3, $t5, L
bgt $t4, $t5, L
bge $t5, $t3, L
addi $t0, $t2, big
lw $t5, big($t2)

2.51)

arithmetic 24% + 48% /2 = 36% 
data transfer 36% + 39% /2 = 37.5%
conditional branch 18% + 6% /2 = 12%
jump 3% + 0% /2 = 1.5%