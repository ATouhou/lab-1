%% This BibTeX bibliography file in UTF-8 format was created using Papers.
%% http://mekentosj.com/papers/

@article{Lam:1992p188,
author = {Monica Lam and Robert Wilson}, 
journal = {ACM SIGARCH Computer Architecture News},
title = {Limits of control flow on parallelism},
abstract = {This paper discusses three techniques useful in relaxing the constraints imposed by control flow on parallelism: control dependence analysis, executing multiple flows of control simultaneously, and speculative execution. We evaluate these techniques ...},
number = {2},
volume = {20},
year = {1992},
month = {May},
date-added = {2008-09-06 20:03:38 -0500},
date-modified = {2008-09-06 20:05:58 -0500},
pmid = {146628.139702},
URL = {http://portal.acm.org/citation.cfm?id=146628.139702},
local-url = {file://localhost/Users/palmerc/Documents/Papers/1992/Lam/ACM%20SIGARCH%20Computer%20Architecture%20News%201992%20Lam.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p188},
read = {Yes},
rating = {4}
}

@article{Nicolau:1984p217,
author = {A Nicolau and J.A Fisher}, 
journal = {Computers, IEEE Transactions on AB  - ER  -},
title = {Measuring the Parallelism Available for Very Long Instruction Word Architectures},
abstract = {Long instruction word architectures, such as attached scientific processors and horizontally microcoded CPU's, are a popular means of obtaining code speedup via fine-grained parallelism. The falling cost of hardware holds out the hope of using these architectures for much more parallelism. But this hope has been diminished by experiments measuring how much parallelism is available in the code to start with. These experiments implied that even if we had infinite hardware, long instruction word architectures could not provide a speedup of more than a factor of 2 or 3 on real programs. ER  -},
number = {11},
pages = {968--976},
volume = {C-33},
year = {1984},
keywords = {VLIW (very long instruction word) architectures, Memory antialiasing, multiprocessors, trace scheduling, microcode, VLIW (very long instruction word) architectures, parallelism, multiprocessors, Memory antialiasing, parallelism, trace scheduling, microcode}, 
date-added = {2008-09-16 12:53:51 -0500},
date-modified = {2008-09-16 13:00:16 -0500},
pmid = {1676371@ieeejrns},
local-url = {file://localhost/Users/palmerc/Documents/Papers/1984/Nicolau/Computers%20IEEE%20Transactions%20on%20AB%20-%20ER%20-%201984%20Nicolau.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p217},
read = {Yes},
rating = {0}
}

@article{Nakajima:2006p2,
author = {A Nakajima and R Kobayashi and H Ando and T Shimada}, 
journal = {IPSJ Digital Courier},
title = {Limits of Thread-Level Parallelism in Non-numerical Programs},
abstract = {Page 1. Vol. 2 IPSJ Digital Courier May 2006 Regular Paper Limits of Thread-Level Parallelism in Non-numerical Programs Akio Nakajima },
year = {2006},
month = {Dec},
label = {rec-number 301},
date-added = {2008-08-31 18:26:08 -0500},
date-modified = {2008-08-31 18:26:46 -0500},
pmid = {16854892475275819437},
URL = {http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=pubmed&cmd=Retrieve&dopt=AbstractPlus&list_uids=16854892475275819437},
local-url = {file://localhost/Users/palmerc/Documents/Papers/2006/Nakajima/IPSJ%20Digital%20Courier%202006%20Nakajima.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p2},
rating = {0}
}

@article{Riseman:1972p215,
author = {E.M Riseman and C.C Foster}, 
journal = {Computers, IEEE Transactions on AB  - ER  -},
title = {The Inhibition of Potential Parallelism by Conditional Jumps},
abstract = { This note reports the results of an examination of seven programs originally written for execution on a conventional computer (CDC-3600). We postulate an infinite machine, one with an infinite memory and instruction stack, infinite registers and memory, and an infinite number of functional units. This machine wiU exectite a program in parallel at maximum speed by executing each instruction at the earliest possible moment. ER  -},
number = {12},
pages = { 1405-- 1411},
volume = {C-21},
year = {1972},
date-added = {2008-09-16 12:50:05 -0500},
date-modified = {2008-09-16 12:51:13 -0500},
pmid = {1672107@ieeejrns},
local-url = {file://localhost/Users/palmerc/Documents/Papers/1972/Riseman/Computers%20IEEE%20Transactions%20on%20AB%20-%20ER%20-%201972%20Riseman.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p215},
read = {Yes},
rating = {0}
}

@article{Hennessy:2003p277,
author = {J Hennessy and D Patterson}, 
journal = {books.google.com},
title = {Computer Architecture: A Quantitative Approach},
year = {2003},
month = {Jan},
date-added = {2008-09-18 14:52:57 -0500},
date-modified = {2008-09-18 14:52:57 -0500},
pmid = {10380484606598365926},
URL = {http://books.google.com/books?hl=en&lr=&ie=UTF-8&id=R7Frpn3g9AEC&oi=fnd&pg=PR9&dq=Computer+ARchitecture&ots=f1dWe8_xNW&sig=kBrPle3CTOUwSUuYPwMFrHQkrVE},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p277},
rating = {0}
}

@article{Rau:1992p211,
author = {B Rau and J Fisher}, 
journal = {The Journal of Supercomputing},
title = {Instruction-level parallel processing: History, overview, and perspective},
affiliation = {HP Computer Systems Laboratory},
year = {1992},
date-added = {2008-09-15 13:50:45 -0500},
date-modified = {2008-09-15 14:12:18 -0500},
URL = {http://www.springerlink.com/index/W118253122G8271Q.pdf},
local-url = {file://localhost/Users/palmerc/Documents/Papers/1992/Rau/The%20Journal%20of%20Supercomputing%201992%20Rau.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p211},
rating = {0}
}

@article{Wall:1991p191,
author = {David Wall}, 
journal = {ACM SIGPLAN Notices},
title = {Limits of instruction-level parallelism},
number = {4},
volume = {26},
year = {1991},
month = {Apr},
date-added = {2008-09-06 20:11:28 -0500},
date-modified = {2008-09-06 20:14:56 -0500},
pmid = {106973.106991},
URL = {http://portal.acm.org/citation.cfm?id=106973.106991},
local-url = {file://localhost/Users/palmerc/Documents/Papers/1991/Wall/ACM%20SIGPLAN%20Notices%201991%20Wall.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p191},
read = {Yes},
rating = {0}
}

@article{Hayes:2007p4,
author = {Brian Hayes}, 
journal = {American Scientist},
title = {Computing in a Parallel Universe},
year = {2007},
date-added = {2008-09-01 12:19:46 -0500},
date-modified = {2008-09-01 13:10:47 -0500},
URL = {http://www.americanscientist.org/issues/pub/computing-in-a-parallel-universe},
local-url = {file://localhost/Users/palmerc/Documents/Papers/2007/Hayes/American%20Scientist%202007%20Hayes.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p4},
read = {Yes},
rating = {0}
}

@article{Ekman:2005p299,
author = {Magnus Ekman and Fredrik Warg and Jim Nilsson}, 
journal = {ACM SIGARCH Computer Architecture News},
title = {An in-depth look at computer performance growth},
abstract = {It is a common belief that computer performance growth is over 50% annually, or that performance doubles every 18-20 months. By analyzing publicly available results from the SPEC integer (CINT) benchmark suites, we conclude that this was true between ...},
number = {1},
volume = {33},
year = {2005},
month = {Mar},
date-added = {2008-10-23 17:19:20 -0500},
date-modified = {2008-10-23 17:20:03 -0500},
pmid = {1055626.1055646},
URL = {http://portal.acm.org/citation.cfm?id=1055626.1055646},
local-url = {file://localhost/Users/palmerc/Documents/Papers/2005/Ekman/ACM%20SIGARCH%20Computer%20Architecture%20News%202005%20Ekman.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p299},
rating = {0}
}

@article{Sprangle:2002p298,
author = {E Sprangle and D Carmean}, 
journal = {Computer Architecture, 2002. Proceedings. 29th Annual International Symposium on},
title = {Increasing processor performance by implementing deeper pipelines},
abstract = {One architectural method for increasing processor performance involves increasing the frequency by implementing deeper pipelines. This paper explores the relationship between performance and pipeline depth using a Pentium<sup>(R)</sup> 4 processor like architecture as a baseline, and shows that deeper pipelines can continue to increase the performance. This paper shows that the branch misprediction latency is the single largest contributor to performance degradation as pipelines are stretched, and therefore branch prediction and fast branch recovery will continue to increase in importance. We show that higher performance cores, implemented with longer pipelines, for example, will put more pressure on the memory system, and therefore require larger on-chip caches. Finally, we show that in the same process technology, designing deeper pipelines can increase the processor frequency by 100%, which, when combined with larger on-chip caches can yield performance improvements of 35% to 90% over a Pentium 4 like processor ER  -},
pages = {25--34},
year = {2002},
keywords = {performance evaluation, branch prediction, branch recovery, Pentium processor, processor performance VL  -, pipeline processing, pipeline depth, pipeline processing, microcomputers}, 
date-added = {2008-10-23 16:41:42 -0500},
date-modified = {2008-10-23 16:42:17 -0500},
pmid = {1003559@ieeecnfs},
local-url = {file://localhost/Users/palmerc/Documents/Papers/2002/Sprangle/Computer%20Architecture%202002.%20Proceedings.%2029th%20Annual%20International%20Symposium%20on%202002%20Sprangle.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p298},
rating = {0}
}

@article{Tjaden:1970p214,
author = {G.S Tjaden and M.J Flynn}, 
journal = {Computers, IEEE Transactions on AB  - ER  -},
title = {Detection and Parallel Execution of Independent Instructions},
abstract = { For a single instruction stream{\&}{\#}8211;single data stream organization the problem of simultaneously issuing several instructions is studied. ER  -},
number = {10},
pages = { 889-- 895},
volume = {C-19},
year = {1970},
keywords = {Executably independent instructions, instruction decoding, predecode stack, stack simulator, weakly independent instructions., Executably independent instructions, instruction decoding, predecode stack, stack simulator, weakly independent instructions.}, 
date-added = {2008-09-16 12:46:25 -0500},
date-modified = {2008-09-16 12:47:24 -0500},
pmid = {1671388@ieeejrns},
local-url = {file://localhost/Users/palmerc/Documents/Papers/1970/Tjaden/Computers%20IEEE%20Transactions%20on%20AB%20-%20ER%20-%201970%20Tjaden.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p214},
read = {Yes},
rating = {0}
}

@article{Olukotun:1996p210,
author = {Kunle Olukotun and Basem Nayfeh and Lance Hammond and Ken Wilson and Kunyung Chang}, 
journal = {ASPLOS-VII: Proceedings of the seventh international conference on Architectural support for programming languages and operating systems},
title = {The case for a single-chip multiprocessor},
abstract = {Advances in IC processing allow for more microprocessor design options. The increasing gate density and cost of wires in advanced integrated circuit technologies require that we look for new ways to use their capabilities effectively. This paper shows ...},
year = {1996},
month = {Oct},
date-added = {2008-09-15 13:44:07 -0500},
date-modified = {2008-09-15 13:50:08 -0500},
pmid = {237090.237140},
URL = {http://portal.acm.org/citation.cfm?id=237090.237140},
local-url = {file://localhost/Users/palmerc/Documents/Papers/1996/Olukotun/ASPLOS-VII%20Proceedings%20of%20the%20seventh%20international%20conference%20on%20Architectural%20support%20for%20programming%20languages%20and%20operating%20systems%201996%20Olukotun.pdf},
uri = {papers://66B1AD37-5689-4985-A251-C37EF4AA5E1D/Paper/p210},
rating = {0}
}

