/home/palmerc/Development/nakajima/newsim/src/newsim -dir /home/palmerc/Development/nakajima/newsim/data/li -sim_type oracle -sp_perfect -statistic -updrive /bin/sh -c '/home/palmerc/Development/nakajima/newsim/SS/sim-bpred -redir:prog /home/palmerc/Development/nakajima/newsim/log/li/prog -redir:sim /home/palmerc/Development/nakajima/newsim/log/li/sim /home/palmerc/Development/nakajima/newsim/ss_precompiled_spec/li.ss train.lsp'

# set dir: /home/palmerc/Development/nakajima/newsim/data/li/

$ ------Sim_Model::print_argment()-----
$ <04/02/12 16:08:12>	 ADD: MD predict, FIXED: setjmp/longjmp, unroll
$            FIX: 
$ NO REEXEC MODE
$ trace limit: 100000000
$ print freq: 1000000
$ func_call_inline
$ loop unroll
$ perfect disambiguate (SP_REG, GP_REG)
$ 2lev brn_pred
$ simulation type: oracle
$ print statistic
$ SP perfect
$ reg perfect
$ -------------------------------------

# Program_Info::file_read() init end
# Loop::allocate_loop_c() init end
# Loop::file_read() init end

@ TC 1000000 cycle: 9287 ipc: 88.4692
@ TC 2000000 cycle: 12793 ipc: 129.069
@ TC 3000000 cycle: 13335 ipc: 186.054
@ TC 4000000 cycle: 15098 ipc: 219.698
@ TC 5000000 cycle: 19678 ipc: 211.118
@ TC 6000000 cycle: 33462 ipc: 149.602
@ TC 7000000 cycle: 43759 ipc: 133.849
@ TC 8000000 cycle: 51423 ipc: 130.406
@ TC 9000000 cycle: 63960 ipc: 118.069
@ TC 10000000 cycle: 76644 ipc: 109.591
@ TC 11000000 cycle: 88781 ipc: 104.149
@ TC 12000000 cycle: 100917 ipc: 100.021
@ TC 13000000 cycle: 113994 ipc: 96.055
@ TC 14000000 cycle: 131181 ipc: 90.0027
@ TC 15000000 cycle: 148374 ipc: 85.2889
@ TC 16000000 cycle: 162734 ipc: 82.9714
@ TC 17000000 cycle: 174696 ipc: 82.1366
@ TC 18000000 cycle: 186849 ipc: 81.3274
@ TC 19000000 cycle: 199182 ipc: 80.5487
@ TC 20000000 cycle: 213609 ipc: 79.1494
@ TC 21000000 cycle: 230076 ipc: 77.1778
@ TC 22000000 cycle: 246954 ipc: 75.3387
@ TC 23000000 cycle: 261042 ipc: 74.5195
@ TC 24000000 cycle: 273228 ipc: 74.2967
@ TC 25000000 cycle: 285308 ipc: 74.1214
@ TC 26000000 cycle: 297657 ipc: 73.8948
@ TC 27000000 cycle: 312105 ipc: 73.2401
@ TC 28000000 cycle: 327756 ipc: 72.3334
@ TC 29000000 cycle: 343098 ipc: 71.5693
@ TC 30000000 cycle: 357825 ipc: 70.9917
@ TC 31000000 cycle: 370728 ipc: 70.8081
@ TC 32000000 cycle: 382797 ipc: 70.7894
@ TC 33000000 cycle: 394796 ipc: 70.784
@ TC 34000000 cycle: 406986 ipc: 70.7466
@ TC 35000000 cycle: 419196 ipc: 70.7228
@ TC 36000000 cycle: 433464 ipc: 70.3711
@ TC 37000000 cycle: 447060 ipc: 70.1275
@ TC 38000000 cycle: 461379 ipc: 69.7872
@ TC 39000000 cycle: 475176 ipc: 69.5439
@ TC 40000000 cycle: 488460 ipc: 69.3864
@ TC 41000000 cycle: 502005 ipc: 69.2018
@ TC 42000000 cycle: 513978 ipc: 69.2374
@ TC 43000000 cycle: 526038 ipc: 69.2605
@ TC 44000000 cycle: 538035 ipc: 69.2917
@ TC 45000000 cycle: 550184 ipc: 69.3019
@ TC 46000000 cycle: 562215 ipc: 69.3264
@ TC 47000000 cycle: 575358 ipc: 69.2368
@ TC 48000000 cycle: 590346 ipc: 68.924
@ TC 49000000 cycle: 606090 ipc: 68.5333
@ TC 50000000 cycle: 621318 ipc: 68.2186
@ TC 51000000 cycle: 635325 ipc: 68.0477
@ TC 52000000 cycle: 647324 ipc: 68.0948
@ TC 53000000 cycle: 658937 ipc: 68.1798
@ TC 54000000 cycle: 670691 ipc: 68.2478
@ TC 55000000 cycle: 682665 ipc: 68.2924
@ TC 56000000 cycle: 694260 ipc: 68.3712
@ TC 57000000 cycle: 706091 ipc: 68.4254
@ TC 58000000 cycle: 718362 ipc: 68.4442
@ TC 59000000 cycle: 731352 ipc: 68.4002
@ TC 60000000 cycle: 743547 ipc: 68.4188
@ TC 61000000 cycle: 755154 ipc: 68.488
@ TC 62000000 cycle: 767268 ipc: 68.5112
@ TC 63000000 cycle: 778947 ipc: 68.5709
@ TC 64000000 cycle: 791316 ipc: 68.5704
@ TC 65000000 cycle: 802998 ipc: 68.6279
@ TC 66000000 cycle: 814176 ipc: 68.7245
@ TC 67000000 cycle: 825876 ipc: 68.7764
@ TC 68000000 cycle: 837261 ipc: 68.8523
@ TC 69000000 cycle: 848286 ipc: 68.9549
@ TC 70000000 cycle: 859317 ipc: 69.0539
@ TC 71000000 cycle: 870150 ipc: 69.1668
@ TC 72000000 cycle: 881010 ipc: 69.2753
@ TC 73000000 cycle: 890580 ipc: 69.4802
@ TC 74000000 cycle: 900087 ipc: 69.6741
@ TC 75000000 cycle: 910215 ipc: 69.8175
@ TC 76000000 cycle: 928584 ipc: 69.3686
@ TC 77000000 cycle: 945737 ipc: 69.0048
@ TC 78000000 cycle: 955996 ipc: 69.1483
@ TC 79000000 cycle: 965907 ipc: 69.313
@ TC 80000000 cycle: 981789 ipc: 69.0726
@ TC 81000000 cycle: 999036 ipc: 68.7269
@ TC 82000000 cycle: 1011099 ipc: 68.7426
@ TC 83000000 cycle: 1021028 ipc: 68.9013
@ TC 84000000 cycle: 1031649 ipc: 69.0199
@ TC 85000000 cycle: 1047816 ipc: 68.7719
@ TC 86000000 cycle: 1063593 ipc: 68.5465
@ TC 87000000 cycle: 1075454 ipc: 68.5749
@ TC 88000000 cycle: 1085055 ipc: 68.7465
@ TC 89000000 cycle: 1094447 ipc: 68.9271
@ TC 90000000 cycle: 1106277 ipc: 68.97
@ TC 91000000 cycle: 1119594 ipc: 68.9049
@ TC 92000000 cycle: 1132581 ipc: 68.8603
@ TC 93000000 cycle: 1145352 ipc: 68.8292
@ TC 94000000 cycle: 1156893 ipc: 68.8717
@ TC 95000000 cycle: 1166168 ipc: 69.0475
@ TC 96000000 cycle: 1175554 ipc: 69.2138
@ TC 97000000 cycle: 1184559 ipc: 69.3991
@ TC 98000000 cycle: 1195674 ipc: 69.4753
@ TC 99000000 cycle: 1207431 ipc: 69.4982
@ TC 100000000 cycle: 1219473 ipc: 69.5055
# Re_Exec::check_mode() trace lim :100000000

# print_result_data()
trace count         : 100000000
 nop count          : 9
 call/return count  : 5725134
 con branch count   : 13289051
 other branch count : 3779855
 load count         : 26076307
 store count        : 16689309
 other count        : 34440335
inst (trace - nop)  : 99999991

<func inline>
 inline call count  : 2862847
 inline return count: 2862287
 inline other count : 5132729

<perfect memory disambiguate (SP_REG, GP_REG)>
 sp load count      : 8426539
 sp store count     : 9406126
 gp load count      : 4090753
 gp store count     : 1807568

<loop unroll>
 loop unroll branch : 2360315
 loop induction val : 2021696
 (loop const val    : 661334 )
#fbb: 10/2 -> bedge, header, ave: 0, 2294, 1
#fbb: 11/3 -> bedge, header, ave: 0, 106, 1
#fbb: 29/2 -> bedge, header, ave: 13239, 12370, 2.07025
#fbb: 29/6 -> bedge, header, ave: 639, 12369, 1.05166
#fbb: 32/2 -> bedge, header, ave: 212, 106, 3
#fbb: 46/2 -> bedge, header, ave: 1071, 1071, 2
#fbb: 61/3 -> bedge, header, ave: 1, 1, 2
#fbb: 63/9 -> bedge, header, ave: 2, 1, 3
#fbb: 93/3 -> bedge, header, ave: 32452, 92, 353.739
#fbb: 94/2 -> bedge, header, ave: 709196, 51873, 14.6718
#fbb: 94/9 -> bedge, header, ave: 446226, 314823, 2.41739
#fbb: 96/2 -> bedge, header, ave: 540, 91, 6.93407
#fbb: 96/4 -> bedge, header, ave: 630369, 631, 1000
#fbb: 97/5 -> bedge, header, ave: 7992, 8, 1000
#fbb: 98/3 -> bedge, header, ave: 42362, 366, 116.743
#fbb: 107/3 -> bedge, header, ave: 16624, 54320, 1.30604
#fbb: 109/10 -> bedge, header, ave: 1310, 13082, 1.10014
#fbb: 110/3 -> bedge, header, ave: 8014, 11779, 1.68036
#fbb: 112/2 -> bedge, header, ave: 178545, 222039, 1.80412
#fbb: 130/6 -> bedge, header, ave: 172, 1, 173
#fbb: 135/18 -> bedge, header, ave: 0, 1, 1
#fbb: 179/5 -> bedge, header, ave: 1457, 21144, 1.06891
#fbb: 186/7 -> bedge, header, ave: 292, 240, 2.21667
#fbb: 268/1 -> bedge, header, ave: 4, 5, 1.8
#fbb: 280/10 -> bedge, header, ave: 50, 33, 2.51515
#fbb: 282/1 -> bedge, header, ave: 129, 52, 3.48077
#fbb: 288/17 -> bedge, header, ave: 44, 1, 45
#fbb: 289/2 -> bedge, header, ave: 113, 45, 3.51111
#fbb: 293/4 -> bedge, header, ave: 34, 1, 35
#fbb: 298/4 -> bedge, header, ave: 522, 21, 25.8571
#fbb: 300/2 -> bedge, header, ave: 2905, 1075, 3.70233
#fbb: 302/4 -> bedge, header, ave: 0, 34, 1
#fbb: 303/1 -> bedge, header, ave: 5145, 1874, 3.74546
#fbb: 305/1 -> bedge, header, ave: 4841, 3980, 2.21633
#fbb: 308/4 -> bedge, header, ave: 0, 29, 1
#fbb: 311/2 -> bedge, header, ave: 9, 2, 5.5
#fbb: 312/3 -> bedge, header, ave: 4, 1, 5
#fbb: 312/6 -> bedge, header, ave: 31, 1, 32
#fbb: 312/9 -> bedge, header, ave: 51, 1, 52
#fbb: 328/6 -> bedge, header, ave: 891, 1796, 1.4961
#fbb: 329/6 -> bedge, header, ave: 49, 103, 1.47573
#fbb: 333/1 -> bedge, header, ave: 0, 125492, 1
#fbb: 334/6 -> bedge, header, ave: 7, 125447, 1.00006
#fbb: 334/7 -> bedge, header, ave: 66272, 124125, 1.53391
#fbb: 335/1 -> bedge, header, ave: 20, 255480, 1.00008
#fbb: 335/2 -> bedge, header, ave: 167732, 252836, 1.6634
#fbb: 336/4 -> bedge, header, ave: 0, 2293, 1
#fbb: 336/5 -> bedge, header, ave: 2292, 2293, 1.99956
#fbb: 340/4 -> bedge, header, ave: 0, 651, 1
#fbb: 341/1 -> bedge, header, ave: 6236, 2071, 4.01111
#fbb: 342/7 -> bedge, header, ave: 8, 1, 9
====
 dynamic loop num   : 57.6924 (sum_ave/num: 2942.31/51)
 loop num (weighted): 2.45074
max loop ave: 1000
====
#fbb: 364/1 -> bedge, header, ave: 1059, 158, 7.70253
#fbb: 369/10 -> bedge, header, ave: 256, 164, 2.56098
#fbb: 369/23 -> bedge, header, ave: 984, 7, 141.571
#fbb: 369/31 -> bedge, header, ave: 0, 18, 1
#fbb: 372/4 -> bedge, header, ave: 218, 180, 2.21111
#fbb: 376/12 -> bedge, header, ave: 0, 2, 1
#fbb: 388/0 -> bedge, header, ave: 6176, 4932, 2.25223
#fbb: 390/26 -> bedge, header, ave: 0, 20, 1
#fbb: 395/25 -> bedge, header, ave: 4, 4, 2
#fbb: 396/18 -> bedge, header, ave: 0, 1, 1
#fbb: 397/16 -> bedge, header, ave: 0, 1, 1
#fbb: 400/1 -> bedge, header, ave: 0, 1, 1
#fbb: 406/5 -> bedge, header, ave: 3433, 17, 202.941
#fbb: 406/7 -> bedge, header, ave: 26, 13, 3
#fbb: 406/10 -> bedge, header, ave: 6, 2, 4
#fbb: 408/37 -> bedge, header, ave: 11, 3, 4.66667
#fbb: 408/263 -> bedge, header, ave: 8, 1, 9
#fbb: 417/2 -> bedge, header, ave: 2, 2, 2
#fbb: 434/4 -> bedge, header, ave: 7, 1, 8
#fbb: 442/1 -> bedge, header, ave: 11, 12, 1.91667
#fbb: 442/5 -> bedge, header, ave: 10, 9, 2.11111
#fbb: 443/48 -> bedge, header, ave: 0, 1, 1
#fbb: 443/49 -> bedge, header, ave: 0, 1, 1
 dynamic loop num   : 45.2195 (sum_ave/num: 3346.25/74)
 loop num (weighted): 2.45331

instance count      : 84760117
clock cycle         : 1219473
ipc (instance/clock): 69.5055

# Bb_Statistic::print() statistic
return 0
