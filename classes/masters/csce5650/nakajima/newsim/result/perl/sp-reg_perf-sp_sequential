/home/palmerc/Development/nakajima/newsim/src/newsim -dir /home/palmerc/Development/nakajima/newsim/data/perl -sim_type sp -sp_sequential -statistic -updrive /bin/sh -c '/home/palmerc/Development/nakajima/newsim/SS/sim-bpred -redir:prog /home/palmerc/Development/nakajima/newsim/log/perl/prog -redir:sim /home/palmerc/Development/nakajima/newsim/log/perl/sim /home/palmerc/Development/nakajima/newsim/ss_precompiled_spec/perl.ss scrabbl.pl scrabbl.in'

# set dir: /home/palmerc/Development/nakajima/newsim/data/perl/

$ ------Sim_Model::print_argment()-----
$ <04/02/12 16:08:12>	 ADD: MD predict, FIXED: setjmp/longjmp, unroll
$            FIX: 
$ NO REEXEC MODE
$ trace limit: 100000000
$ print freq: 1000000
$ func_call_inline
$ loop unroll
$ perfect disambiguate (SP_REG, GP_REG)
$ 2lev brn_pred
$ simulation type: sp
$ print statistic
$ SP sequential
$ reg perfect
$ -------------------------------------

# Program_Info::file_read() init end
$ Branch_Predict::allocate() pa_i:15, pa_j:15, pa_k:2
# Brnach_Predict::allocate() allocate BHT PHT end
# Loop::allocate_loop_c() init end
# Loop::file_read() init end

@ TC 1000000 cycle: 205144 ipc: 4.30652
@ TC 2000000 cycle: 391836 ipc: 4.50983
@ TC 3000000 cycle: 584185 ipc: 4.5368
@ TC 4000000 cycle: 766149 ipc: 4.61134
@ TC 5000000 cycle: 962842 ipc: 4.58661
@ TC 6000000 cycle: 1149963 ipc: 4.61844
@ TC 7000000 cycle: 1336539 ipc: 4.65806
@ TC 8000000 cycle: 1523132 ipc: 4.68786
@ TC 9000000 cycle: 1709624 ipc: 4.71156
@ TC 10000000 cycle: 1896184 ipc: 4.73033
@ TC 11000000 cycle: 2082493 ipc: 4.74639
@ TC 12000000 cycle: 2269213 ipc: 4.75888
@ TC 13000000 cycle: 2456934 ipc: 4.76717
@ TC 14000000 cycle: 2644392 ipc: 4.77485
@ TC 15000000 cycle: 2831712 ipc: 4.78171
@ TC 16000000 cycle: 3019144 ipc: 4.78756
@ TC 17000000 cycle: 3206681 ipc: 4.79253
@ TC 18000000 cycle: 3394111 ipc: 4.79718
@ TC 19000000 cycle: 3581785 ipc: 4.80098
@ TC 20000000 cycle: 3769242 ipc: 4.80469
@ TC 21000000 cycle: 3956833 ipc: 4.80791
@ TC 22000000 cycle: 4144824 ipc: 4.81026
@ TC 23000000 cycle: 4332369 ipc: 4.81298
@ TC 24000000 cycle: 4519660 ipc: 4.81575
@ TC 25000000 cycle: 4707681 ipc: 4.81751
@ TC 26000000 cycle: 4895187 ipc: 4.8197
@ TC 27000000 cycle: 5082636 ipc: 4.82175
@ TC 28000000 cycle: 5270100 ipc: 4.82368
@ TC 29000000 cycle: 5457580 ipc: 4.82541
@ TC 30000000 cycle: 5645112 ipc: 4.82699
@ TC 31000000 cycle: 5832827 ipc: 4.82834
@ TC 32000000 cycle: 6020563 ipc: 4.82957
@ TC 33000000 cycle: 6207918 ipc: 4.83105
@ TC 34000000 cycle: 6395746 ipc: 4.83204
@ TC 35000000 cycle: 6583024 ipc: 4.83341
@ TC 36000000 cycle: 6770610 ipc: 4.83446
@ TC 37000000 cycle: 6958023 ipc: 4.8356
@ TC 38000000 cycle: 7145410 ipc: 4.83671
@ TC 39000000 cycle: 7333183 ipc: 4.83747
@ TC 40000000 cycle: 7520749 ipc: 4.83835
@ TC 41000000 cycle: 7708299 ipc: 4.83919
@ TC 42000000 cycle: 7895978 ipc: 4.8399
@ TC 43000000 cycle: 8083720 ipc: 4.84054
@ TC 44000000 cycle: 8271100 ipc: 4.84138
@ TC 45000000 cycle: 8458687 ipc: 4.84206
@ TC 46000000 cycle: 8645609 ipc: 4.84313
@ TC 47000000 cycle: 8834988 ipc: 4.84269
@ TC 48000000 cycle: 9022273 ipc: 4.84346
@ TC 49000000 cycle: 9209921 ipc: 4.844
@ TC 50000000 cycle: 9397111 ipc: 4.84477
@ TC 51000000 cycle: 9584350 ipc: 4.84548
@ TC 52000000 cycle: 9771607 ipc: 4.84616
@ TC 53000000 cycle: 9959284 ipc: 4.84658
@ TC 54000000 cycle: 10146868 ipc: 4.84706
@ TC 55000000 cycle: 10334417 ipc: 4.84752
@ TC 56000000 cycle: 10522092 ipc: 4.84792
@ TC 57000000 cycle: 10709781 ipc: 4.84828
@ TC 58000000 cycle: 10897263 ipc: 4.84875
@ TC 59000000 cycle: 11084865 ipc: 4.84912
@ TC 60000000 cycle: 11272147 ipc: 4.84964
@ TC 61000000 cycle: 11459824 ipc: 4.84996
@ TC 62000000 cycle: 11647213 ipc: 4.8504
@ TC 63000000 cycle: 11834712 ipc: 4.85078
@ TC 64000000 cycle: 12021945 ipc: 4.85126
@ TC 65000000 cycle: 12209607 ipc: 4.85153
@ TC 66000000 cycle: 12397123 ipc: 4.85187
@ TC 67000000 cycle: 12584501 ipc: 4.85225
@ TC 68000000 cycle: 12772014 ipc: 4.85258
@ TC 69000000 cycle: 12959604 ipc: 4.85285
@ TC 70000000 cycle: 13146723 ipc: 4.8533
@ TC 71000000 cycle: 13334422 ipc: 4.85351
@ TC 72000000 cycle: 13522053 ipc: 4.85375
@ TC 73000000 cycle: 13709309 ipc: 4.85412
@ TC 74000000 cycle: 13896858 ipc: 4.85437
@ TC 75000000 cycle: 14084369 ipc: 4.85463
@ TC 76000000 cycle: 14271804 ipc: 4.8549
@ TC 77000000 cycle: 14459325 ipc: 4.85515
@ TC 78000000 cycle: 14646821 ipc: 4.85539
@ TC 79000000 cycle: 14834334 ipc: 4.85563
@ TC 80000000 cycle: 15021791 ipc: 4.85588
# Re_Exec::check_mode() trace end :80303008

# print_result_data()
trace count         : 80303008
 nop count          : 30
 call/return count  : 2983989
 con branch count   : 10440239
 other branch count : 1977803
 load count         : 22512548
 store count        : 14507995
 other count        : 27880404
inst (trace - nop)  : 80302978

<func inline>
 inline call count  : 1497193
 inline return count: 1486796
 inline other count : 2812606

<perfect memory disambiguate (SP_REG, GP_REG)>
 sp load count      : 9775662
 sp store count     : 8443050
 gp load count      : 2888498
 gp store count     : 1463438

<loop unroll>
 loop unroll branch : 581115
 loop induction val : 704386
 (loop const val    : 2123070 )
#fbb: 4/7 -> bedge, header, ave: 25682, 4386, 6.85545
#fbb: 6/5 -> bedge, header, ave: 21458, 4386, 5.89238
#fbb: 13/1 -> bedge, header, ave: 97439, 13165, 8.40137
#fbb: 13/228 -> bedge, header, ave: 0, 2027, 1
#fbb: 13/294 -> bedge, header, ave: 30074, 25013, 2.20233
#fbb: 13/425 -> bedge, header, ave: 0, 2772, 1
#fbb: 29/4 -> bedge, header, ave: 23, 11, 3.09091
#fbb: 36/36 -> bedge, header, ave: 0, 2, 1
#fbb: 37/23 -> bedge, header, ave: 0, 33, 1
#fbb: 45/8 -> bedge, header, ave: 11, 4, 3.75
#fbb: 45/40 -> bedge, header, ave: 0, 1, 1
#fbb: 45/61 -> bedge, header, ave: 8, 4, 3
#fbb: 47/4 -> bedge, header, ave: 0, 1, 1
#fbb: 50/2 -> bedge, header, ave: 26, 9, 3.88889
#fbb: 51/2 -> bedge, header, ave: 44, 64, 1.6875
#fbb: 55/45 -> bedge, header, ave: 48, 69, 1.69565
#fbb: 57/21 -> bedge, header, ave: 3, 4, 1.75
#fbb: 63/9 -> bedge, header, ave: 1, 5, 1.2
#fbb: 63/15 -> bedge, header, ave: 1, 1, 2
#fbb: 75/3 -> bedge, header, ave: 4, 13, 1.30769
#fbb: 79/27 -> bedge, header, ave: 6222, 1614, 4.85502
#fbb: 85/42 -> bedge, header, ave: 0, 4388, 1
#fbb: 86/2 -> bedge, header, ave: 25682, 4392, 6.84745
#fbb: 86/7 -> bedge, header, ave: 8772, 8796, 1.99727
#fbb: 86/17 -> bedge, header, ave: 21318, 4393, 5.85272
#fbb: 95/3 -> bedge, header, ave: 0, 2, 1
#fbb: 96/7 -> bedge, header, ave: 0, 2, 1
#fbb: 119/134 -> bedge, header, ave: 0, 6, 1
#fbb: 127/7 -> bedge, header, ave: 0, 1, 1
#fbb: 131/10 -> bedge, header, ave: 0, 6, 1
#fbb: 135/16 -> bedge, header, ave: 1, 6, 1.16667
#fbb: 137/190 -> bedge, header, ave: 0, 1, 1
#fbb: 137/192 -> bedge, header, ave: 0, 1, 1
#fbb: 137/1185 -> bedge, header, ave: 0, 1614, 1
#fbb: 142/19 -> bedge, header, ave: 0, 1, 1
#fbb: 142/292 -> bedge, header, ave: 0, 1, 1
#fbb: 145/3 -> bedge, header, ave: 0, 1, 1
#fbb: 151/22 -> bedge, header, ave: 3, 2, 2.5
#fbb: 151/34 -> bedge, header, ave: 0, 2, 1
#fbb: 151/61 -> bedge, header, ave: 2, 2, 2
#fbb: 152/27 -> bedge, header, ave: 4, 6, 1.66667
#fbb: 153/4 -> bedge, header, ave: 2, 6, 1.33333
#fbb: 156/5 -> bedge, header, ave: 124, 4, 32
#fbb: 156/94 -> bedge, header, ave: 100, 4, 26
#fbb: 160/3 -> bedge, header, ave: 34, 1, 35
#fbb: 160/5 -> bedge, header, ave: 0, 1, 1
#fbb: 161/2 -> bedge, header, ave: 1, 4, 1.25
#fbb: 162/5 -> bedge, header, ave: 2, 3, 1.66667
#fbb: 165/96 -> bedge, header, ave: 16758, 2025, 9.27556
#fbb: 166/2 -> bedge, header, ave: 6, 6, 2
#fbb: 167/2 -> bedge, header, ave: 14, 25, 1.56
#fbb: 168/15 -> bedge, header, ave: 28, 6, 5.66667
#fbb: 178/25 -> bedge, header, ave: 261, 120, 3.175
#fbb: 196/16 -> bedge, header, ave: 86, 10, 9.6
#fbb: 205/11 -> bedge, header, ave: 0, 2100, 1
#fbb: 205/12 -> bedge, header, ave: 19832, 2100, 10.4438
#fbb: 207/37 -> bedge, header, ave: 7, 1, 8
#fbb: 207/265 -> bedge, header, ave: 2, 1, 3
#fbb: 221/1 -> bedge, header, ave: 0, 256, 1
#fbb: 221/2 -> bedge, header, ave: 267, 256, 2.04297
#fbb: 221/43 -> bedge, header, ave: 0, 73, 1
#fbb: 221/115 -> bedge, header, ave: 0, 1, 1
#fbb: 221/258 -> bedge, header, ave: 0, 4, 1
#fbb: 221/319 -> bedge, header, ave: 1, 1, 2
#fbb: 221/562 -> bedge, header, ave: 1, 1, 2
#fbb: 221/606 -> bedge, header, ave: 1, 1, 2
#fbb: 221/677 -> bedge, header, ave: 1, 2, 1.5
#fbb: 221/1084 -> bedge, header, ave: 1, 1, 2
#fbb: 221/1355 -> bedge, header, ave: 1, 1, 2
#fbb: 221/1365 -> bedge, header, ave: 3, 1, 4
#fbb: 221/1394 -> bedge, header, ave: 0, 1, 1
#fbb: 221/1440 -> bedge, header, ave: 3, 3, 2
#fbb: 221/1451 -> bedge, header, ave: 18, 3, 7
#fbb: 221/1707 -> bedge, header, ave: 2, 2, 2
#fbb: 222/16 -> bedge, header, ave: 2, 2, 2
#fbb: 222/22 -> bedge, header, ave: 0, 2, 1
#fbb: 222/29 -> bedge, header, ave: 2, 1, 3
#fbb: 222/34 -> bedge, header, ave: 0, 1, 1
#fbb: 223/6 -> bedge, header, ave: 143, 52, 3.75
#fbb: 223/12 -> bedge, header, ave: 0, 42, 1
#fbb: 224/12 -> bedge, header, ave: 0, 2, 1
#fbb: 225/32 -> bedge, header, ave: 12, 2, 7
#fbb: 229/12 -> bedge, header, ave: 3, 3, 2
#fbb: 229/26 -> bedge, header, ave: 0, 2, 1
#fbb: 229/94 -> bedge, header, ave: 3, 1, 4
#fbb: 229/184 -> bedge, header, ave: 57, 2, 29.5
#fbb: 229/244 -> bedge, header, ave: 13, 3, 5.33333
#fbb: 235/2 -> bedge, header, ave: 4, 2, 3
#fbb: 237/5 -> bedge, header, ave: 14, 2, 8
#fbb: 255/5 -> bedge, header, ave: 84, 28, 4
#fbb: 260/10 -> bedge, header, ave: 24595, 3634, 7.76802
#fbb: 260/12 -> bedge, header, ave: 1632, 2452, 1.66558
#fbb: 261/15 -> bedge, header, ave: 1002, 1379, 1.72661
#fbb: 263/6 -> bedge, header, ave: 2032, 8, 255
#fbb: 263/8 -> bedge, header, ave: 1662, 1630, 2.01963
#fbb: 268/3 -> bedge, header, ave: 1, 5, 1.2
#fbb: 271/5 -> bedge, header, ave: 86, 13, 7.61538
#fbb: 274/1 -> bedge, header, ave: 431, 2, 216.5
#fbb: 274/2 -> bedge, header, ave: 325, 433, 1.75058
#fbb: 274/7 -> bedge, header, ave: 0, 758, 1
#fbb: 274/24 -> bedge, header, ave: 122, 12, 11.1667
#fbb: 274/28 -> bedge, header, ave: 0, 14, 1
====
 dynamic loop num   : 8.46194 (sum_ave/num: 863.118/102)
 loop num (weighted): 4.23705
max loop ave: 255
====
#fbb: 280/2 -> bedge, header, ave: 0, 1, 1
#fbb: 280/4 -> bedge, header, ave: 0, 1, 1
#fbb: 282/10 -> bedge, header, ave: 54919, 71069, 1.77276
#fbb: 283/5 -> bedge, header, ave: 672, 15629, 1.043
#fbb: 283/7 -> bedge, header, ave: 18329, 4640, 4.95022
#fbb: 283/10 -> bedge, header, ave: 11760, 3920, 4
#fbb: 284/9 -> bedge, header, ave: 17107, 2443, 8.00246
#fbb: 285/0 -> bedge, header, ave: 8302, 1711, 5.85213
#fbb: 287/69 -> bedge, header, ave: 152, 17896, 1.00849
#fbb: 289/1 -> bedge, header, ave: 3, 3, 2
#fbb: 289/4 -> bedge, header, ave: 43, 28, 2.53571
#fbb: 291/2 -> bedge, header, ave: 0, 44, 1
#fbb: 303/1 -> bedge, header, ave: 11, 13, 1.84615
#fbb: 303/5 -> bedge, header, ave: 75, 38, 2.97368
#fbb: 305/1 -> bedge, header, ave: 98, 13, 8.53846
#fbb: 308/3 -> bedge, header, ave: 3, 1, 4
#fbb: 313/12 -> bedge, header, ave: 0, 3, 1
#fbb: 323/25 -> bedge, header, ave: 8, 11, 1.72727
#fbb: 324/18 -> bedge, header, ave: 0, 1, 1
#fbb: 325/16 -> bedge, header, ave: 0, 3, 1
#fbb: 330/48 -> bedge, header, ave: 0, 1, 1
#fbb: 330/49 -> bedge, header, ave: 0, 1, 1
#fbb: 330/53 -> bedge, header, ave: 12, 1, 13
#fbb: 351/6 -> bedge, header, ave: 40, 1, 41
#fbb: 353/12 -> bedge, header, ave: 2, 2, 2
#fbb: 357/2 -> bedge, header, ave: 0, 1, 1
#fbb: 361/10 -> bedge, header, ave: 153076, 65961, 3.3207
#fbb: 361/23 -> bedge, header, ave: 9606, 60, 161.1
#fbb: 361/31 -> bedge, header, ave: 2, 61, 1.03279
#fbb: 363/8 -> bedge, header, ave: 0, 8, 1
#fbb: 363/25 -> bedge, header, ave: 256, 3, 86.3333
#fbb: 365/4 -> bedge, header, ave: 7, 1, 8
#fbb: 367/1 -> bedge, header, ave: 0, 1, 1
#fbb: 387/1 -> bedge, header, ave: 0, 1, 1
#fbb: 393/37 -> bedge, header, ave: 6, 3, 3
#fbb: 393/72 -> bedge, header, ave: 0, 2, 1
#fbb: 393/81 -> bedge, header, ave: 2, 2, 2
#fbb: 393/132 -> bedge, header, ave: 2, 2, 2
#fbb: 393/143 -> bedge, header, ave: 0, 1, 1
#fbb: 393/203 -> bedge, header, ave: 2, 3, 1.66667
#fbb: 393/263 -> bedge, header, ave: 11, 2, 6.5
#fbb: 397/2 -> bedge, header, ave: 2, 3, 1.66667
 dynamic loop num   : 8.74992 (sum_ave/num: 1259.99/144)
 loop num (weighted): 3.08804

instance count      : 73220882
clock cycle         : 15078786
<branch predict>
branch prediction : 89.6887 (8930556/9957283)
ipc (instance/clock): 4.85589

# Bb_Statistic::print() statistic
return 0
