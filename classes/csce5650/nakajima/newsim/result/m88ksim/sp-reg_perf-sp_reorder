/home/palmerc/Development/nakajima/newsim/src/newsim -dir /home/palmerc/Development/nakajima/newsim/data/m88ksim -sim_type sp -sp_reorder -statistic -updrive /bin/sh -c 'cat ctl.in | /home/palmerc/Development/nakajima/newsim/SS/sim-bpred -redir:prog /home/palmerc/Development/nakajima/newsim/log/m88ksim/prog -redir:sim /home/palmerc/Development/nakajima/newsim/log/m88ksim/sim /home/palmerc/Development/nakajima/newsim/ss_precompiled_spec/m88ksim.ss'

# set dir: /home/palmerc/Development/nakajima/newsim/data/m88ksim/

$ ------Sim_Model::print_argment()-----
$ <04/02/12 16:08:12>	 ADD: MD predict, FIXED: setjmp/longjmp, unroll
$            FIX: 
$ NO REEXEC MODE
$ trace limit: 100000000
$ print freq: 1000000
$ func_call_inline
$ loop unroll
$ perfect disambiguate (SP_REG, GP_REG)
$ 2lev brn_pred
$ simulation type: sp
$ print statistic
$ SP reorder
$ reg perfect
$ -------------------------------------

# Program_Info::file_read() init end
$ Branch_Predict::allocate() pa_i:15, pa_j:15, pa_k:2
# Brnach_Predict::allocate() allocate BHT PHT end
# Loop::allocate_loop_c() init end
# Loop::file_read() init end

@ TC 1000000 cycle: 130172 ipc: 6.7077
@ TC 2000000 cycle: 267440 ipc: 6.58348
@ TC 3000000 cycle: 297775 ipc: 8.3215
@ TC 4000000 cycle: 359986 ipc: 9.01061
@ TC 5000000 cycle: 496744 ipc: 8.32262
@ TC 6000000 cycle: 633508 ipc: 7.93159
@ TC 7000000 cycle: 770266 ipc: 7.67948
@ TC 8000000 cycle: 907024 ipc: 7.5034
@ TC 9000000 cycle: 1043788 ipc: 7.37341
@ TC 10000000 cycle: 1180546 ipc: 7.27358
@ TC 11000000 cycle: 1317310 ipc: 7.19444
@ TC 12000000 cycle: 1454068 ipc: 7.13022
@ TC 13000000 cycle: 1590826 ipc: 7.07704
@ TC 14000000 cycle: 1727596 ipc: 7.03223
@ TC 15000000 cycle: 1864353 ipc: 6.99405
@ TC 16000000 cycle: 2001110 ipc: 6.96108
@ TC 17000000 cycle: 2137881 ipc: 6.93229
@ TC 18000000 cycle: 2274638 ipc: 6.907
@ TC 19000000 cycle: 2411395 ipc: 6.88458
@ TC 20000000 cycle: 2548164 ipc: 6.86453
@ TC 21000000 cycle: 2684921 ipc: 6.84656
@ TC 22000000 cycle: 2821688 ipc: 6.83031
@ TC 23000000 cycle: 2958446 ipc: 6.81558
@ TC 24000000 cycle: 3095204 ipc: 6.80215
@ TC 25000000 cycle: 3231971 ipc: 6.78983
@ TC 26000000 cycle: 3368727 ipc: 6.77854
@ TC 27000000 cycle: 3505485 ipc: 6.76813
@ TC 28000000 cycle: 3642252 ipc: 6.75848
@ TC 29000000 cycle: 3779010 ipc: 6.74955
@ TC 30000000 cycle: 3915768 ipc: 6.74124
@ TC 31000000 cycle: 4052532 ipc: 6.73348
@ TC 32000000 cycle: 4189290 ipc: 6.72624
@ TC 33000000 cycle: 4326045 ipc: 6.71946
@ TC 34000000 cycle: 4462812 ipc: 6.71308
@ TC 35000000 cycle: 4599570 ipc: 6.70709
@ TC 36000000 cycle: 4736334 ipc: 6.70143
@ TC 37000000 cycle: 4873092 ipc: 6.69611
@ TC 38000000 cycle: 5009850 ipc: 6.69107
@ TC 39000000 cycle: 5146614 ipc: 6.68629
@ TC 40000000 cycle: 5283372 ipc: 6.68177
@ TC 41000000 cycle: 5420130 ipc: 6.67748
@ TC 42000000 cycle: 5556894 ipc: 6.67339
@ TC 43000000 cycle: 5693652 ipc: 6.66951
@ TC 44000000 cycle: 5830410 ipc: 6.6658
@ TC 45000000 cycle: 5967174 ipc: 6.66226
@ TC 46000000 cycle: 6103932 ipc: 6.65889
@ TC 47000000 cycle: 6238081 ipc: 6.65779
@ TC 48000000 cycle: 6336423 ipc: 6.68529
@ TC 49000000 cycle: 6459414 ipc: 6.6856
@ TC 50000000 cycle: 6582450 ipc: 6.68589
@ TC 51000000 cycle: 6705534 ipc: 6.68611
@ TC 52000000 cycle: 6828435 ipc: 6.68647
@ TC 53000000 cycle: 6953385 ipc: 6.68502
@ TC 54000000 cycle: 7076142 ipc: 6.68552
@ TC 55000000 cycle: 7198726 ipc: 6.68614
@ TC 56000000 cycle: 7324498 ipc: 6.68409
@ TC 57000000 cycle: 7447124 ipc: 6.68468
@ TC 58000000 cycle: 7569842 ipc: 6.68518
@ TC 59000000 cycle: 7694927 ipc: 6.68377
@ TC 60000000 cycle: 7817410 ipc: 6.68447
@ TC 61000000 cycle: 7940781 ipc: 6.68445
@ TC 62000000 cycle: 8064107 ipc: 6.68446
@ TC 63000000 cycle: 8186977 ipc: 6.68482
@ TC 64000000 cycle: 8311685 ipc: 6.68381
@ TC 65000000 cycle: 8434503 ipc: 6.6842
@ TC 66000000 cycle: 8557235 ipc: 6.68463
@ TC 67000000 cycle: 8682875 ipc: 6.68301
@ TC 68000000 cycle: 8805569 ipc: 6.68348
@ TC 69000000 cycle: 8925840 ipc: 6.6856
@ TC 70000000 cycle: 9048266 ipc: 6.68621
@ TC 71000000 cycle: 9172244 ipc: 6.68577
@ TC 72000000 cycle: 9295278 ipc: 6.68594
@ TC 73000000 cycle: 9419228 ipc: 6.68554
@ TC 74000000 cycle: 9542003 ipc: 6.68589
@ TC 75000000 cycle: 9664730 ipc: 6.68626
@ TC 76000000 cycle: 9790331 ipc: 6.68482
@ TC 77000000 cycle: 9912966 ipc: 6.68526
@ TC 78000000 cycle: 10035670 ipc: 6.68564
@ TC 79000000 cycle: 10161330 ipc: 6.68423
@ TC 80000000 cycle: 10283386 ipc: 6.685
@ TC 81000000 cycle: 10406562 ipc: 6.6851
@ TC 82000000 cycle: 10530596 ipc: 6.68469
@ TC 83000000 cycle: 10652554 ipc: 6.68549
@ TC 84000000 cycle: 10777444 ipc: 6.6846
@ TC 85000000 cycle: 10900136 ipc: 6.68497
@ TC 86000000 cycle: 11022759 ipc: 6.68536
@ TC 87000000 cycle: 11148465 ipc: 6.68405
@ TC 88000000 cycle: 11271256 ipc: 6.68435
@ TC 89000000 cycle: 11393915 ipc: 6.68473
@ TC 90000000 cycle: 11518878 ipc: 6.68386
@ TC 91000000 cycle: 11641843 ipc: 6.68406
@ TC 92000000 cycle: 11764869 ipc: 6.68424
@ TC 93000000 cycle: 11887970 ipc: 6.68437
@ TC 94000000 cycle: 12010922 ipc: 6.68457
@ TC 95000000 cycle: 12135582 ipc: 6.68391
@ TC 96000000 cycle: 12258282 ipc: 6.68424
@ TC 97000000 cycle: 12380836 ipc: 6.68463
@ TC 98000000 cycle: 12506500 ipc: 6.68349
@ TC 99000000 cycle: 12629142 ipc: 6.68385
@ TC 100000000 cycle: 12751780 ipc: 6.6842
# Re_Exec::check_mode() trace lim :100000000

# print_result_data()
trace count         : 100000000
 nop count          : 91
 call/return count  : 4771409
 con branch count   : 13943090
 other branch count : 1045804
 load count         : 18350711
 store count        : 11143592
 other count        : 50745303
inst (trace - nop)  : 99999909

<func inline>
 inline call count  : 2385707
 inline return count: 2385702
 inline other count : 1258170

<perfect memory disambiguate (SP_REG, GP_REG)>
 sp load count      : 2505864
 sp store count     : 2538526
 gp load count      : 2373318
 gp store count     : 270533

<loop unroll>
 loop unroll branch : 3670035
 loop induction val : 5064906
 (loop const val    : 5226047 )
#fbb: 3/2 -> bedge, header, ave: 1, 1, 2
#fbb: 3/5 -> bedge, header, ave: 1034242, 1010, 1025
#fbb: 32/2 -> bedge, header, ave: 648060, 43204, 16
#fbb: 33/1 -> bedge, header, ave: 15, 1, 16
#fbb: 40/4 -> bedge, header, ave: 0, 6, 1
#fbb: 41/1 -> bedge, header, ave: 114, 6, 20
#fbb: 42/1 -> bedge, header, ave: 5, 6, 1.83333
#fbb: 43/1 -> bedge, header, ave: 56, 6, 10.3333
#fbb: 72/2 -> bedge, header, ave: 7, 1, 8
#fbb: 72/4 -> bedge, header, ave: 7, 1, 8
#fbb: 72/6 -> bedge, header, ave: 9, 1, 10
#fbb: 72/9 -> bedge, header, ave: 55, 1, 56
#fbb: 73/1 -> bedge, header, ave: 510, 2, 256
#fbb: 73/2 -> bedge, header, ave: 1536, 512, 4
#fbb: 73/5 -> bedge, header, ave: 510, 2, 256
#fbb: 79/17 -> bedge, header, ave: 1, 2, 1.5
#fbb: 83/1 -> bedge, header, ave: 63, 1, 64
#fbb: 83/3 -> bedge, header, ave: 1070, 64, 17.7188
#fbb: 83/7 -> bedge, header, ave: 63, 1, 64
#fbb: 83/9 -> bedge, header, ave: 585, 64, 10.1406
#fbb: 145/5 -> bedge, header, ave: 31989, 1, 31990
#fbb: 159/36 -> bedge, header, ave: 0, 3581, 1
#fbb: 161/1 -> bedge, header, ave: 18838, 44425, 1.42404
#fbb: 164/14 -> bedge, header, ave: 10, 6, 2.66667
#fbb: 165/1 -> bedge, header, ave: 19, 1, 20
#fbb: 171/42 -> bedge, header, ave: 2, 1, 3
#fbb: 171/43 -> bedge, header, ave: 1, 2, 1.5
#fbb: 171/50 -> bedge, header, ave: 2, 1, 3
#fbb: 171/76 -> bedge, header, ave: 1023, 1, 1024
#fbb: 171/84 -> bedge, header, ave: 1206, 3, 403
#fbb: 174/11 -> bedge, header, ave: 0, 1209, 1
#fbb: 175/2 -> bedge, header, ave: 0, 1, 1
#fbb: 175/50 -> bedge, header, ave: 5, 1, 6
#fbb: 181/1 -> bedge, header, ave: 3542, 506, 8
#fbb: 181/3 -> bedge, header, ave: 1518, 506, 4
#fbb: 181/4 -> bedge, header, ave: 6072, 2024, 4
#fbb: 181/7 -> bedge, header, ave: 2530, 506, 6
#fbb: 183/4 -> bedge, header, ave: 0, 1, 1
#fbb: 221/3 -> bedge, header, ave: 27473, 31990, 1.8588
#fbb: 223/1 -> bedge, header, ave: 991659, 31989, 32
#fbb: 223/11 -> bedge, header, ave: 127956, 31989, 5
#fbb: 230/12 -> bedge, header, ave: 414, 2, 208
#fbb: 231/12 -> bedge, header, ave: 460, 1, 461
#fbb: 231/23 -> bedge, header, ave: 207, 1, 208
#fbb: 231/24 -> bedge, header, ave: 21528, 208, 104.5
#fbb: 232/0 -> bedge, header, ave: 2068, 208, 10.9423
#fbb: 235/1 -> bedge, header, ave: 122, 2, 62
#fbb: 236/0 -> bedge, header, ave: 0, 1, 1
#fbb: 247/1 -> bedge, header, ave: 618254, 312974, 2.97542
#fbb: 248/1 -> bedge, header, ave: 78, 1, 79
#fbb: 248/4 -> bedge, header, ave: 193, 1, 194
====
 dynamic loop num   : 719.576 (sum_ave/num: 36698.4/51)
 loop num (weighted): 7.98981
max loop ave: 31990
====
#fbb: 259/0 -> bedge, header, ave: 188, 483, 1.38923
#fbb: 260/1 -> bedge, header, ave: 85, 67, 2.26866
#fbb: 260/5 -> bedge, header, ave: 114, 49, 3.32653
#fbb: 264/25 -> bedge, header, ave: 82, 82, 2
#fbb: 265/18 -> bedge, header, ave: 0, 1, 1
#fbb: 266/16 -> bedge, header, ave: 0, 1, 1
#fbb: 266/27 -> bedge, header, ave: 178, 64, 3.78125
#fbb: 276/5 -> bedge, header, ave: 0, 2, 1
#fbb: 276/8 -> bedge, header, ave: 2, 3, 1.66667
#fbb: 276/25 -> bedge, header, ave: 14, 1, 15
#fbb: 278/12 -> bedge, header, ave: 1, 1, 2
#fbb: 280/1 -> bedge, header, ave: 84, 8, 11.5
#fbb: 281/17 -> bedge, header, ave: 17, 59, 1.28814
#fbb: 281/25 -> bedge, header, ave: 21, 2, 11.5
#fbb: 285/10 -> bedge, header, ave: 13, 3, 5.33333
#fbb: 285/23 -> bedge, header, ave: 298, 3, 100.333
#fbb: 285/31 -> bedge, header, ave: 7, 9, 1.77778
#fbb: 287/4 -> bedge, header, ave: 6, 4, 2.5
#fbb: 294/13 -> bedge, header, ave: 45, 5, 10
#fbb: 294/39 -> bedge, header, ave: 12, 1, 13
#fbb: 295/2 -> bedge, header, ave: 0, 41, 1
#fbb: 296/48 -> bedge, header, ave: 0, 8, 1
#fbb: 296/49 -> bedge, header, ave: 0, 8, 1
#fbb: 302/37 -> bedge, header, ave: 183, 31, 6.90323
#fbb: 302/72 -> bedge, header, ave: 0, 10, 1
#fbb: 302/81 -> bedge, header, ave: 3, 3, 2
#fbb: 302/132 -> bedge, header, ave: 47, 10, 5.7
#fbb: 302/196 -> bedge, header, ave: 15, 8, 2.875
#fbb: 302/203 -> bedge, header, ave: 47, 10, 5.7
#fbb: 302/263 -> bedge, header, ave: 11, 3, 4.66667
#fbb: 305/1 -> bedge, header, ave: 0, 1, 1
#fbb: 316/5 -> bedge, header, ave: 124358, 9, 13818.6
#fbb: 316/7 -> bedge, header, ave: 27, 7, 4.85714
#fbb: 316/10 -> bedge, header, ave: 3, 2, 2.5
#fbb: 322/2 -> bedge, header, ave: 38, 21, 2.80952
#fbb: 322/9 -> bedge, header, ave: 9, 8, 2.125
#fbb: 325/2 -> bedge, header, ave: 2, 1, 3
#fbb: 327/6 -> bedge, header, ave: 40, 1, 41
#fbb: 341/4 -> bedge, header, ave: 7, 1, 8
 dynamic loop num   : 564.508 (sum_ave/num: 50805.8/90)
 loop num (weighted): 8.22354

instance count      : 85235389
clock cycle         : 12751780
<branch predict>
branch prediction : 93.2945 (9584317/10273189)
ipc (instance/clock): 6.6842

# Bb_Statistic::print() statistic
return 0
