/home/palmerc/Development/nakajima/newsim/src/newsim -dir /home/palmerc/Development/nakajima/newsim/data/li -sim_type oracle -sp_sequential -statistic -updrive /bin/sh -c '/home/palmerc/Development/nakajima/newsim/SS/sim-bpred -redir:prog /home/palmerc/Development/nakajima/newsim/log/li/prog -redir:sim /home/palmerc/Development/nakajima/newsim/log/li/sim /home/palmerc/Development/nakajima/newsim/ss_precompiled_spec/li.ss train.lsp'

# set dir: /home/palmerc/Development/nakajima/newsim/data/li/

$ ------Sim_Model::print_argment()-----
$ <04/02/12 16:08:12>	 ADD: MD predict, FIXED: setjmp/longjmp, unroll
$            FIX: 
$ NO REEXEC MODE
$ trace limit: 100000000
$ print freq: 1000000
$ func_call_inline
$ loop unroll
$ perfect disambiguate (SP_REG, GP_REG)
$ 2lev brn_pred
$ simulation type: oracle
$ print statistic
$ SP sequential
$ reg perfect
$ -------------------------------------

# Program_Info::file_read() init end
# Loop::allocate_loop_c() init end
# Loop::file_read() init end

@ TC 1000000 cycle: 168709 ipc: 4.87
@ TC 2000000 cycle: 322917 ipc: 5.11331
@ TC 3000000 cycle: 489745 ipc: 5.06595
@ TC 4000000 cycle: 686123 ipc: 4.83442
@ TC 5000000 cycle: 849536 ipc: 4.89017
@ TC 6000000 cycle: 1024768 ipc: 4.885
@ TC 7000000 cycle: 1206246 ipc: 4.85563
@ TC 8000000 cycle: 1405016 ipc: 4.7728
@ TC 9000000 cycle: 1544003 ipc: 4.89099
@ TC 10000000 cycle: 1719520 ipc: 4.8848
@ TC 11000000 cycle: 1899621 ipc: 4.86751
@ TC 12000000 cycle: 2079482 ipc: 4.85402
@ TC 13000000 cycle: 2251823 ipc: 4.86259
@ TC 14000000 cycle: 2399412 ipc: 4.92064
@ TC 15000000 cycle: 2540816 ipc: 4.98055
@ TC 16000000 cycle: 2702380 ipc: 4.99644
@ TC 17000000 cycle: 2883274 ipc: 4.97661
@ TC 18000000 cycle: 3063615 ipc: 4.96014
@ TC 19000000 cycle: 3243625 ipc: 4.94627
@ TC 20000000 cycle: 3408062 ipc: 4.96089
@ TC 21000000 cycle: 3559101 ipc: 4.98911
@ TC 22000000 cycle: 3704203 ipc: 5.02272
@ TC 23000000 cycle: 3869412 ipc: 5.02731
@ TC 24000000 cycle: 4050419 ipc: 5.01182
@ TC 25000000 cycle: 4231647 ipc: 4.99745
@ TC 26000000 cycle: 4413126 ipc: 4.98407
@ TC 27000000 cycle: 4576413 ipc: 4.99487
@ TC 28000000 cycle: 4734681 ipc: 5.00724
@ TC 29000000 cycle: 4891519 ipc: 5.01997
@ TC 30000000 cycle: 5052690 ipc: 5.02754
@ TC 31000000 cycle: 5228668 ipc: 5.0205
@ TC 32000000 cycle: 5411101 ipc: 5.00785
@ TC 33000000 cycle: 5593868 ipc: 4.99569
@ TC 34000000 cycle: 5777785 ipc: 4.98338
@ TC 35000000 cycle: 5956281 ipc: 4.97739
@ TC 36000000 cycle: 6123799 ipc: 4.98111
@ TC 37000000 cycle: 6296914 ipc: 4.97882
@ TC 38000000 cycle: 6463275 ipc: 4.98174
@ TC 39000000 cycle: 6631609 ipc: 4.98304
@ TC 40000000 cycle: 6806841 ipc: 4.97918
@ TC 41000000 cycle: 6978333 ipc: 4.97822
@ TC 42000000 cycle: 7161621 ipc: 4.96906
@ TC 43000000 cycle: 7347359 ipc: 4.95874
@ TC 44000000 cycle: 7529850 ipc: 4.95114
@ TC 45000000 cycle: 7712523 ipc: 4.94375
@ TC 46000000 cycle: 7895423 ipc: 4.93657
@ TC 47000000 cycle: 8068217 ipc: 4.93739
@ TC 48000000 cycle: 8235632 ipc: 4.94061
@ TC 49000000 cycle: 8389092 ipc: 4.95135
@ TC 50000000 cycle: 8547270 ipc: 4.95894
@ TC 51000000 cycle: 8713595 ipc: 4.96149
@ TC 52000000 cycle: 8898458 ipc: 4.9536
@ TC 53000000 cycle: 9083875 ipc: 4.94571
@ TC 54000000 cycle: 9269622 ipc: 4.93798
@ TC 55000000 cycle: 9455640 ipc: 4.93048
@ TC 56000000 cycle: 9641669 ipc: 4.92315
@ TC 57000000 cycle: 9828708 ipc: 4.91566
@ TC 58000000 cycle: 10011231 ipc: 4.91125
@ TC 59000000 cycle: 10189569 ipc: 4.9094
@ TC 60000000 cycle: 10372557 ipc: 4.90454
@ TC 61000000 cycle: 10559450 ipc: 4.89789
@ TC 62000000 cycle: 10746544 ipc: 4.89148
@ TC 63000000 cycle: 10932818 ipc: 4.88558
@ TC 64000000 cycle: 11115305 ipc: 4.88163
@ TC 65000000 cycle: 11303536 ipc: 4.87529
@ TC 66000000 cycle: 11493121 ipc: 4.86847
@ TC 67000000 cycle: 11681980 ipc: 4.86226
@ TC 68000000 cycle: 11871698 ipc: 4.85586
@ TC 69000000 cycle: 12063212 ipc: 4.84891
@ TC 70000000 cycle: 12255772 ipc: 4.84173
@ TC 71000000 cycle: 12449683 ipc: 4.8343
@ TC 72000000 cycle: 12645243 ipc: 4.82649
@ TC 73000000 cycle: 12848350 ipc: 4.816
@ TC 74000000 cycle: 13052232 ipc: 4.80475
@ TC 75000000 cycle: 13253558 ipc: 4.79486
@ TC 76000000 cycle: 13391634 ipc: 4.81006
@ TC 77000000 cycle: 13535160 ipc: 4.82155
@ TC 78000000 cycle: 13733173 ipc: 4.81356
@ TC 79000000 cycle: 13931735 ipc: 4.80557
@ TC 80000000 cycle: 14087459 ipc: 4.81383
@ TC 81000000 cycle: 14232036 ipc: 4.82438
@ TC 82000000 cycle: 14415895 ipc: 4.82145
@ TC 83000000 cycle: 14616060 ipc: 4.81321
@ TC 84000000 cycle: 14808616 ipc: 4.8083
@ TC 85000000 cycle: 14966994 ipc: 4.81461
@ TC 86000000 cycle: 15122013 ipc: 4.82116
@ TC 87000000 cycle: 15305897 ipc: 4.81835
@ TC 88000000 cycle: 15509262 ipc: 4.80963
@ TC 89000000 cycle: 15713245 ipc: 4.80085
@ TC 90000000 cycle: 15899460 ipc: 4.7989
@ TC 91000000 cycle: 16075210 ipc: 4.79904
@ TC 92000000 cycle: 16254097 ipc: 4.79816
@ TC 93000000 cycle: 16432643 ipc: 4.79738
@ TC 94000000 cycle: 16622026 ipc: 4.79347
@ TC 95000000 cycle: 16827335 ipc: 4.78513
@ TC 96000000 cycle: 17033513 ipc: 4.77673
@ TC 97000000 cycle: 17240884 ipc: 4.76816
@ TC 98000000 cycle: 17430415 ipc: 4.76579
@ TC 99000000 cycle: 17620622 ipc: 4.76228
@ TC 100000000 cycle: 17808552 ipc: 4.75952
# Re_Exec::check_mode() trace lim :100000000

# print_result_data()
trace count         : 100000000
 nop count          : 9
 call/return count  : 5725134
 con branch count   : 13289051
 other branch count : 3779855
 load count         : 26076307
 store count        : 16689309
 other count        : 34440335
inst (trace - nop)  : 99999991

<func inline>
 inline call count  : 2862847
 inline return count: 2862287
 inline other count : 5132729

<perfect memory disambiguate (SP_REG, GP_REG)>
 sp load count      : 8426539
 sp store count     : 9406126
 gp load count      : 4090753
 gp store count     : 1807568

<loop unroll>
 loop unroll branch : 2360315
 loop induction val : 2021696
 (loop const val    : 661334 )
#fbb: 10/2 -> bedge, header, ave: 0, 2294, 1
#fbb: 11/3 -> bedge, header, ave: 0, 106, 1
#fbb: 29/2 -> bedge, header, ave: 13239, 12370, 2.07025
#fbb: 29/6 -> bedge, header, ave: 639, 12369, 1.05166
#fbb: 32/2 -> bedge, header, ave: 212, 106, 3
#fbb: 46/2 -> bedge, header, ave: 1071, 1071, 2
#fbb: 61/3 -> bedge, header, ave: 1, 1, 2
#fbb: 63/9 -> bedge, header, ave: 2, 1, 3
#fbb: 93/3 -> bedge, header, ave: 32452, 92, 353.739
#fbb: 94/2 -> bedge, header, ave: 709196, 51873, 14.6718
#fbb: 94/9 -> bedge, header, ave: 446226, 314823, 2.41739
#fbb: 96/2 -> bedge, header, ave: 540, 91, 6.93407
#fbb: 96/4 -> bedge, header, ave: 630369, 631, 1000
#fbb: 97/5 -> bedge, header, ave: 7992, 8, 1000
#fbb: 98/3 -> bedge, header, ave: 42362, 366, 116.743
#fbb: 107/3 -> bedge, header, ave: 16624, 54320, 1.30604
#fbb: 109/10 -> bedge, header, ave: 1310, 13082, 1.10014
#fbb: 110/3 -> bedge, header, ave: 8014, 11779, 1.68036
#fbb: 112/2 -> bedge, header, ave: 178545, 222039, 1.80412
#fbb: 130/6 -> bedge, header, ave: 172, 1, 173
#fbb: 135/18 -> bedge, header, ave: 0, 1, 1
#fbb: 179/5 -> bedge, header, ave: 1457, 21144, 1.06891
#fbb: 186/7 -> bedge, header, ave: 292, 240, 2.21667
#fbb: 268/1 -> bedge, header, ave: 4, 5, 1.8
#fbb: 280/10 -> bedge, header, ave: 50, 33, 2.51515
#fbb: 282/1 -> bedge, header, ave: 129, 52, 3.48077
#fbb: 288/17 -> bedge, header, ave: 44, 1, 45
#fbb: 289/2 -> bedge, header, ave: 113, 45, 3.51111
#fbb: 293/4 -> bedge, header, ave: 34, 1, 35
#fbb: 298/4 -> bedge, header, ave: 522, 21, 25.8571
#fbb: 300/2 -> bedge, header, ave: 2905, 1075, 3.70233
#fbb: 302/4 -> bedge, header, ave: 0, 34, 1
#fbb: 303/1 -> bedge, header, ave: 5145, 1874, 3.74546
#fbb: 305/1 -> bedge, header, ave: 4841, 3980, 2.21633
#fbb: 308/4 -> bedge, header, ave: 0, 29, 1
#fbb: 311/2 -> bedge, header, ave: 9, 2, 5.5
#fbb: 312/3 -> bedge, header, ave: 4, 1, 5
#fbb: 312/6 -> bedge, header, ave: 31, 1, 32
#fbb: 312/9 -> bedge, header, ave: 51, 1, 52
#fbb: 328/6 -> bedge, header, ave: 891, 1796, 1.4961
#fbb: 329/6 -> bedge, header, ave: 49, 103, 1.47573
#fbb: 333/1 -> bedge, header, ave: 0, 125492, 1
#fbb: 334/6 -> bedge, header, ave: 7, 125447, 1.00006
#fbb: 334/7 -> bedge, header, ave: 66272, 124125, 1.53391
#fbb: 335/1 -> bedge, header, ave: 20, 255480, 1.00008
#fbb: 335/2 -> bedge, header, ave: 167732, 252836, 1.6634
#fbb: 336/4 -> bedge, header, ave: 0, 2293, 1
#fbb: 336/5 -> bedge, header, ave: 2292, 2293, 1.99956
#fbb: 340/4 -> bedge, header, ave: 0, 651, 1
#fbb: 341/1 -> bedge, header, ave: 6236, 2071, 4.01111
#fbb: 342/7 -> bedge, header, ave: 8, 1, 9
====
 dynamic loop num   : 57.6924 (sum_ave/num: 2942.31/51)
 loop num (weighted): 2.45074
max loop ave: 1000
====
#fbb: 364/1 -> bedge, header, ave: 1059, 158, 7.70253
#fbb: 369/10 -> bedge, header, ave: 256, 164, 2.56098
#fbb: 369/23 -> bedge, header, ave: 984, 7, 141.571
#fbb: 369/31 -> bedge, header, ave: 0, 18, 1
#fbb: 372/4 -> bedge, header, ave: 218, 180, 2.21111
#fbb: 376/12 -> bedge, header, ave: 0, 2, 1
#fbb: 388/0 -> bedge, header, ave: 6176, 4932, 2.25223
#fbb: 390/26 -> bedge, header, ave: 0, 20, 1
#fbb: 395/25 -> bedge, header, ave: 4, 4, 2
#fbb: 396/18 -> bedge, header, ave: 0, 1, 1
#fbb: 397/16 -> bedge, header, ave: 0, 1, 1
#fbb: 400/1 -> bedge, header, ave: 0, 1, 1
#fbb: 406/5 -> bedge, header, ave: 3433, 17, 202.941
#fbb: 406/7 -> bedge, header, ave: 26, 13, 3
#fbb: 406/10 -> bedge, header, ave: 6, 2, 4
#fbb: 408/37 -> bedge, header, ave: 11, 3, 4.66667
#fbb: 408/263 -> bedge, header, ave: 8, 1, 9
#fbb: 417/2 -> bedge, header, ave: 2, 2, 2
#fbb: 434/4 -> bedge, header, ave: 7, 1, 8
#fbb: 442/1 -> bedge, header, ave: 11, 12, 1.91667
#fbb: 442/5 -> bedge, header, ave: 10, 9, 2.11111
#fbb: 443/48 -> bedge, header, ave: 0, 1, 1
#fbb: 443/49 -> bedge, header, ave: 0, 1, 1
 dynamic loop num   : 45.2195 (sum_ave/num: 3346.25/74)
 loop num (weighted): 2.45331

instance count      : 84760117
clock cycle         : 17808552
ipc (instance/clock): 4.75952

# Bb_Statistic::print() statistic
return 0
