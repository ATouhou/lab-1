/home/palmerc/Development/nakajima/newsim/src/newsim -dir /home/palmerc/Development/nakajima/newsim/data/m88ksim -sim_type oracle -sp_reorder -statistic -updrive /bin/sh -c 'cat ctl.in | /home/palmerc/Development/nakajima/newsim/SS/sim-bpred -redir:prog /home/palmerc/Development/nakajima/newsim/log/m88ksim/prog -redir:sim /home/palmerc/Development/nakajima/newsim/log/m88ksim/sim /home/palmerc/Development/nakajima/newsim/ss_precompiled_spec/m88ksim.ss'

# set dir: /home/palmerc/Development/nakajima/newsim/data/m88ksim/

$ ------Sim_Model::print_argment()-----
$ <04/02/12 16:08:12>	 ADD: MD predict, FIXED: setjmp/longjmp, unroll
$            FIX: 
$ NO REEXEC MODE
$ trace limit: 100000000
$ print freq: 1000000
$ func_call_inline
$ loop unroll
$ perfect disambiguate (SP_REG, GP_REG)
$ 2lev brn_pred
$ simulation type: oracle
$ print statistic
$ SP reorder
$ reg perfect
$ -------------------------------------

# Program_Info::file_read() init end
# Loop::allocate_loop_c() init end
# Loop::file_read() init end

@ TC 1000000 cycle: 20530 ipc: 42.5307
@ TC 2000000 cycle: 40860 ipc: 43.0907
@ TC 3000000 cycle: 45798 ipc: 54.1058
@ TC 4000000 cycle: 55722 ipc: 58.2121
@ TC 5000000 cycle: 76935 ipc: 53.7364
@ TC 6000000 cycle: 98123 ipc: 51.2084
@ TC 7000000 cycle: 119336 ipc: 49.568
@ TC 8000000 cycle: 140549 ipc: 48.4227
@ TC 9000000 cycle: 161737 ipc: 47.5851
@ TC 10000000 cycle: 182950 ipc: 46.9352
@ TC 11000000 cycle: 204138 ipc: 46.426
@ TC 12000000 cycle: 225351 ipc: 46.0075
@ TC 13000000 cycle: 246564 ipc: 45.6609
@ TC 14000000 cycle: 267752 ipc: 45.3735
@ TC 15000000 cycle: 288965 ipc: 45.1244
@ TC 16000000 cycle: 310178 ipc: 44.9094
@ TC 17000000 cycle: 331366 ipc: 44.7252
@ TC 18000000 cycle: 352579 ipc: 44.56
@ TC 19000000 cycle: 373792 ipc: 44.4136
@ TC 20000000 cycle: 394980 ipc: 44.2857
@ TC 21000000 cycle: 416193 ipc: 44.1682
@ TC 22000000 cycle: 437381 ipc: 44.0645
@ TC 23000000 cycle: 458594 ipc: 43.9681
@ TC 24000000 cycle: 479807 ipc: 43.8802
@ TC 25000000 cycle: 500997 ipc: 43.8017
@ TC 26000000 cycle: 522208 ipc: 43.7279
@ TC 27000000 cycle: 543421 ipc: 43.6597
@ TC 28000000 cycle: 564612 ipc: 43.5982
@ TC 29000000 cycle: 585825 ipc: 43.5396
@ TC 30000000 cycle: 607038 ipc: 43.4851
@ TC 31000000 cycle: 628226 ipc: 43.436
@ TC 32000000 cycle: 649439 ipc: 43.3885
@ TC 33000000 cycle: 670624 ipc: 43.3457
@ TC 34000000 cycle: 691840 ipc: 43.3036
@ TC 35000000 cycle: 713053 ipc: 43.2643
@ TC 36000000 cycle: 734241 ipc: 43.2286
@ TC 37000000 cycle: 755454 ipc: 43.1936
@ TC 38000000 cycle: 776667 ipc: 43.1604
@ TC 39000000 cycle: 797855 ipc: 43.1304
@ TC 40000000 cycle: 819068 ipc: 43.1006
@ TC 41000000 cycle: 840281 ipc: 43.0723
@ TC 42000000 cycle: 861469 ipc: 43.0466
@ TC 43000000 cycle: 882682 ipc: 43.021
@ TC 44000000 cycle: 903895 ipc: 42.9965
@ TC 45000000 cycle: 925083 ipc: 42.9744
@ TC 46000000 cycle: 946296 ipc: 42.9521
@ TC 47000000 cycle: 968226 ipc: 42.8948
@ TC 48000000 cycle: 1019774 ipc: 41.5394
@ TC 49000000 cycle: 1116881 ipc: 38.6658
@ TC 50000000 cycle: 1214315 ipc: 36.2423
@ TC 51000000 cycle: 1311674 ipc: 34.1807
@ TC 52000000 cycle: 1408815 ipc: 32.4089
@ TC 53000000 cycle: 1508309 ipc: 30.8183
@ TC 54000000 cycle: 1605177 ipc: 29.4719
@ TC 55000000 cycle: 1701956 ipc: 28.2802
@ TC 56000000 cycle: 1802310 ipc: 27.1638
@ TC 57000000 cycle: 1899134 ipc: 26.2128
@ TC 58000000 cycle: 1995923 ipc: 25.3546
@ TC 59000000 cycle: 2095437 ipc: 24.5444
@ TC 60000000 cycle: 2192286 ipc: 23.8359
@ TC 61000000 cycle: 2289928 ipc: 23.1797
@ TC 62000000 cycle: 2387381 ipc: 22.5788
@ TC 63000000 cycle: 2484548 ipc: 22.0275
@ TC 64000000 cycle: 2583945 ipc: 21.4996
@ TC 65000000 cycle: 2680794 ipc: 21.0303
@ TC 66000000 cycle: 2777531 ipc: 20.5945
@ TC 67000000 cycle: 2877946 ipc: 20.1629
@ TC 68000000 cycle: 2974758 ipc: 19.7837
@ TC 69000000 cycle: 3068365 ipc: 19.4483
@ TC 70000000 cycle: 3164772 ipc: 19.1163
@ TC 71000000 cycle: 3263167 ipc: 18.7926
@ TC 72000000 cycle: 3360237 ipc: 18.495
@ TC 73000000 cycle: 3458754 ipc: 18.2067
@ TC 74000000 cycle: 3555601 ipc: 17.9426
@ TC 75000000 cycle: 3652352 ipc: 17.6929
@ TC 76000000 cycle: 3752728 ipc: 17.4397
@ TC 77000000 cycle: 3849565 ipc: 17.2151
@ TC 78000000 cycle: 3946316 ipc: 17.0019
@ TC 79000000 cycle: 4046722 ipc: 16.7841
@ TC 80000000 cycle: 4142988 ipc: 16.593
@ TC 81000000 cycle: 4240312 ipc: 16.4066
@ TC 82000000 cycle: 4338789 ipc: 16.2243
@ TC 83000000 cycle: 4434850 ipc: 16.0586
@ TC 84000000 cycle: 4534330 ipc: 15.8883
@ TC 85000000 cycle: 4631107 ipc: 15.7343
@ TC 86000000 cycle: 4727910 ipc: 15.5864
@ TC 87000000 cycle: 4828301 ipc: 15.4334
@ TC 88000000 cycle: 4925087 ipc: 15.2974
@ TC 89000000 cycle: 5021899 ipc: 15.1666
@ TC 90000000 cycle: 5121484 ipc: 15.0329
@ TC 91000000 cycle: 5218600 ipc: 14.911
@ TC 92000000 cycle: 5315886 ipc: 14.7932
@ TC 93000000 cycle: 5413415 ipc: 14.679
@ TC 94000000 cycle: 5510546 ipc: 14.5699
@ TC 95000000 cycle: 5609877 ipc: 14.459
@ TC 96000000 cycle: 5706755 ipc: 14.3579
@ TC 97000000 cycle: 5803518 ipc: 14.2605
@ TC 98000000 cycle: 5903877 ipc: 14.158
@ TC 99000000 cycle: 6000696 ipc: 14.0669
@ TC 100000000 cycle: 6097503 ipc: 13.9787
# Re_Exec::check_mode() trace lim :100000000

# print_result_data()
trace count         : 100000000
 nop count          : 91
 call/return count  : 4771409
 con branch count   : 13943090
 other branch count : 1045804
 load count         : 18350711
 store count        : 11143592
 other count        : 50745303
inst (trace - nop)  : 99999909

<func inline>
 inline call count  : 2385707
 inline return count: 2385702
 inline other count : 1258170

<perfect memory disambiguate (SP_REG, GP_REG)>
 sp load count      : 2505864
 sp store count     : 2538526
 gp load count      : 2373318
 gp store count     : 270533

<loop unroll>
 loop unroll branch : 3670035
 loop induction val : 5064906
 (loop const val    : 5226047 )
#fbb: 3/2 -> bedge, header, ave: 1, 1, 2
#fbb: 3/5 -> bedge, header, ave: 1034242, 1010, 1025
#fbb: 32/2 -> bedge, header, ave: 648060, 43204, 16
#fbb: 33/1 -> bedge, header, ave: 15, 1, 16
#fbb: 40/4 -> bedge, header, ave: 0, 6, 1
#fbb: 41/1 -> bedge, header, ave: 114, 6, 20
#fbb: 42/1 -> bedge, header, ave: 5, 6, 1.83333
#fbb: 43/1 -> bedge, header, ave: 56, 6, 10.3333
#fbb: 72/2 -> bedge, header, ave: 7, 1, 8
#fbb: 72/4 -> bedge, header, ave: 7, 1, 8
#fbb: 72/6 -> bedge, header, ave: 9, 1, 10
#fbb: 72/9 -> bedge, header, ave: 55, 1, 56
#fbb: 73/1 -> bedge, header, ave: 510, 2, 256
#fbb: 73/2 -> bedge, header, ave: 1536, 512, 4
#fbb: 73/5 -> bedge, header, ave: 510, 2, 256
#fbb: 79/17 -> bedge, header, ave: 1, 2, 1.5
#fbb: 83/1 -> bedge, header, ave: 63, 1, 64
#fbb: 83/3 -> bedge, header, ave: 1070, 64, 17.7188
#fbb: 83/7 -> bedge, header, ave: 63, 1, 64
#fbb: 83/9 -> bedge, header, ave: 585, 64, 10.1406
#fbb: 145/5 -> bedge, header, ave: 31989, 1, 31990
#fbb: 159/36 -> bedge, header, ave: 0, 3581, 1
#fbb: 161/1 -> bedge, header, ave: 18838, 44425, 1.42404
#fbb: 164/14 -> bedge, header, ave: 10, 6, 2.66667
#fbb: 165/1 -> bedge, header, ave: 19, 1, 20
#fbb: 171/42 -> bedge, header, ave: 2, 1, 3
#fbb: 171/43 -> bedge, header, ave: 1, 2, 1.5
#fbb: 171/50 -> bedge, header, ave: 2, 1, 3
#fbb: 171/76 -> bedge, header, ave: 1023, 1, 1024
#fbb: 171/84 -> bedge, header, ave: 1206, 3, 403
#fbb: 174/11 -> bedge, header, ave: 0, 1209, 1
#fbb: 175/2 -> bedge, header, ave: 0, 1, 1
#fbb: 175/50 -> bedge, header, ave: 5, 1, 6
#fbb: 181/1 -> bedge, header, ave: 3542, 506, 8
#fbb: 181/3 -> bedge, header, ave: 1518, 506, 4
#fbb: 181/4 -> bedge, header, ave: 6072, 2024, 4
#fbb: 181/7 -> bedge, header, ave: 2530, 506, 6
#fbb: 183/4 -> bedge, header, ave: 0, 1, 1
#fbb: 221/3 -> bedge, header, ave: 27473, 31990, 1.8588
#fbb: 223/1 -> bedge, header, ave: 991659, 31989, 32
#fbb: 223/11 -> bedge, header, ave: 127956, 31989, 5
#fbb: 230/12 -> bedge, header, ave: 414, 2, 208
#fbb: 231/12 -> bedge, header, ave: 460, 1, 461
#fbb: 231/23 -> bedge, header, ave: 207, 1, 208
#fbb: 231/24 -> bedge, header, ave: 21528, 208, 104.5
#fbb: 232/0 -> bedge, header, ave: 2068, 208, 10.9423
#fbb: 235/1 -> bedge, header, ave: 122, 2, 62
#fbb: 236/0 -> bedge, header, ave: 0, 1, 1
#fbb: 247/1 -> bedge, header, ave: 618254, 312974, 2.97542
#fbb: 248/1 -> bedge, header, ave: 78, 1, 79
#fbb: 248/4 -> bedge, header, ave: 193, 1, 194
====
 dynamic loop num   : 719.576 (sum_ave/num: 36698.4/51)
 loop num (weighted): 7.98981
max loop ave: 31990
====
#fbb: 259/0 -> bedge, header, ave: 188, 483, 1.38923
#fbb: 260/1 -> bedge, header, ave: 85, 67, 2.26866
#fbb: 260/5 -> bedge, header, ave: 114, 49, 3.32653
#fbb: 264/25 -> bedge, header, ave: 82, 82, 2
#fbb: 265/18 -> bedge, header, ave: 0, 1, 1
#fbb: 266/16 -> bedge, header, ave: 0, 1, 1
#fbb: 266/27 -> bedge, header, ave: 178, 64, 3.78125
#fbb: 276/5 -> bedge, header, ave: 0, 2, 1
#fbb: 276/8 -> bedge, header, ave: 2, 3, 1.66667
#fbb: 276/25 -> bedge, header, ave: 14, 1, 15
#fbb: 278/12 -> bedge, header, ave: 1, 1, 2
#fbb: 280/1 -> bedge, header, ave: 84, 8, 11.5
#fbb: 281/17 -> bedge, header, ave: 17, 59, 1.28814
#fbb: 281/25 -> bedge, header, ave: 21, 2, 11.5
#fbb: 285/10 -> bedge, header, ave: 13, 3, 5.33333
#fbb: 285/23 -> bedge, header, ave: 298, 3, 100.333
#fbb: 285/31 -> bedge, header, ave: 7, 9, 1.77778
#fbb: 287/4 -> bedge, header, ave: 6, 4, 2.5
#fbb: 294/13 -> bedge, header, ave: 45, 5, 10
#fbb: 294/39 -> bedge, header, ave: 12, 1, 13
#fbb: 295/2 -> bedge, header, ave: 0, 41, 1
#fbb: 296/48 -> bedge, header, ave: 0, 8, 1
#fbb: 296/49 -> bedge, header, ave: 0, 8, 1
#fbb: 302/37 -> bedge, header, ave: 183, 31, 6.90323
#fbb: 302/72 -> bedge, header, ave: 0, 10, 1
#fbb: 302/81 -> bedge, header, ave: 3, 3, 2
#fbb: 302/132 -> bedge, header, ave: 47, 10, 5.7
#fbb: 302/196 -> bedge, header, ave: 15, 8, 2.875
#fbb: 302/203 -> bedge, header, ave: 47, 10, 5.7
#fbb: 302/263 -> bedge, header, ave: 11, 3, 4.66667
#fbb: 305/1 -> bedge, header, ave: 0, 1, 1
#fbb: 316/5 -> bedge, header, ave: 124358, 9, 13818.6
#fbb: 316/7 -> bedge, header, ave: 27, 7, 4.85714
#fbb: 316/10 -> bedge, header, ave: 3, 2, 2.5
#fbb: 322/2 -> bedge, header, ave: 38, 21, 2.80952
#fbb: 322/9 -> bedge, header, ave: 9, 8, 2.125
#fbb: 325/2 -> bedge, header, ave: 2, 1, 3
#fbb: 327/6 -> bedge, header, ave: 40, 1, 41
#fbb: 341/4 -> bedge, header, ave: 7, 1, 8
 dynamic loop num   : 564.508 (sum_ave/num: 50805.8/90)
 loop num (weighted): 8.22354

instance count      : 85235389
clock cycle         : 6097503
ipc (instance/clock): 13.9787

# Bb_Statistic::print() statistic
return 0
